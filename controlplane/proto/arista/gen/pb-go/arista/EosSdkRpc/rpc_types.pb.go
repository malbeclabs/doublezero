// Copyright (c) 2021 Arista Networks, Inc.  All rights reserved.
// Arista Networks, Inc. Confidential and Proprietary.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: rpc_types.proto

package EosSdkRpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// The status codes below match gRPC StatusCodes
// in both naming and numeric values.
type RpcStatusCodes int32

const (
	RpcStatusCodes_RPC_STATUS_OK                  RpcStatusCodes = 0
	RpcStatusCodes_RPC_STATUS_CANCELLED           RpcStatusCodes = 1
	RpcStatusCodes_RPC_STATUS_UNKNOWN             RpcStatusCodes = 2
	RpcStatusCodes_RPC_STATUS_INVALID_ARGUMENT    RpcStatusCodes = 3
	RpcStatusCodes_RPC_STATUS_DEADLINE_EXCEEDED   RpcStatusCodes = 4
	RpcStatusCodes_RPC_STATUS_NOT_FOUND           RpcStatusCodes = 5
	RpcStatusCodes_RPC_STATUS_ALREDY_EXISTS       RpcStatusCodes = 6
	RpcStatusCodes_RPC_STATUS_ALREADY_EXISTS      RpcStatusCodes = 6
	RpcStatusCodes_RPC_STATUS_PERMISSION_DENIED   RpcStatusCodes = 7
	RpcStatusCodes_RPC_STATUS_UNAUTHENTICATED     RpcStatusCodes = 8
	RpcStatusCodes_RPC_STATUS_RESOURCE_EXHAUSTED  RpcStatusCodes = 9
	RpcStatusCodes_RPC_STATUS_FAILED_PRECONDITION RpcStatusCodes = 10
	RpcStatusCodes_RPC_STATUS_ABORTED             RpcStatusCodes = 11
	RpcStatusCodes_RPC_STATUS_OUT_OF_RANGE        RpcStatusCodes = 12
	RpcStatusCodes_RPC_STATUS_UNIMPLEMENTED       RpcStatusCodes = 13
	RpcStatusCodes_RPC_STATUS_INTERNAL            RpcStatusCodes = 14
	RpcStatusCodes_RPC_STATUS_UNAVAILABLE         RpcStatusCodes = 15
	RpcStatusCodes_RPC_STATUS_DATA_LOSS           RpcStatusCodes = 16
	RpcStatusCodes_RPC_DO_NOT_USE                 RpcStatusCodes = 17
)

// Enum value maps for RpcStatusCodes.
var (
	RpcStatusCodes_name = map[int32]string{
		0: "RPC_STATUS_OK",
		1: "RPC_STATUS_CANCELLED",
		2: "RPC_STATUS_UNKNOWN",
		3: "RPC_STATUS_INVALID_ARGUMENT",
		4: "RPC_STATUS_DEADLINE_EXCEEDED",
		5: "RPC_STATUS_NOT_FOUND",
		6: "RPC_STATUS_ALREDY_EXISTS",
		// Duplicate value: 6: "RPC_STATUS_ALREADY_EXISTS",
		7:  "RPC_STATUS_PERMISSION_DENIED",
		8:  "RPC_STATUS_UNAUTHENTICATED",
		9:  "RPC_STATUS_RESOURCE_EXHAUSTED",
		10: "RPC_STATUS_FAILED_PRECONDITION",
		11: "RPC_STATUS_ABORTED",
		12: "RPC_STATUS_OUT_OF_RANGE",
		13: "RPC_STATUS_UNIMPLEMENTED",
		14: "RPC_STATUS_INTERNAL",
		15: "RPC_STATUS_UNAVAILABLE",
		16: "RPC_STATUS_DATA_LOSS",
		17: "RPC_DO_NOT_USE",
	}
	RpcStatusCodes_value = map[string]int32{
		"RPC_STATUS_OK":                  0,
		"RPC_STATUS_CANCELLED":           1,
		"RPC_STATUS_UNKNOWN":             2,
		"RPC_STATUS_INVALID_ARGUMENT":    3,
		"RPC_STATUS_DEADLINE_EXCEEDED":   4,
		"RPC_STATUS_NOT_FOUND":           5,
		"RPC_STATUS_ALREDY_EXISTS":       6,
		"RPC_STATUS_ALREADY_EXISTS":      6,
		"RPC_STATUS_PERMISSION_DENIED":   7,
		"RPC_STATUS_UNAUTHENTICATED":     8,
		"RPC_STATUS_RESOURCE_EXHAUSTED":  9,
		"RPC_STATUS_FAILED_PRECONDITION": 10,
		"RPC_STATUS_ABORTED":             11,
		"RPC_STATUS_OUT_OF_RANGE":        12,
		"RPC_STATUS_UNIMPLEMENTED":       13,
		"RPC_STATUS_INTERNAL":            14,
		"RPC_STATUS_UNAVAILABLE":         15,
		"RPC_STATUS_DATA_LOSS":           16,
		"RPC_DO_NOT_USE":                 17,
	}
)

func (x RpcStatusCodes) Enum() *RpcStatusCodes {
	p := new(RpcStatusCodes)
	*p = x
	return p
}

func (x RpcStatusCodes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcStatusCodes) Descriptor() protoreflect.EnumDescriptor {
	return file_rpc_types_proto_enumTypes[0].Descriptor()
}

func (RpcStatusCodes) Type() protoreflect.EnumType {
	return &file_rpc_types_proto_enumTypes[0]
}

func (x RpcStatusCodes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcStatusCodes.Descriptor instead.
func (RpcStatusCodes) EnumDescriptor() ([]byte, []int) {
	return file_rpc_types_proto_rawDescGZIP(), []int{0}
}

type RpcResponseStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      RpcStatusCodes `protobuf:"varint,1,opt,name=status,proto3,enum=eos.remote.RpcStatusCodes" json:"status,omitempty"`
	ErrorString string         `protobuf:"bytes,2,opt,name=error_string,json=errorString,proto3" json:"error_string,omitempty"`
}

func (x *RpcResponseStatus) Reset() {
	*x = RpcResponseStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcResponseStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcResponseStatus) ProtoMessage() {}

func (x *RpcResponseStatus) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcResponseStatus.ProtoReflect.Descriptor instead.
func (*RpcResponseStatus) Descriptor() ([]byte, []int) {
	return file_rpc_types_proto_rawDescGZIP(), []int{0}
}

func (x *RpcResponseStatus) GetStatus() RpcStatusCodes {
	if x != nil {
		return x.Status
	}
	return RpcStatusCodes_RPC_STATUS_OK
}

func (x *RpcResponseStatus) GetErrorString() string {
	if x != nil {
		return x.ErrorString
	}
	return ""
}

type BulkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Processed uint64             `protobuf:"varint,1,opt,name=processed,proto3" json:"processed,omitempty"`
	Status    *RpcResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BulkResponse) Reset() {
	*x = BulkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkResponse) ProtoMessage() {}

func (x *BulkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkResponse.ProtoReflect.Descriptor instead.
func (*BulkResponse) Descriptor() ([]byte, []int) {
	return file_rpc_types_proto_rawDescGZIP(), []int{1}
}

func (x *BulkResponse) GetProcessed() uint64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *BulkResponse) GetStatus() *RpcResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_rpc_types_proto protoreflect.FileDescriptor

var file_rpc_types_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x22, 0x6a, 0x0a,
	0x11, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x63, 0x0a, 0x0c, 0x42, 0x75, 0x6c,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0xb2,
	0x04, 0x0a, 0x0e, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x50, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x4f, 0x4b, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x50, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x16,
	0x0a, 0x12, 0x52, 0x50, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x50, 0x43, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x52, 0x47,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x50, 0x43, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x41, 0x44, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x45,
	0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x50, 0x43,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x05, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x50, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10,
	0x06, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x50, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x06,
	0x12, 0x20, 0x0a, 0x1c, 0x52, 0x50, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50,
	0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44,
	0x10, 0x07, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x50, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44,
	0x10, 0x08, 0x12, 0x21, 0x0a, 0x1d, 0x52, 0x50, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x45, 0x58, 0x48, 0x41, 0x55, 0x53,
	0x54, 0x45, 0x44, 0x10, 0x09, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x50, 0x43, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x50, 0x52, 0x45, 0x43, 0x4f,
	0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x50, 0x43,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10,
	0x0b, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x50, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x0c, 0x12, 0x1c,
	0x0a, 0x18, 0x52, 0x50, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x49,
	0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x45, 0x44, 0x10, 0x0d, 0x12, 0x17, 0x0a, 0x13,
	0x52, 0x50, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x4e, 0x41, 0x4c, 0x10, 0x0e, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x50, 0x43, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x0f, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x50, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x4c, 0x4f, 0x53, 0x53, 0x10, 0x10, 0x12, 0x12, 0x0a, 0x0e, 0x52,
	0x50, 0x43, 0x5f, 0x44, 0x4f, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x10, 0x11, 0x1a,
	0x02, 0x10, 0x01, 0x42, 0x12, 0x5a, 0x10, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2f, 0x45, 0x6f,
	0x73, 0x53, 0x64, 0x6b, 0x52, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_types_proto_rawDescOnce sync.Once
	file_rpc_types_proto_rawDescData = file_rpc_types_proto_rawDesc
)

func file_rpc_types_proto_rawDescGZIP() []byte {
	file_rpc_types_proto_rawDescOnce.Do(func() {
		file_rpc_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_types_proto_rawDescData)
	})
	return file_rpc_types_proto_rawDescData
}

var file_rpc_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rpc_types_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_rpc_types_proto_goTypes = []interface{}{
	(RpcStatusCodes)(0),       // 0: eos.remote.RpcStatusCodes
	(*RpcResponseStatus)(nil), // 1: eos.remote.RpcResponseStatus
	(*BulkResponse)(nil),      // 2: eos.remote.BulkResponse
}
var file_rpc_types_proto_depIdxs = []int32{
	0, // 0: eos.remote.RpcResponseStatus.status:type_name -> eos.remote.RpcStatusCodes
	1, // 1: eos.remote.BulkResponse.status:type_name -> eos.remote.RpcResponseStatus
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_rpc_types_proto_init() }
func file_rpc_types_proto_init() {
	if File_rpc_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcResponseStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_types_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_types_proto_goTypes,
		DependencyIndexes: file_rpc_types_proto_depIdxs,
		EnumInfos:         file_rpc_types_proto_enumTypes,
		MessageInfos:      file_rpc_types_proto_msgTypes,
	}.Build()
	File_rpc_types_proto = out.File
	file_rpc_types_proto_rawDesc = nil
	file_rpc_types_proto_goTypes = nil
	file_rpc_types_proto_depIdxs = nil
}
