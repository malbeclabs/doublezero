// Copyright (c) 2022 Arista Networks, Inc.  All rights reserved.
// Arista Networks, Inc. Confidential and Proprietary.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: eth_lag_intf.proto

package EosSdkRpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EthLagIntfUpdateField int32

const (
	EthLagIntfUpdateField_ETH_LAG_INTF_ALL_FIELDS       EthLagIntfUpdateField = 0
	EthLagIntfUpdateField_ETH_LAG_INTF_FULL_MEMBER_LIST EthLagIntfUpdateField = 1
	EthLagIntfUpdateField_ETH_LAG_INTF_SPEED            EthLagIntfUpdateField = 2
)

// Enum value maps for EthLagIntfUpdateField.
var (
	EthLagIntfUpdateField_name = map[int32]string{
		0: "ETH_LAG_INTF_ALL_FIELDS",
		1: "ETH_LAG_INTF_FULL_MEMBER_LIST",
		2: "ETH_LAG_INTF_SPEED",
	}
	EthLagIntfUpdateField_value = map[string]int32{
		"ETH_LAG_INTF_ALL_FIELDS":       0,
		"ETH_LAG_INTF_FULL_MEMBER_LIST": 1,
		"ETH_LAG_INTF_SPEED":            2,
	}
)

func (x EthLagIntfUpdateField) Enum() *EthLagIntfUpdateField {
	p := new(EthLagIntfUpdateField)
	*p = x
	return p
}

func (x EthLagIntfUpdateField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EthLagIntfUpdateField) Descriptor() protoreflect.EnumDescriptor {
	return file_eth_lag_intf_proto_enumTypes[0].Descriptor()
}

func (EthLagIntfUpdateField) Type() protoreflect.EnumType {
	return &file_eth_lag_intf_proto_enumTypes[0]
}

func (x EthLagIntfUpdateField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EthLagIntfUpdateField.Descriptor instead.
func (EthLagIntfUpdateField) EnumDescriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{0}
}

// *
// Possible events for LAG interfaces.
type EthLagIntfEvents int32

const (
	EthLagIntfEvents_ETH_LAG_INTF_EVENT_NONE       EthLagIntfEvents = 0
	EthLagIntfEvents_ETH_LAG_INTF_EVENT_CREATED    EthLagIntfEvents = 1
	EthLagIntfEvents_ETH_LAG_INTF_EVENT_DELETED    EthLagIntfEvents = 2
	EthLagIntfEvents_ETH_LAG_INTF_EVENT_MEMBER_SET EthLagIntfEvents = 3
	EthLagIntfEvents_ETH_LAG_INTF_EVENT_MEMBER_DEL EthLagIntfEvents = 4
	EthLagIntfEvents_ETH_LAG_INTF_EVENT_SPEED      EthLagIntfEvents = 5
	// Dump message is not an actual event and gets prefixed as MESSAGE instead.
	EthLagIntfEvents_ETH_LAG_INTF_MESSAGE_DUMP EthLagIntfEvents = 6
)

// Enum value maps for EthLagIntfEvents.
var (
	EthLagIntfEvents_name = map[int32]string{
		0: "ETH_LAG_INTF_EVENT_NONE",
		1: "ETH_LAG_INTF_EVENT_CREATED",
		2: "ETH_LAG_INTF_EVENT_DELETED",
		3: "ETH_LAG_INTF_EVENT_MEMBER_SET",
		4: "ETH_LAG_INTF_EVENT_MEMBER_DEL",
		5: "ETH_LAG_INTF_EVENT_SPEED",
		6: "ETH_LAG_INTF_MESSAGE_DUMP",
	}
	EthLagIntfEvents_value = map[string]int32{
		"ETH_LAG_INTF_EVENT_NONE":       0,
		"ETH_LAG_INTF_EVENT_CREATED":    1,
		"ETH_LAG_INTF_EVENT_DELETED":    2,
		"ETH_LAG_INTF_EVENT_MEMBER_SET": 3,
		"ETH_LAG_INTF_EVENT_MEMBER_DEL": 4,
		"ETH_LAG_INTF_EVENT_SPEED":      5,
		"ETH_LAG_INTF_MESSAGE_DUMP":     6,
	}
)

func (x EthLagIntfEvents) Enum() *EthLagIntfEvents {
	p := new(EthLagIntfEvents)
	*p = x
	return p
}

func (x EthLagIntfEvents) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EthLagIntfEvents) Descriptor() protoreflect.EnumDescriptor {
	return file_eth_lag_intf_proto_enumTypes[1].Descriptor()
}

func (EthLagIntfEvents) Type() protoreflect.EnumType {
	return &file_eth_lag_intf_proto_enumTypes[1]
}

func (x EthLagIntfEvents) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EthLagIntfEvents.Descriptor instead.
func (EthLagIntfEvents) EnumDescriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{1}
}

type EthLagIntfFieldsControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []EthLagIntfUpdateField `protobuf:"varint,1,rep,packed,name=fields,proto3,enum=eos.remote.EthLagIntfUpdateField" json:"fields,omitempty"`
}

func (x *EthLagIntfFieldsControl) Reset() {
	*x = EthLagIntfFieldsControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfFieldsControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfFieldsControl) ProtoMessage() {}

func (x *EthLagIntfFieldsControl) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfFieldsControl.ProtoReflect.Descriptor instead.
func (*EthLagIntfFieldsControl) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{0}
}

func (x *EthLagIntfFieldsControl) GetFields() []EthLagIntfUpdateField {
	if x != nil {
		return x.Fields
	}
	return nil
}

type EthLagIntfWatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Overloads:
	//
	//	*EthLagIntfWatchRequest_AllIntfs
	//	*EthLagIntfWatchRequest_EthLagIntfId
	Overloads isEthLagIntfWatchRequest_Overloads `protobuf_oneof:"overloads"`
	// Set to true if acknowledgment is desired.
	Ack bool `protobuf:"varint,4,opt,name=ack,proto3" json:"ack,omitempty"`
	// Specification of which fields to receive on dump.
	DumpFields *EthLagIntfFieldsControl `protobuf:"bytes,5,opt,name=dump_fields,json=dumpFields,proto3" json:"dump_fields,omitempty"`
}

func (x *EthLagIntfWatchRequest) Reset() {
	*x = EthLagIntfWatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfWatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfWatchRequest) ProtoMessage() {}

func (x *EthLagIntfWatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfWatchRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfWatchRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{1}
}

func (m *EthLagIntfWatchRequest) GetOverloads() isEthLagIntfWatchRequest_Overloads {
	if m != nil {
		return m.Overloads
	}
	return nil
}

func (x *EthLagIntfWatchRequest) GetAllIntfs() bool {
	if x, ok := x.GetOverloads().(*EthLagIntfWatchRequest_AllIntfs); ok {
		return x.AllIntfs
	}
	return false
}

func (x *EthLagIntfWatchRequest) GetEthLagIntfId() *IntfId {
	if x, ok := x.GetOverloads().(*EthLagIntfWatchRequest_EthLagIntfId); ok {
		return x.EthLagIntfId
	}
	return nil
}

func (x *EthLagIntfWatchRequest) GetAck() bool {
	if x != nil {
		return x.Ack
	}
	return false
}

func (x *EthLagIntfWatchRequest) GetDumpFields() *EthLagIntfFieldsControl {
	if x != nil {
		return x.DumpFields
	}
	return nil
}

type isEthLagIntfWatchRequest_Overloads interface {
	isEthLagIntfWatchRequest_Overloads()
}

type EthLagIntfWatchRequest_AllIntfs struct {
	// Watch all LAG interfaces.
	AllIntfs bool `protobuf:"varint,1,opt,name=all_intfs,json=allIntfs,proto3,oneof"`
}

type EthLagIntfWatchRequest_EthLagIntfId struct {
	// Watch a single interface.
	EthLagIntfId *IntfId `protobuf:"bytes,2,opt,name=eth_lag_intf_id,json=ethLagIntfId,proto3,oneof"`
}

func (*EthLagIntfWatchRequest_AllIntfs) isEthLagIntfWatchRequest_Overloads() {}

func (*EthLagIntfWatchRequest_EthLagIntfId) isEthLagIntfWatchRequest_Overloads() {}

type EthLagIntfWatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Descriptor of the event.
	Event EthLagIntfEvents `protobuf:"varint,1,opt,name=event,proto3,enum=eos.remote.EthLagIntfEvents" json:"event,omitempty"`
	// LAG interface that changed state.
	EthLagIntfId *IntfId `protobuf:"bytes,2,opt,name=eth_lag_intf_id,json=ethLagIntfId,proto3" json:"eth_lag_intf_id,omitempty"`
	// Member interface (if event is member related)
	MemberIntfId *IntfId `protobuf:"bytes,3,opt,name=member_intf_id,json=memberIntfId,proto3" json:"member_intf_id,omitempty"`
	// LAG interface speed, in Mbits/s (if event is ETH_LAG_INTF_EVENT_SPEED).
	//
	// Types that are assignable to SpeedPresent:
	//
	//	*EthLagIntfWatchResponse_Speed
	SpeedPresent isEthLagIntfWatchResponse_SpeedPresent `protobuf_oneof:"speed_present"`
	// This message is merely an ack and not an event.
	Ack bool `protobuf:"varint,5,opt,name=ack,proto3" json:"ack,omitempty"`
	// Types that are assignable to EthLagIntfPresent:
	//
	//	*EthLagIntfWatchResponse_EthLagIntf
	EthLagIntfPresent isEthLagIntfWatchResponse_EthLagIntfPresent `protobuf_oneof:"eth_lag_intf_present"`
	AllMemberIntfId   []*IntfId                                   `protobuf:"bytes,7,rep,name=all_member_intf_id,json=allMemberIntfId,proto3" json:"all_member_intf_id,omitempty"`
}

func (x *EthLagIntfWatchResponse) Reset() {
	*x = EthLagIntfWatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfWatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfWatchResponse) ProtoMessage() {}

func (x *EthLagIntfWatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfWatchResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfWatchResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{2}
}

func (x *EthLagIntfWatchResponse) GetEvent() EthLagIntfEvents {
	if x != nil {
		return x.Event
	}
	return EthLagIntfEvents_ETH_LAG_INTF_EVENT_NONE
}

func (x *EthLagIntfWatchResponse) GetEthLagIntfId() *IntfId {
	if x != nil {
		return x.EthLagIntfId
	}
	return nil
}

func (x *EthLagIntfWatchResponse) GetMemberIntfId() *IntfId {
	if x != nil {
		return x.MemberIntfId
	}
	return nil
}

func (m *EthLagIntfWatchResponse) GetSpeedPresent() isEthLagIntfWatchResponse_SpeedPresent {
	if m != nil {
		return m.SpeedPresent
	}
	return nil
}

func (x *EthLagIntfWatchResponse) GetSpeed() uint64 {
	if x, ok := x.GetSpeedPresent().(*EthLagIntfWatchResponse_Speed); ok {
		return x.Speed
	}
	return 0
}

func (x *EthLagIntfWatchResponse) GetAck() bool {
	if x != nil {
		return x.Ack
	}
	return false
}

func (m *EthLagIntfWatchResponse) GetEthLagIntfPresent() isEthLagIntfWatchResponse_EthLagIntfPresent {
	if m != nil {
		return m.EthLagIntfPresent
	}
	return nil
}

func (x *EthLagIntfWatchResponse) GetEthLagIntf() *EthLagIntf {
	if x, ok := x.GetEthLagIntfPresent().(*EthLagIntfWatchResponse_EthLagIntf); ok {
		return x.EthLagIntf
	}
	return nil
}

func (x *EthLagIntfWatchResponse) GetAllMemberIntfId() []*IntfId {
	if x != nil {
		return x.AllMemberIntfId
	}
	return nil
}

type isEthLagIntfWatchResponse_SpeedPresent interface {
	isEthLagIntfWatchResponse_SpeedPresent()
}

type EthLagIntfWatchResponse_Speed struct {
	Speed uint64 `protobuf:"varint,4,opt,name=speed,proto3,oneof"`
}

func (*EthLagIntfWatchResponse_Speed) isEthLagIntfWatchResponse_SpeedPresent() {}

type isEthLagIntfWatchResponse_EthLagIntfPresent interface {
	isEthLagIntfWatchResponse_EthLagIntfPresent()
}

type EthLagIntfWatchResponse_EthLagIntf struct {
	EthLagIntf *EthLagIntf `protobuf:"bytes,6,opt,name=eth_lag_intf,json=ethLagIntf,proto3,oneof"`
}

func (*EthLagIntfWatchResponse_EthLagIntf) isEthLagIntfWatchResponse_EthLagIntfPresent() {}

type EthLagIntfsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EthLagIntfsRequest) Reset() {
	*x = EthLagIntfsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfsRequest) ProtoMessage() {}

func (x *EthLagIntfsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfsRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfsRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{3}
}

type EthLagIntfsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the LAG interface.
	EthLagIntfId *IntfId `protobuf:"bytes,1,opt,name=eth_lag_intf_id,json=ethLagIntfId,proto3" json:"eth_lag_intf_id,omitempty"`
}

func (x *EthLagIntfsResponse) Reset() {
	*x = EthLagIntfsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfsResponse) ProtoMessage() {}

func (x *EthLagIntfsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfsResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfsResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{4}
}

func (x *EthLagIntfsResponse) GetEthLagIntfId() *IntfId {
	if x != nil {
		return x.EthLagIntfId
	}
	return nil
}

type EthLagIntfExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the LAG interface.
	EthLagIntfId *IntfId `protobuf:"bytes,1,opt,name=eth_lag_intf_id,json=ethLagIntfId,proto3" json:"eth_lag_intf_id,omitempty"`
}

func (x *EthLagIntfExistsRequest) Reset() {
	*x = EthLagIntfExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfExistsRequest) ProtoMessage() {}

func (x *EthLagIntfExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfExistsRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfExistsRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{5}
}

func (x *EthLagIntfExistsRequest) GetEthLagIntfId() *IntfId {
	if x != nil {
		return x.EthLagIntfId
	}
	return nil
}

type EthLagIntfExistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// True if LAG interface exists.
	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *EthLagIntfExistsResponse) Reset() {
	*x = EthLagIntfExistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfExistsResponse) ProtoMessage() {}

func (x *EthLagIntfExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfExistsResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfExistsResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{6}
}

func (x *EthLagIntfExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type EthLagIntfMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the LAG interface.
	EthLagIntfId *IntfId `protobuf:"bytes,1,opt,name=eth_lag_intf_id,json=ethLagIntfId,proto3" json:"eth_lag_intf_id,omitempty"`
}

func (x *EthLagIntfMembersRequest) Reset() {
	*x = EthLagIntfMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMembersRequest) ProtoMessage() {}

func (x *EthLagIntfMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMembersRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfMembersRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{7}
}

func (x *EthLagIntfMembersRequest) GetEthLagIntfId() *IntfId {
	if x != nil {
		return x.EthLagIntfId
	}
	return nil
}

type EthLagIntfMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the member.
	MemberIntfId *IntfId `protobuf:"bytes,1,opt,name=member_intf_id,json=memberIntfId,proto3" json:"member_intf_id,omitempty"`
}

func (x *EthLagIntfMembersResponse) Reset() {
	*x = EthLagIntfMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMembersResponse) ProtoMessage() {}

func (x *EthLagIntfMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMembersResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfMembersResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{8}
}

func (x *EthLagIntfMembersResponse) GetMemberIntfId() *IntfId {
	if x != nil {
		return x.MemberIntfId
	}
	return nil
}

type EthLagIntfIsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the LAG interface.
	EthLagIntfId *IntfId `protobuf:"bytes,1,opt,name=eth_lag_intf_id,json=ethLagIntfId,proto3" json:"eth_lag_intf_id,omitempty"`
}

func (x *EthLagIntfIsRequest) Reset() {
	*x = EthLagIntfIsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfIsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfIsRequest) ProtoMessage() {}

func (x *EthLagIntfIsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfIsRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfIsRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{9}
}

func (x *EthLagIntfIsRequest) GetEthLagIntfId() *IntfId {
	if x != nil {
		return x.EthLagIntfId
	}
	return nil
}

type EthLagIntfIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EthLagIntfIsResponse) Reset() {
	*x = EthLagIntfIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfIsResponse) ProtoMessage() {}

func (x *EthLagIntfIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfIsResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfIsResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{10}
}

type BulkEthLagIntfIsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of individual requests.
	Requests []*EthLagIntfIsRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BulkEthLagIntfIsRequest) Reset() {
	*x = BulkEthLagIntfIsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkEthLagIntfIsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkEthLagIntfIsRequest) ProtoMessage() {}

func (x *BulkEthLagIntfIsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkEthLagIntfIsRequest.ProtoReflect.Descriptor instead.
func (*BulkEthLagIntfIsRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{11}
}

func (x *BulkEthLagIntfIsRequest) GetRequests() []*EthLagIntfIsRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BulkEthLagIntfIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of successful requests.
	Processed uint64 `protobuf:"varint,1,opt,name=processed,proto3" json:"processed,omitempty"`
	// Cause of error (if any).
	Status *RpcResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BulkEthLagIntfIsResponse) Reset() {
	*x = BulkEthLagIntfIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkEthLagIntfIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkEthLagIntfIsResponse) ProtoMessage() {}

func (x *BulkEthLagIntfIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkEthLagIntfIsResponse.ProtoReflect.Descriptor instead.
func (*BulkEthLagIntfIsResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{12}
}

func (x *BulkEthLagIntfIsResponse) GetProcessed() uint64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *BulkEthLagIntfIsResponse) GetStatus() *RpcResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type EthLagIntfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the LAG interface.
	EthLagIntfId *IntfId `protobuf:"bytes,1,opt,name=eth_lag_intf_id,json=ethLagIntfId,proto3" json:"eth_lag_intf_id,omitempty"`
}

func (x *EthLagIntfRequest) Reset() {
	*x = EthLagIntfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfRequest) ProtoMessage() {}

func (x *EthLagIntfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{13}
}

func (x *EthLagIntfRequest) GetEthLagIntfId() *IntfId {
	if x != nil {
		return x.EthLagIntfId
	}
	return nil
}

type EthLagIntfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// LAG interface parameters.
	Response *EthLagIntf `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *EthLagIntfResponse) Reset() {
	*x = EthLagIntfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfResponse) ProtoMessage() {}

func (x *EthLagIntfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{14}
}

func (x *EthLagIntfResponse) GetResponse() *EthLagIntf {
	if x != nil {
		return x.Response
	}
	return nil
}

type EthLagIntfDelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the LAG interface.
	EthLagIntfId *IntfId `protobuf:"bytes,1,opt,name=eth_lag_intf_id,json=ethLagIntfId,proto3" json:"eth_lag_intf_id,omitempty"`
}

func (x *EthLagIntfDelRequest) Reset() {
	*x = EthLagIntfDelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfDelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfDelRequest) ProtoMessage() {}

func (x *EthLagIntfDelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfDelRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfDelRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{15}
}

func (x *EthLagIntfDelRequest) GetEthLagIntfId() *IntfId {
	if x != nil {
		return x.EthLagIntfId
	}
	return nil
}

type EthLagIntfDelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EthLagIntfDelResponse) Reset() {
	*x = EthLagIntfDelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfDelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfDelResponse) ProtoMessage() {}

func (x *EthLagIntfDelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfDelResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfDelResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{16}
}

type BulkEthLagIntfDelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of individual requests.
	Requests []*EthLagIntfDelRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BulkEthLagIntfDelRequest) Reset() {
	*x = BulkEthLagIntfDelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkEthLagIntfDelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkEthLagIntfDelRequest) ProtoMessage() {}

func (x *BulkEthLagIntfDelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkEthLagIntfDelRequest.ProtoReflect.Descriptor instead.
func (*BulkEthLagIntfDelRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{17}
}

func (x *BulkEthLagIntfDelRequest) GetRequests() []*EthLagIntfDelRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BulkEthLagIntfDelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of successful requests.
	Processed uint64 `protobuf:"varint,1,opt,name=processed,proto3" json:"processed,omitempty"`
	// Cause of error (if any).
	Status *RpcResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BulkEthLagIntfDelResponse) Reset() {
	*x = BulkEthLagIntfDelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkEthLagIntfDelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkEthLagIntfDelResponse) ProtoMessage() {}

func (x *BulkEthLagIntfDelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkEthLagIntfDelResponse.ProtoReflect.Descriptor instead.
func (*BulkEthLagIntfDelResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{18}
}

func (x *BulkEthLagIntfDelResponse) GetProcessed() uint64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *BulkEthLagIntfDelResponse) GetStatus() *RpcResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type EthLagIntfSpeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the LAG interface.
	EthLagIntfId *IntfId `protobuf:"bytes,1,opt,name=eth_lag_intf_id,json=ethLagIntfId,proto3" json:"eth_lag_intf_id,omitempty"`
}

func (x *EthLagIntfSpeedRequest) Reset() {
	*x = EthLagIntfSpeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfSpeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfSpeedRequest) ProtoMessage() {}

func (x *EthLagIntfSpeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfSpeedRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfSpeedRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{19}
}

func (x *EthLagIntfSpeedRequest) GetEthLagIntfId() *IntfId {
	if x != nil {
		return x.EthLagIntfId
	}
	return nil
}

type EthLagIntfSpeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface speed, in Mbits/s.
	Speed uint64 `protobuf:"varint,1,opt,name=speed,proto3" json:"speed,omitempty"`
}

func (x *EthLagIntfSpeedResponse) Reset() {
	*x = EthLagIntfSpeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfSpeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfSpeedResponse) ProtoMessage() {}

func (x *EthLagIntfSpeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfSpeedResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfSpeedResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{20}
}

func (x *EthLagIntfSpeedResponse) GetSpeed() uint64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

type EthLagIntfMinLinksIsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the LAG interface.
	EthLagIntfId *IntfId `protobuf:"bytes,1,opt,name=eth_lag_intf_id,json=ethLagIntfId,proto3" json:"eth_lag_intf_id,omitempty"`
	// Minimum number of links that need to be up for LAG to be considered up.
	MinLinks uint32 `protobuf:"varint,2,opt,name=min_links,json=minLinks,proto3" json:"min_links,omitempty"`
}

func (x *EthLagIntfMinLinksIsRequest) Reset() {
	*x = EthLagIntfMinLinksIsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMinLinksIsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMinLinksIsRequest) ProtoMessage() {}

func (x *EthLagIntfMinLinksIsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMinLinksIsRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfMinLinksIsRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{21}
}

func (x *EthLagIntfMinLinksIsRequest) GetEthLagIntfId() *IntfId {
	if x != nil {
		return x.EthLagIntfId
	}
	return nil
}

func (x *EthLagIntfMinLinksIsRequest) GetMinLinks() uint32 {
	if x != nil {
		return x.MinLinks
	}
	return 0
}

type EthLagIntfMinLinksIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EthLagIntfMinLinksIsResponse) Reset() {
	*x = EthLagIntfMinLinksIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMinLinksIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMinLinksIsResponse) ProtoMessage() {}

func (x *EthLagIntfMinLinksIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMinLinksIsResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfMinLinksIsResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{22}
}

type BulkEthLagIntfMinLinksIsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of individual requests.
	Requests []*EthLagIntfMinLinksIsRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BulkEthLagIntfMinLinksIsRequest) Reset() {
	*x = BulkEthLagIntfMinLinksIsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkEthLagIntfMinLinksIsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkEthLagIntfMinLinksIsRequest) ProtoMessage() {}

func (x *BulkEthLagIntfMinLinksIsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkEthLagIntfMinLinksIsRequest.ProtoReflect.Descriptor instead.
func (*BulkEthLagIntfMinLinksIsRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{23}
}

func (x *BulkEthLagIntfMinLinksIsRequest) GetRequests() []*EthLagIntfMinLinksIsRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BulkEthLagIntfMinLinksIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of successful requests.
	Processed uint64 `protobuf:"varint,1,opt,name=processed,proto3" json:"processed,omitempty"`
	// Cause of error (if any).
	Status *RpcResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BulkEthLagIntfMinLinksIsResponse) Reset() {
	*x = BulkEthLagIntfMinLinksIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkEthLagIntfMinLinksIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkEthLagIntfMinLinksIsResponse) ProtoMessage() {}

func (x *BulkEthLagIntfMinLinksIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkEthLagIntfMinLinksIsResponse.ProtoReflect.Descriptor instead.
func (*BulkEthLagIntfMinLinksIsResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{24}
}

func (x *BulkEthLagIntfMinLinksIsResponse) GetProcessed() uint64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *BulkEthLagIntfMinLinksIsResponse) GetStatus() *RpcResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type EthLagIntfMinLinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the LAG interface.
	EthLagIntfId *IntfId `protobuf:"bytes,1,opt,name=eth_lag_intf_id,json=ethLagIntfId,proto3" json:"eth_lag_intf_id,omitempty"`
}

func (x *EthLagIntfMinLinksRequest) Reset() {
	*x = EthLagIntfMinLinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMinLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMinLinksRequest) ProtoMessage() {}

func (x *EthLagIntfMinLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMinLinksRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfMinLinksRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{25}
}

func (x *EthLagIntfMinLinksRequest) GetEthLagIntfId() *IntfId {
	if x != nil {
		return x.EthLagIntfId
	}
	return nil
}

type EthLagIntfMinLinksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Minimum number of links that need to be up for LAG to be considered up.
	MinLinks uint32 `protobuf:"varint,1,opt,name=min_links,json=minLinks,proto3" json:"min_links,omitempty"`
}

func (x *EthLagIntfMinLinksResponse) Reset() {
	*x = EthLagIntfMinLinksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMinLinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMinLinksResponse) ProtoMessage() {}

func (x *EthLagIntfMinLinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMinLinksResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfMinLinksResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{26}
}

func (x *EthLagIntfMinLinksResponse) GetMinLinks() uint32 {
	if x != nil {
		return x.MinLinks
	}
	return 0
}

type EthLagIntfFallbackTypeIsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the LAG interface.
	EthLagIntfId *IntfId                `protobuf:"bytes,1,opt,name=eth_lag_intf_id,json=ethLagIntfId,proto3" json:"eth_lag_intf_id,omitempty"`
	FallbackType EthLagIntfFallbackType `protobuf:"varint,2,opt,name=fallback_type,json=fallbackType,proto3,enum=eos.remote.EthLagIntfFallbackType" json:"fallback_type,omitempty"`
}

func (x *EthLagIntfFallbackTypeIsRequest) Reset() {
	*x = EthLagIntfFallbackTypeIsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfFallbackTypeIsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfFallbackTypeIsRequest) ProtoMessage() {}

func (x *EthLagIntfFallbackTypeIsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfFallbackTypeIsRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfFallbackTypeIsRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{27}
}

func (x *EthLagIntfFallbackTypeIsRequest) GetEthLagIntfId() *IntfId {
	if x != nil {
		return x.EthLagIntfId
	}
	return nil
}

func (x *EthLagIntfFallbackTypeIsRequest) GetFallbackType() EthLagIntfFallbackType {
	if x != nil {
		return x.FallbackType
	}
	return EthLagIntfFallbackType_ETH_LAG_INTF_FALLBACK_NULL
}

type EthLagIntfFallbackTypeIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EthLagIntfFallbackTypeIsResponse) Reset() {
	*x = EthLagIntfFallbackTypeIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfFallbackTypeIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfFallbackTypeIsResponse) ProtoMessage() {}

func (x *EthLagIntfFallbackTypeIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfFallbackTypeIsResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfFallbackTypeIsResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{28}
}

type BulkEthLagIntfFallbackTypeIsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of individual requests.
	Requests []*EthLagIntfFallbackTypeIsRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BulkEthLagIntfFallbackTypeIsRequest) Reset() {
	*x = BulkEthLagIntfFallbackTypeIsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkEthLagIntfFallbackTypeIsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkEthLagIntfFallbackTypeIsRequest) ProtoMessage() {}

func (x *BulkEthLagIntfFallbackTypeIsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkEthLagIntfFallbackTypeIsRequest.ProtoReflect.Descriptor instead.
func (*BulkEthLagIntfFallbackTypeIsRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{29}
}

func (x *BulkEthLagIntfFallbackTypeIsRequest) GetRequests() []*EthLagIntfFallbackTypeIsRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BulkEthLagIntfFallbackTypeIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of successful requests.
	Processed uint64 `protobuf:"varint,1,opt,name=processed,proto3" json:"processed,omitempty"`
	// Cause of error (if any).
	Status *RpcResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BulkEthLagIntfFallbackTypeIsResponse) Reset() {
	*x = BulkEthLagIntfFallbackTypeIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkEthLagIntfFallbackTypeIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkEthLagIntfFallbackTypeIsResponse) ProtoMessage() {}

func (x *BulkEthLagIntfFallbackTypeIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkEthLagIntfFallbackTypeIsResponse.ProtoReflect.Descriptor instead.
func (*BulkEthLagIntfFallbackTypeIsResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{30}
}

func (x *BulkEthLagIntfFallbackTypeIsResponse) GetProcessed() uint64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *BulkEthLagIntfFallbackTypeIsResponse) GetStatus() *RpcResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type EthLagIntfFallbackTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the LAG interface.
	EthLagIntfId *IntfId `protobuf:"bytes,1,opt,name=eth_lag_intf_id,json=ethLagIntfId,proto3" json:"eth_lag_intf_id,omitempty"`
}

func (x *EthLagIntfFallbackTypeRequest) Reset() {
	*x = EthLagIntfFallbackTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfFallbackTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfFallbackTypeRequest) ProtoMessage() {}

func (x *EthLagIntfFallbackTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfFallbackTypeRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfFallbackTypeRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{31}
}

func (x *EthLagIntfFallbackTypeRequest) GetEthLagIntfId() *IntfId {
	if x != nil {
		return x.EthLagIntfId
	}
	return nil
}

type EthLagIntfFallbackTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// LAG interface fallback type.
	FallbackType EthLagIntfFallbackType `protobuf:"varint,1,opt,name=fallback_type,json=fallbackType,proto3,enum=eos.remote.EthLagIntfFallbackType" json:"fallback_type,omitempty"`
}

func (x *EthLagIntfFallbackTypeResponse) Reset() {
	*x = EthLagIntfFallbackTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfFallbackTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfFallbackTypeResponse) ProtoMessage() {}

func (x *EthLagIntfFallbackTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfFallbackTypeResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfFallbackTypeResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{32}
}

func (x *EthLagIntfFallbackTypeResponse) GetFallbackType() EthLagIntfFallbackType {
	if x != nil {
		return x.FallbackType
	}
	return EthLagIntfFallbackType_ETH_LAG_INTF_FALLBACK_NULL
}

type EthLagIntfFallbackTimeoutIsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the LAG interface.
	EthLagIntfId *IntfId `protobuf:"bytes,1,opt,name=eth_lag_intf_id,json=ethLagIntfId,proto3" json:"eth_lag_intf_id,omitempty"`
	// Fallback timeout, in seconds.
	FallbackTimeout uint32 `protobuf:"varint,2,opt,name=fallback_timeout,json=fallbackTimeout,proto3" json:"fallback_timeout,omitempty"`
}

func (x *EthLagIntfFallbackTimeoutIsRequest) Reset() {
	*x = EthLagIntfFallbackTimeoutIsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfFallbackTimeoutIsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfFallbackTimeoutIsRequest) ProtoMessage() {}

func (x *EthLagIntfFallbackTimeoutIsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfFallbackTimeoutIsRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfFallbackTimeoutIsRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{33}
}

func (x *EthLagIntfFallbackTimeoutIsRequest) GetEthLagIntfId() *IntfId {
	if x != nil {
		return x.EthLagIntfId
	}
	return nil
}

func (x *EthLagIntfFallbackTimeoutIsRequest) GetFallbackTimeout() uint32 {
	if x != nil {
		return x.FallbackTimeout
	}
	return 0
}

type EthLagIntfFallbackTimeoutIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EthLagIntfFallbackTimeoutIsResponse) Reset() {
	*x = EthLagIntfFallbackTimeoutIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfFallbackTimeoutIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfFallbackTimeoutIsResponse) ProtoMessage() {}

func (x *EthLagIntfFallbackTimeoutIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfFallbackTimeoutIsResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfFallbackTimeoutIsResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{34}
}

type BulkEthLagIntfFallbackTimeoutIsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of individual requests.
	Requests []*EthLagIntfFallbackTimeoutIsRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BulkEthLagIntfFallbackTimeoutIsRequest) Reset() {
	*x = BulkEthLagIntfFallbackTimeoutIsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkEthLagIntfFallbackTimeoutIsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkEthLagIntfFallbackTimeoutIsRequest) ProtoMessage() {}

func (x *BulkEthLagIntfFallbackTimeoutIsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkEthLagIntfFallbackTimeoutIsRequest.ProtoReflect.Descriptor instead.
func (*BulkEthLagIntfFallbackTimeoutIsRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{35}
}

func (x *BulkEthLagIntfFallbackTimeoutIsRequest) GetRequests() []*EthLagIntfFallbackTimeoutIsRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BulkEthLagIntfFallbackTimeoutIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of successful requests.
	Processed uint64 `protobuf:"varint,1,opt,name=processed,proto3" json:"processed,omitempty"`
	// Cause of error (if any).
	Status *RpcResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BulkEthLagIntfFallbackTimeoutIsResponse) Reset() {
	*x = BulkEthLagIntfFallbackTimeoutIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkEthLagIntfFallbackTimeoutIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkEthLagIntfFallbackTimeoutIsResponse) ProtoMessage() {}

func (x *BulkEthLagIntfFallbackTimeoutIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkEthLagIntfFallbackTimeoutIsResponse.ProtoReflect.Descriptor instead.
func (*BulkEthLagIntfFallbackTimeoutIsResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{36}
}

func (x *BulkEthLagIntfFallbackTimeoutIsResponse) GetProcessed() uint64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *BulkEthLagIntfFallbackTimeoutIsResponse) GetStatus() *RpcResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type EthLagIntfFallbackTimeoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the LAG interface.
	EthLagIntfId *IntfId `protobuf:"bytes,1,opt,name=eth_lag_intf_id,json=ethLagIntfId,proto3" json:"eth_lag_intf_id,omitempty"`
}

func (x *EthLagIntfFallbackTimeoutRequest) Reset() {
	*x = EthLagIntfFallbackTimeoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfFallbackTimeoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfFallbackTimeoutRequest) ProtoMessage() {}

func (x *EthLagIntfFallbackTimeoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfFallbackTimeoutRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfFallbackTimeoutRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{37}
}

func (x *EthLagIntfFallbackTimeoutRequest) GetEthLagIntfId() *IntfId {
	if x != nil {
		return x.EthLagIntfId
	}
	return nil
}

type EthLagIntfFallbackTimeoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// LAG interface fallback timeout, in seconds.
	FallbackTimeout uint32 `protobuf:"varint,1,opt,name=fallback_timeout,json=fallbackTimeout,proto3" json:"fallback_timeout,omitempty"`
}

func (x *EthLagIntfFallbackTimeoutResponse) Reset() {
	*x = EthLagIntfFallbackTimeoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfFallbackTimeoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfFallbackTimeoutResponse) ProtoMessage() {}

func (x *EthLagIntfFallbackTimeoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfFallbackTimeoutResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfFallbackTimeoutResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{38}
}

func (x *EthLagIntfFallbackTimeoutResponse) GetFallbackTimeout() uint32 {
	if x != nil {
		return x.FallbackTimeout
	}
	return 0
}

type EthLagIntfFallbackTimeoutDefaultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the LAG interface.
	EthLagIntfId *IntfId `protobuf:"bytes,1,opt,name=eth_lag_intf_id,json=ethLagIntfId,proto3" json:"eth_lag_intf_id,omitempty"`
}

func (x *EthLagIntfFallbackTimeoutDefaultRequest) Reset() {
	*x = EthLagIntfFallbackTimeoutDefaultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfFallbackTimeoutDefaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfFallbackTimeoutDefaultRequest) ProtoMessage() {}

func (x *EthLagIntfFallbackTimeoutDefaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfFallbackTimeoutDefaultRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfFallbackTimeoutDefaultRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{39}
}

func (x *EthLagIntfFallbackTimeoutDefaultRequest) GetEthLagIntfId() *IntfId {
	if x != nil {
		return x.EthLagIntfId
	}
	return nil
}

type EthLagIntfFallbackTimeoutDefaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Default fallback timeout, in seconds.
	FallbackTimeout uint32 `protobuf:"varint,1,opt,name=fallback_timeout,json=fallbackTimeout,proto3" json:"fallback_timeout,omitempty"`
}

func (x *EthLagIntfFallbackTimeoutDefaultResponse) Reset() {
	*x = EthLagIntfFallbackTimeoutDefaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfFallbackTimeoutDefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfFallbackTimeoutDefaultResponse) ProtoMessage() {}

func (x *EthLagIntfFallbackTimeoutDefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfFallbackTimeoutDefaultResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfFallbackTimeoutDefaultResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{40}
}

func (x *EthLagIntfFallbackTimeoutDefaultResponse) GetFallbackTimeout() uint32 {
	if x != nil {
		return x.FallbackTimeout
	}
	return 0
}

type EthLagIntfMembershipSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the member.
	MemberIntfId *IntfId `protobuf:"bytes,1,opt,name=member_intf_id,json=memberIntfId,proto3" json:"member_intf_id,omitempty"`
	// Interface ID for the LAG interface.
	EthLagIntfId *IntfId `protobuf:"bytes,2,opt,name=eth_lag_intf_id,json=ethLagIntfId,proto3" json:"eth_lag_intf_id,omitempty"`
	// LACP member mode for LAG interface.
	Mode EthLagIntfMemberLacpMode `protobuf:"varint,3,opt,name=mode,proto3,enum=eos.remote.EthLagIntfMemberLacpMode" json:"mode,omitempty"`
}

func (x *EthLagIntfMembershipSetRequest) Reset() {
	*x = EthLagIntfMembershipSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMembershipSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMembershipSetRequest) ProtoMessage() {}

func (x *EthLagIntfMembershipSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMembershipSetRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfMembershipSetRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{41}
}

func (x *EthLagIntfMembershipSetRequest) GetMemberIntfId() *IntfId {
	if x != nil {
		return x.MemberIntfId
	}
	return nil
}

func (x *EthLagIntfMembershipSetRequest) GetEthLagIntfId() *IntfId {
	if x != nil {
		return x.EthLagIntfId
	}
	return nil
}

func (x *EthLagIntfMembershipSetRequest) GetMode() EthLagIntfMemberLacpMode {
	if x != nil {
		return x.Mode
	}
	return EthLagIntfMemberLacpMode_ETH_LAG_INTF_MEMBER_LACP_MODE_NULL
}

type EthLagIntfMembershipSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EthLagIntfMembershipSetResponse) Reset() {
	*x = EthLagIntfMembershipSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMembershipSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMembershipSetResponse) ProtoMessage() {}

func (x *EthLagIntfMembershipSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMembershipSetResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfMembershipSetResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{42}
}

type BulkEthLagIntfMembershipSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of individual requests.
	Requests []*EthLagIntfMembershipSetRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BulkEthLagIntfMembershipSetRequest) Reset() {
	*x = BulkEthLagIntfMembershipSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkEthLagIntfMembershipSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkEthLagIntfMembershipSetRequest) ProtoMessage() {}

func (x *BulkEthLagIntfMembershipSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkEthLagIntfMembershipSetRequest.ProtoReflect.Descriptor instead.
func (*BulkEthLagIntfMembershipSetRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{43}
}

func (x *BulkEthLagIntfMembershipSetRequest) GetRequests() []*EthLagIntfMembershipSetRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BulkEthLagIntfMembershipSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of successful requests.
	Processed uint64 `protobuf:"varint,1,opt,name=processed,proto3" json:"processed,omitempty"`
	// Cause of error (if any).
	Status *RpcResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BulkEthLagIntfMembershipSetResponse) Reset() {
	*x = BulkEthLagIntfMembershipSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkEthLagIntfMembershipSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkEthLagIntfMembershipSetResponse) ProtoMessage() {}

func (x *BulkEthLagIntfMembershipSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkEthLagIntfMembershipSetResponse.ProtoReflect.Descriptor instead.
func (*BulkEthLagIntfMembershipSetResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{44}
}

func (x *BulkEthLagIntfMembershipSetResponse) GetProcessed() uint64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *BulkEthLagIntfMembershipSetResponse) GetStatus() *RpcResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type EthLagIntfMembershipDelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the member.
	MemberIntfId *IntfId `protobuf:"bytes,1,opt,name=member_intf_id,json=memberIntfId,proto3" json:"member_intf_id,omitempty"`
}

func (x *EthLagIntfMembershipDelRequest) Reset() {
	*x = EthLagIntfMembershipDelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMembershipDelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMembershipDelRequest) ProtoMessage() {}

func (x *EthLagIntfMembershipDelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMembershipDelRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfMembershipDelRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{45}
}

func (x *EthLagIntfMembershipDelRequest) GetMemberIntfId() *IntfId {
	if x != nil {
		return x.MemberIntfId
	}
	return nil
}

type EthLagIntfMembershipDelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EthLagIntfMembershipDelResponse) Reset() {
	*x = EthLagIntfMembershipDelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMembershipDelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMembershipDelResponse) ProtoMessage() {}

func (x *EthLagIntfMembershipDelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMembershipDelResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfMembershipDelResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{46}
}

type BulkEthLagIntfMembershipDelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of individual requests.
	Requests []*EthLagIntfMembershipDelRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BulkEthLagIntfMembershipDelRequest) Reset() {
	*x = BulkEthLagIntfMembershipDelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkEthLagIntfMembershipDelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkEthLagIntfMembershipDelRequest) ProtoMessage() {}

func (x *BulkEthLagIntfMembershipDelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkEthLagIntfMembershipDelRequest.ProtoReflect.Descriptor instead.
func (*BulkEthLagIntfMembershipDelRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{47}
}

func (x *BulkEthLagIntfMembershipDelRequest) GetRequests() []*EthLagIntfMembershipDelRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BulkEthLagIntfMembershipDelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of successful requests.
	Processed uint64 `protobuf:"varint,1,opt,name=processed,proto3" json:"processed,omitempty"`
	// Cause of error (if any).
	Status *RpcResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BulkEthLagIntfMembershipDelResponse) Reset() {
	*x = BulkEthLagIntfMembershipDelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkEthLagIntfMembershipDelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkEthLagIntfMembershipDelResponse) ProtoMessage() {}

func (x *BulkEthLagIntfMembershipDelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkEthLagIntfMembershipDelResponse.ProtoReflect.Descriptor instead.
func (*BulkEthLagIntfMembershipDelResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{48}
}

func (x *BulkEthLagIntfMembershipDelResponse) GetProcessed() uint64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *BulkEthLagIntfMembershipDelResponse) GetStatus() *RpcResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type EthLagIntfMembershipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the member.
	MemberIntfId *IntfId `protobuf:"bytes,1,opt,name=member_intf_id,json=memberIntfId,proto3" json:"member_intf_id,omitempty"`
}

func (x *EthLagIntfMembershipRequest) Reset() {
	*x = EthLagIntfMembershipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMembershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMembershipRequest) ProtoMessage() {}

func (x *EthLagIntfMembershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMembershipRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfMembershipRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{49}
}

func (x *EthLagIntfMembershipRequest) GetMemberIntfId() *IntfId {
	if x != nil {
		return x.MemberIntfId
	}
	return nil
}

type EthLagIntfMembershipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the LAG interface.
	EthLagIntfId *IntfId `protobuf:"bytes,1,opt,name=eth_lag_intf_id,json=ethLagIntfId,proto3" json:"eth_lag_intf_id,omitempty"`
}

func (x *EthLagIntfMembershipResponse) Reset() {
	*x = EthLagIntfMembershipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMembershipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMembershipResponse) ProtoMessage() {}

func (x *EthLagIntfMembershipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMembershipResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfMembershipResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{50}
}

func (x *EthLagIntfMembershipResponse) GetEthLagIntfId() *IntfId {
	if x != nil {
		return x.EthLagIntfId
	}
	return nil
}

type EthLagIntfMembershipStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the member.
	MemberIntfId *IntfId `protobuf:"bytes,1,opt,name=member_intf_id,json=memberIntfId,proto3" json:"member_intf_id,omitempty"`
}

func (x *EthLagIntfMembershipStatusRequest) Reset() {
	*x = EthLagIntfMembershipStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMembershipStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMembershipStatusRequest) ProtoMessage() {}

func (x *EthLagIntfMembershipStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMembershipStatusRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfMembershipStatusRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{51}
}

func (x *EthLagIntfMembershipStatusRequest) GetMemberIntfId() *IntfId {
	if x != nil {
		return x.MemberIntfId
	}
	return nil
}

type EthLagIntfMembershipStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// membership details.
	Membership *EthLagIntfMembership `protobuf:"bytes,1,opt,name=membership,proto3" json:"membership,omitempty"`
}

func (x *EthLagIntfMembershipStatusResponse) Reset() {
	*x = EthLagIntfMembershipStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMembershipStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMembershipStatusResponse) ProtoMessage() {}

func (x *EthLagIntfMembershipStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMembershipStatusResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfMembershipStatusResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{52}
}

func (x *EthLagIntfMembershipStatusResponse) GetMembership() *EthLagIntfMembership {
	if x != nil {
		return x.Membership
	}
	return nil
}

type EthLagIntfMemberPriorityIsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the member.
	MemberIntfId *IntfId `protobuf:"bytes,1,opt,name=member_intf_id,json=memberIntfId,proto3" json:"member_intf_id,omitempty"`
	// Member priority. Valid values from 0 to 65535
	Priority uint32 `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *EthLagIntfMemberPriorityIsRequest) Reset() {
	*x = EthLagIntfMemberPriorityIsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMemberPriorityIsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMemberPriorityIsRequest) ProtoMessage() {}

func (x *EthLagIntfMemberPriorityIsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMemberPriorityIsRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfMemberPriorityIsRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{53}
}

func (x *EthLagIntfMemberPriorityIsRequest) GetMemberIntfId() *IntfId {
	if x != nil {
		return x.MemberIntfId
	}
	return nil
}

func (x *EthLagIntfMemberPriorityIsRequest) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type EthLagIntfMemberPriorityIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EthLagIntfMemberPriorityIsResponse) Reset() {
	*x = EthLagIntfMemberPriorityIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMemberPriorityIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMemberPriorityIsResponse) ProtoMessage() {}

func (x *EthLagIntfMemberPriorityIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMemberPriorityIsResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfMemberPriorityIsResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{54}
}

type BulkEthLagIntfMemberPriorityIsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of individual requests.
	Requests []*EthLagIntfMemberPriorityIsRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BulkEthLagIntfMemberPriorityIsRequest) Reset() {
	*x = BulkEthLagIntfMemberPriorityIsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkEthLagIntfMemberPriorityIsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkEthLagIntfMemberPriorityIsRequest) ProtoMessage() {}

func (x *BulkEthLagIntfMemberPriorityIsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkEthLagIntfMemberPriorityIsRequest.ProtoReflect.Descriptor instead.
func (*BulkEthLagIntfMemberPriorityIsRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{55}
}

func (x *BulkEthLagIntfMemberPriorityIsRequest) GetRequests() []*EthLagIntfMemberPriorityIsRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BulkEthLagIntfMemberPriorityIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of successful requests.
	Processed uint64 `protobuf:"varint,1,opt,name=processed,proto3" json:"processed,omitempty"`
	// Cause of error (if any).
	Status *RpcResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BulkEthLagIntfMemberPriorityIsResponse) Reset() {
	*x = BulkEthLagIntfMemberPriorityIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkEthLagIntfMemberPriorityIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkEthLagIntfMemberPriorityIsResponse) ProtoMessage() {}

func (x *BulkEthLagIntfMemberPriorityIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkEthLagIntfMemberPriorityIsResponse.ProtoReflect.Descriptor instead.
func (*BulkEthLagIntfMemberPriorityIsResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{56}
}

func (x *BulkEthLagIntfMemberPriorityIsResponse) GetProcessed() uint64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *BulkEthLagIntfMemberPriorityIsResponse) GetStatus() *RpcResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type EthLagIntfMemberPriorityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the member.
	MemberIntfId *IntfId `protobuf:"bytes,1,opt,name=member_intf_id,json=memberIntfId,proto3" json:"member_intf_id,omitempty"`
}

func (x *EthLagIntfMemberPriorityRequest) Reset() {
	*x = EthLagIntfMemberPriorityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMemberPriorityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMemberPriorityRequest) ProtoMessage() {}

func (x *EthLagIntfMemberPriorityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMemberPriorityRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfMemberPriorityRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{57}
}

func (x *EthLagIntfMemberPriorityRequest) GetMemberIntfId() *IntfId {
	if x != nil {
		return x.MemberIntfId
	}
	return nil
}

type EthLagIntfMemberPriorityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Member priority.
	Priority uint32 `protobuf:"varint,1,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *EthLagIntfMemberPriorityResponse) Reset() {
	*x = EthLagIntfMemberPriorityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMemberPriorityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMemberPriorityResponse) ProtoMessage() {}

func (x *EthLagIntfMemberPriorityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMemberPriorityResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfMemberPriorityResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{58}
}

func (x *EthLagIntfMemberPriorityResponse) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type EthLagIntfMemberModeIsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the member.
	MemberIntfId *IntfId `protobuf:"bytes,1,opt,name=member_intf_id,json=memberIntfId,proto3" json:"member_intf_id,omitempty"`
	// LACP member mode for LAG interface.
	Mode EthLagIntfMemberLacpMode `protobuf:"varint,2,opt,name=mode,proto3,enum=eos.remote.EthLagIntfMemberLacpMode" json:"mode,omitempty"`
}

func (x *EthLagIntfMemberModeIsRequest) Reset() {
	*x = EthLagIntfMemberModeIsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMemberModeIsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMemberModeIsRequest) ProtoMessage() {}

func (x *EthLagIntfMemberModeIsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMemberModeIsRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfMemberModeIsRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{59}
}

func (x *EthLagIntfMemberModeIsRequest) GetMemberIntfId() *IntfId {
	if x != nil {
		return x.MemberIntfId
	}
	return nil
}

func (x *EthLagIntfMemberModeIsRequest) GetMode() EthLagIntfMemberLacpMode {
	if x != nil {
		return x.Mode
	}
	return EthLagIntfMemberLacpMode_ETH_LAG_INTF_MEMBER_LACP_MODE_NULL
}

type EthLagIntfMemberModeIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EthLagIntfMemberModeIsResponse) Reset() {
	*x = EthLagIntfMemberModeIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMemberModeIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMemberModeIsResponse) ProtoMessage() {}

func (x *EthLagIntfMemberModeIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMemberModeIsResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfMemberModeIsResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{60}
}

type BulkEthLagIntfMemberModeIsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of individual requests.
	Requests []*EthLagIntfMemberModeIsRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BulkEthLagIntfMemberModeIsRequest) Reset() {
	*x = BulkEthLagIntfMemberModeIsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkEthLagIntfMemberModeIsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkEthLagIntfMemberModeIsRequest) ProtoMessage() {}

func (x *BulkEthLagIntfMemberModeIsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkEthLagIntfMemberModeIsRequest.ProtoReflect.Descriptor instead.
func (*BulkEthLagIntfMemberModeIsRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{61}
}

func (x *BulkEthLagIntfMemberModeIsRequest) GetRequests() []*EthLagIntfMemberModeIsRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BulkEthLagIntfMemberModeIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of successful requests.
	Processed uint64 `protobuf:"varint,1,opt,name=processed,proto3" json:"processed,omitempty"`
	// Cause of error (if any).
	Status *RpcResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BulkEthLagIntfMemberModeIsResponse) Reset() {
	*x = BulkEthLagIntfMemberModeIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkEthLagIntfMemberModeIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkEthLagIntfMemberModeIsResponse) ProtoMessage() {}

func (x *BulkEthLagIntfMemberModeIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkEthLagIntfMemberModeIsResponse.ProtoReflect.Descriptor instead.
func (*BulkEthLagIntfMemberModeIsResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{62}
}

func (x *BulkEthLagIntfMemberModeIsResponse) GetProcessed() uint64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *BulkEthLagIntfMemberModeIsResponse) GetStatus() *RpcResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type EthLagIntfMemberModeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the member.
	MemberIntfId *IntfId `protobuf:"bytes,1,opt,name=member_intf_id,json=memberIntfId,proto3" json:"member_intf_id,omitempty"`
}

func (x *EthLagIntfMemberModeRequest) Reset() {
	*x = EthLagIntfMemberModeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMemberModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMemberModeRequest) ProtoMessage() {}

func (x *EthLagIntfMemberModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMemberModeRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfMemberModeRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{63}
}

func (x *EthLagIntfMemberModeRequest) GetMemberIntfId() *IntfId {
	if x != nil {
		return x.MemberIntfId
	}
	return nil
}

type EthLagIntfMemberModeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// LACP member mode for LAG interface.
	Mode EthLagIntfMemberLacpMode `protobuf:"varint,1,opt,name=mode,proto3,enum=eos.remote.EthLagIntfMemberLacpMode" json:"mode,omitempty"`
}

func (x *EthLagIntfMemberModeResponse) Reset() {
	*x = EthLagIntfMemberModeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMemberModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMemberModeResponse) ProtoMessage() {}

func (x *EthLagIntfMemberModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMemberModeResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfMemberModeResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{64}
}

func (x *EthLagIntfMemberModeResponse) GetMode() EthLagIntfMemberLacpMode {
	if x != nil {
		return x.Mode
	}
	return EthLagIntfMemberLacpMode_ETH_LAG_INTF_MEMBER_LACP_MODE_NULL
}

type EthLagIntfMemberTimeoutIsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for member.
	MemberIntfId *IntfId `protobuf:"bytes,1,opt,name=member_intf_id,json=memberIntfId,proto3" json:"member_intf_id,omitempty"`
	// LACP timeout for member.
	Timeout EthLagIntfMemberLacpTimeout `protobuf:"varint,2,opt,name=timeout,proto3,enum=eos.remote.EthLagIntfMemberLacpTimeout" json:"timeout,omitempty"`
}

func (x *EthLagIntfMemberTimeoutIsRequest) Reset() {
	*x = EthLagIntfMemberTimeoutIsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMemberTimeoutIsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMemberTimeoutIsRequest) ProtoMessage() {}

func (x *EthLagIntfMemberTimeoutIsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMemberTimeoutIsRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfMemberTimeoutIsRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{65}
}

func (x *EthLagIntfMemberTimeoutIsRequest) GetMemberIntfId() *IntfId {
	if x != nil {
		return x.MemberIntfId
	}
	return nil
}

func (x *EthLagIntfMemberTimeoutIsRequest) GetTimeout() EthLagIntfMemberLacpTimeout {
	if x != nil {
		return x.Timeout
	}
	return EthLagIntfMemberLacpTimeout_ETH_LAG_INTF_MEMBER_LACP_TIMEOUT_NULL
}

type EthLagIntfMemberTimeoutIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EthLagIntfMemberTimeoutIsResponse) Reset() {
	*x = EthLagIntfMemberTimeoutIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMemberTimeoutIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMemberTimeoutIsResponse) ProtoMessage() {}

func (x *EthLagIntfMemberTimeoutIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMemberTimeoutIsResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfMemberTimeoutIsResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{66}
}

type BulkEthLagIntfMemberTimeoutIsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of individual requests.
	Requests []*EthLagIntfMemberTimeoutIsRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BulkEthLagIntfMemberTimeoutIsRequest) Reset() {
	*x = BulkEthLagIntfMemberTimeoutIsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkEthLagIntfMemberTimeoutIsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkEthLagIntfMemberTimeoutIsRequest) ProtoMessage() {}

func (x *BulkEthLagIntfMemberTimeoutIsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkEthLagIntfMemberTimeoutIsRequest.ProtoReflect.Descriptor instead.
func (*BulkEthLagIntfMemberTimeoutIsRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{67}
}

func (x *BulkEthLagIntfMemberTimeoutIsRequest) GetRequests() []*EthLagIntfMemberTimeoutIsRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BulkEthLagIntfMemberTimeoutIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of successful requests.
	Processed uint64 `protobuf:"varint,1,opt,name=processed,proto3" json:"processed,omitempty"`
	// Cause of error (if any).
	Status *RpcResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BulkEthLagIntfMemberTimeoutIsResponse) Reset() {
	*x = BulkEthLagIntfMemberTimeoutIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkEthLagIntfMemberTimeoutIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkEthLagIntfMemberTimeoutIsResponse) ProtoMessage() {}

func (x *BulkEthLagIntfMemberTimeoutIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkEthLagIntfMemberTimeoutIsResponse.ProtoReflect.Descriptor instead.
func (*BulkEthLagIntfMemberTimeoutIsResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{68}
}

func (x *BulkEthLagIntfMemberTimeoutIsResponse) GetProcessed() uint64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *BulkEthLagIntfMemberTimeoutIsResponse) GetStatus() *RpcResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type EthLagIntfMemberTimeoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the member.
	MemberIntfId *IntfId `protobuf:"bytes,1,opt,name=member_intf_id,json=memberIntfId,proto3" json:"member_intf_id,omitempty"`
}

func (x *EthLagIntfMemberTimeoutRequest) Reset() {
	*x = EthLagIntfMemberTimeoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMemberTimeoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMemberTimeoutRequest) ProtoMessage() {}

func (x *EthLagIntfMemberTimeoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMemberTimeoutRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfMemberTimeoutRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{69}
}

func (x *EthLagIntfMemberTimeoutRequest) GetMemberIntfId() *IntfId {
	if x != nil {
		return x.MemberIntfId
	}
	return nil
}

type EthLagIntfMemberTimeoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response EthLagIntfMemberLacpTimeout `protobuf:"varint,1,opt,name=response,proto3,enum=eos.remote.EthLagIntfMemberLacpTimeout" json:"response,omitempty"`
}

func (x *EthLagIntfMemberTimeoutResponse) Reset() {
	*x = EthLagIntfMemberTimeoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMemberTimeoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMemberTimeoutResponse) ProtoMessage() {}

func (x *EthLagIntfMemberTimeoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMemberTimeoutResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfMemberTimeoutResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{70}
}

func (x *EthLagIntfMemberTimeoutResponse) GetResponse() EthLagIntfMemberLacpTimeout {
	if x != nil {
		return x.Response
	}
	return EthLagIntfMemberLacpTimeout_ETH_LAG_INTF_MEMBER_LACP_TIMEOUT_NULL
}

type EthLagIntfMemberActiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the member.
	MemberIntfId *IntfId `protobuf:"bytes,1,opt,name=member_intf_id,json=memberIntfId,proto3" json:"member_intf_id,omitempty"`
}

func (x *EthLagIntfMemberActiveRequest) Reset() {
	*x = EthLagIntfMemberActiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMemberActiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMemberActiveRequest) ProtoMessage() {}

func (x *EthLagIntfMemberActiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMemberActiveRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfMemberActiveRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{71}
}

func (x *EthLagIntfMemberActiveRequest) GetMemberIntfId() *IntfId {
	if x != nil {
		return x.MemberIntfId
	}
	return nil
}

type EthLagIntfMemberActiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Active bool `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *EthLagIntfMemberActiveResponse) Reset() {
	*x = EthLagIntfMemberActiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMemberActiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMemberActiveResponse) ProtoMessage() {}

func (x *EthLagIntfMemberActiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMemberActiveResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfMemberActiveResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{72}
}

func (x *EthLagIntfMemberActiveResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type EthLagIntfMemberTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the member.
	MemberIntfId *IntfId `protobuf:"bytes,1,opt,name=member_intf_id,json=memberIntfId,proto3" json:"member_intf_id,omitempty"`
}

func (x *EthLagIntfMemberTimeRequest) Reset() {
	*x = EthLagIntfMemberTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMemberTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMemberTimeRequest) ProtoMessage() {}

func (x *EthLagIntfMemberTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMemberTimeRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfMemberTimeRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{73}
}

func (x *EthLagIntfMemberTimeRequest) GetMemberIntfId() *IntfId {
	if x != nil {
		return x.MemberIntfId
	}
	return nil
}

type EthLagIntfMemberTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberTime float64 `protobuf:"fixed64,1,opt,name=member_time,json=memberTime,proto3" json:"member_time,omitempty"`
}

func (x *EthLagIntfMemberTimeResponse) Reset() {
	*x = EthLagIntfMemberTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMemberTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMemberTimeResponse) ProtoMessage() {}

func (x *EthLagIntfMemberTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMemberTimeResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfMemberTimeResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{74}
}

func (x *EthLagIntfMemberTimeResponse) GetMemberTime() float64 {
	if x != nil {
		return x.MemberTime
	}
	return 0
}

type EthLagIntfMemberReasonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the member.
	MemberIntfId *IntfId `protobuf:"bytes,1,opt,name=member_intf_id,json=memberIntfId,proto3" json:"member_intf_id,omitempty"`
}

func (x *EthLagIntfMemberReasonRequest) Reset() {
	*x = EthLagIntfMemberReasonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMemberReasonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMemberReasonRequest) ProtoMessage() {}

func (x *EthLagIntfMemberReasonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMemberReasonRequest.ProtoReflect.Descriptor instead.
func (*EthLagIntfMemberReasonRequest) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{75}
}

func (x *EthLagIntfMemberReasonRequest) GetMemberIntfId() *IntfId {
	if x != nil {
		return x.MemberIntfId
	}
	return nil
}

type EthLagIntfMemberReasonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberReason string `protobuf:"bytes,1,opt,name=member_reason,json=memberReason,proto3" json:"member_reason,omitempty"`
}

func (x *EthLagIntfMemberReasonResponse) Reset() {
	*x = EthLagIntfMemberReasonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMemberReasonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMemberReasonResponse) ProtoMessage() {}

func (x *EthLagIntfMemberReasonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMemberReasonResponse.ProtoReflect.Descriptor instead.
func (*EthLagIntfMemberReasonResponse) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_proto_rawDescGZIP(), []int{76}
}

func (x *EthLagIntfMemberReasonResponse) GetMemberReason() string {
	if x != nil {
		return x.MemberReason
	}
	return ""
}

var File_eth_lag_intf_proto protoreflect.FileDescriptor

var file_eth_lag_intf_proto_rawDesc = []byte{
	0x0a, 0x12, 0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x1a, 0x0f, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x10, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74,
	0x66, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x54, 0x0a,
	0x17, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x39, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x16, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e,
	0x74, 0x66, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x08, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x66, 0x73, 0x12, 0x3b, 0x0a,
	0x0f, 0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x74,
	0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x12, 0x44, 0x0a, 0x0b,
	0x64, 0x75, 0x6d, 0x70, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45,
	0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x0a, 0x64, 0x75, 0x6d, 0x70, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22,
	0x92, 0x03, 0x0a, 0x17, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e,
	0x74, 0x66, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x39, 0x0a, 0x0f, 0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c, 0x65, 0x74,
	0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0e, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x74, 0x66, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x12, 0x3a,
	0x0a, 0x0c, 0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x48, 0x01, 0x52, 0x0a,
	0x65, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x12, 0x3f, 0x0a, 0x12, 0x61, 0x6c,
	0x6c, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x42, 0x16, 0x0a, 0x14,
	0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e,
	0x74, 0x66, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x13, 0x45, 0x74,
	0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x39, 0x0a, 0x0f, 0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74,
	0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c,
	0x65, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x17,
	0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0f, 0x65, 0x74, 0x68, 0x5f, 0x6c,
	0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e,
	0x74, 0x66, 0x49, 0x64, 0x52, 0x0c, 0x65, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66,
	0x49, 0x64, 0x22, 0x32, 0x0a, 0x18, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x55, 0x0a, 0x18, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67,
	0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x39, 0x0a, 0x0f, 0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e,
	0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f,
	0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52,
	0x0c, 0x65, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22, 0x55, 0x0a,
	0x19, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0e, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x74, 0x66, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x13, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e,
	0x74, 0x66, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0f, 0x65,
	0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c, 0x65, 0x74, 0x68, 0x4c, 0x61, 0x67,
	0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67,
	0x49, 0x6e, 0x74, 0x66, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56,
	0x0a, 0x17, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66,
	0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6f,
	0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49,
	0x6e, 0x74, 0x66, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x6f, 0x0a, 0x18, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74,
	0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4e, 0x0a, 0x11, 0x45, 0x74, 0x68, 0x4c, 0x61,
	0x67, 0x49, 0x6e, 0x74, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0f,
	0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c, 0x65, 0x74, 0x68, 0x4c, 0x61,
	0x67, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x12, 0x45, 0x74, 0x68, 0x4c, 0x61,
	0x67, 0x49, 0x6e, 0x74, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68,
	0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x51, 0x0a, 0x14, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x44,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0f, 0x65, 0x74, 0x68,
	0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c, 0x65, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e,
	0x74, 0x66, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e,
	0x74, 0x66, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x0a,
	0x18, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x44,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f,
	0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49,
	0x6e, 0x74, 0x66, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x70, 0x0a, 0x19, 0x42, 0x75, 0x6c, 0x6b, 0x45,
	0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x53, 0x0a, 0x16, 0x45, 0x74, 0x68,
	0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0f, 0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69,
	0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65,
	0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64,
	0x52, 0x0c, 0x65, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22, 0x2f,
	0x0a, 0x17, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x53, 0x70, 0x65, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x22,
	0x75, 0x0a, 0x1b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x69, 0x6e,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39,
	0x0a, 0x0f, 0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c, 0x65, 0x74, 0x68,
	0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x69,
	0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67,
	0x49, 0x6e, 0x74, 0x66, 0x4d, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x49, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x66, 0x0a, 0x1f, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74,
	0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x6f,
	0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49,
	0x6e, 0x74, 0x66, 0x4d, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x49, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x77,
	0x0a, 0x20, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66,
	0x4d, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x56, 0x0a, 0x19, 0x45, 0x74, 0x68, 0x4c, 0x61,
	0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0f, 0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f,
	0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49,
	0x64, 0x52, 0x0c, 0x65, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22,
	0x39, 0x0a, 0x1a, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x69, 0x6e,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x1f, 0x45,
	0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39,
	0x0a, 0x0f, 0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c, 0x65, 0x74, 0x68,
	0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x0d, 0x66, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x22, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74,
	0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x22, 0x0a, 0x20, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66,
	0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x49, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6e, 0x0a, 0x23, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74,
	0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a,
	0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68,
	0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x7b, 0x0a, 0x24, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74,
	0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65,
	0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x5a, 0x0a, 0x1d, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74,
	0x66, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0f, 0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f,
	0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49,
	0x64, 0x52, 0x0c, 0x65, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22,
	0x69, 0x0a, 0x1e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x47, 0x0a, 0x0d, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66,
	0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x66, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x22, 0x45,
	0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x39, 0x0a, 0x0f, 0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74,
	0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c,
	0x65, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10,
	0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x25, 0x0a, 0x23, 0x45, 0x74, 0x68, 0x4c, 0x61,
	0x67, 0x49, 0x6e, 0x74, 0x66, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x74,
	0x0a, 0x26, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66,
	0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e,
	0x74, 0x66, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x22, 0x7e, 0x0a, 0x27, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c,
	0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x35, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x5d, 0x0a, 0x20, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e,
	0x74, 0x66, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0f, 0x65, 0x74, 0x68, 0x5f,
	0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49,
	0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c, 0x65, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74,
	0x66, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x21, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74,
	0x66, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0f, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x22, 0x64, 0x0a, 0x27, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74,
	0x66, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39,
	0x0a, 0x0f, 0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c, 0x65, 0x74, 0x68,
	0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x28, 0x45, 0x74, 0x68,
	0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x22, 0xcf, 0x01, 0x0a, 0x1e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f,
	0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52,
	0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x0f, 0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c, 0x65, 0x74, 0x68, 0x4c,
	0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x61, 0x63, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x22, 0x21, 0x0a, 0x1f, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6c, 0x0a, 0x22, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68,
	0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61,
	0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x22, 0x7a, 0x0a, 0x23, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61,
	0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x5a, 0x0a, 0x1e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x38, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x66,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x1f, 0x45,
	0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6c,
	0x0a, 0x22, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x7a, 0x0a, 0x23,
	0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x57, 0x0a, 0x1b, 0x45, 0x74, 0x68, 0x4c,
	0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74,
	0x66, 0x49, 0x64, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x66, 0x49,
	0x64, 0x22, 0x59, 0x0a, 0x1c, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x39, 0x0a, 0x0f, 0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74,
	0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c,
	0x65, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x21,
	0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x38, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x66,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x22, 0x45,
	0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x22, 0x79, 0x0a, 0x21, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74,
	0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x49,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e,
	0x74, 0x66, 0x49, 0x64, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x66,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x24,
	0x0a, 0x22, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x72, 0x0a, 0x25, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c,
	0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a,
	0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68,
	0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x7d, 0x0a, 0x26, 0x42, 0x75, 0x6c, 0x6b,
	0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5b, 0x0a, 0x1f, 0x45, 0x74, 0x68, 0x4c, 0x61,
	0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0e, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x74, 0x66, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x20, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e,
	0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x22, 0x93, 0x01, 0x0a, 0x1d, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49,
	0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x49, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66,
	0x49, 0x64, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64,
	0x12, 0x38, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24,
	0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c,
	0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x61, 0x63, 0x70,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x45, 0x74,
	0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x6f,
	0x64, 0x65, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6a, 0x0a, 0x21,
	0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x45, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4d, 0x6f, 0x64, 0x65, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x79, 0x0a, 0x22, 0x42, 0x75, 0x6c, 0x6b,
	0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4d, 0x6f, 0x64, 0x65, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65,
	0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x57, 0x0a, 0x1b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74,
	0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74,
	0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x1c,
	0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e,
	0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x61, 0x63, 0x70, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x20, 0x45, 0x74, 0x68, 0x4c, 0x61,
	0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x74, 0x66, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x61, 0x63, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x23, 0x0a, 0x21, 0x45, 0x74, 0x68, 0x4c,
	0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x70, 0x0a,
	0x24, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22,
	0x7c, 0x0a, 0x25, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74,
	0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5a, 0x0a,
	0x1e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x38, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x1f, 0x45, 0x74, 0x68,
	0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27,
	0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c,
	0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x61, 0x63, 0x70,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x59, 0x0a, 0x1d, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74,
	0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x1e,
	0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x57, 0x0a, 0x1b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67,
	0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49,
	0x64, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22,
	0x3f, 0x0a, 0x1c, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x59, 0x0a, 0x1d, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x38, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x66,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x1e, 0x45,
	0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x2a, 0x6f, 0x0a, 0x15, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1b, 0x0a, 0x17, 0x45,
	0x54, 0x48, 0x5f, 0x4c, 0x41, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x41, 0x4c, 0x4c, 0x5f,
	0x46, 0x49, 0x45, 0x4c, 0x44, 0x53, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x45, 0x54, 0x48, 0x5f,
	0x4c, 0x41, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x5f, 0x4d, 0x45,
	0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x45,
	0x54, 0x48, 0x5f, 0x4c, 0x41, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x53, 0x50, 0x45, 0x45,
	0x44, 0x10, 0x02, 0x2a, 0xf2, 0x01, 0x0a, 0x10, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e,
	0x74, 0x66, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x54, 0x48, 0x5f,
	0x4c, 0x41, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x54, 0x48, 0x5f, 0x4c, 0x41, 0x47,
	0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x54, 0x48, 0x5f, 0x4c, 0x41, 0x47,
	0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x45, 0x54, 0x48, 0x5f, 0x4c, 0x41, 0x47,
	0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x4d, 0x42,
	0x45, 0x52, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x45, 0x54, 0x48, 0x5f,
	0x4c, 0x41, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4d,
	0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x4c, 0x10, 0x04, 0x12, 0x1c, 0x0a, 0x18, 0x45,
	0x54, 0x48, 0x5f, 0x4c, 0x41, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x53, 0x50, 0x45, 0x45, 0x44, 0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x54, 0x48,
	0x5f, 0x4c, 0x41, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47,
	0x45, 0x5f, 0x44, 0x55, 0x4d, 0x50, 0x10, 0x06, 0x32, 0xa8, 0x20, 0x0a, 0x14, 0x45, 0x74, 0x68,
	0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x67, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x54, 0x0a, 0x05, 0x77, 0x61, 0x74, 0x63, 0x68, 0x12, 0x22, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e,
	0x74, 0x66, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c,
	0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x54, 0x0a, 0x0d, 0x65, 0x74, 0x68, 0x5f, 0x6c,
	0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x73, 0x12, 0x1e, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x55, 0x0a,
	0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65,
	0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67,
	0x49, 0x6e, 0x74, 0x66, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x14, 0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f,
	0x69, 0x6e, 0x74, 0x66, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x24, 0x2e, 0x65,
	0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67,
	0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x56, 0x0a,
	0x0f, 0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x73,
	0x12, 0x1f, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74,
	0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45,
	0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x14, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x65, 0x74,
	0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x73, 0x12, 0x23, 0x2e,
	0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x45,
	0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c, 0x65, 0x74,
	0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x12, 0x1d, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e,
	0x74, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x6f, 0x73, 0x2e,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74,
	0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x65,
	0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x64, 0x65, 0x6c, 0x12,
	0x20, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68,
	0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45,
	0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x15, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x65,
	0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x64, 0x65, 0x6c, 0x12,
	0x24, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x42, 0x75, 0x6c,
	0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x44, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74,
	0x66, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x22, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6f,
	0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49,
	0x6e, 0x74, 0x66, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12,
	0x25, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68,
	0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x69,
	0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x63, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x5f, 0x69, 0x73,
	0x12, 0x27, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74,
	0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x6f, 0x73, 0x2e,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74,
	0x66, 0x4d, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x11, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x6d, 0x69,
	0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x5f, 0x69, 0x73, 0x12, 0x2b, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c,
	0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x49, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49,
	0x6e, 0x74, 0x66, 0x4d, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x49, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x10, 0x66, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x73, 0x12, 0x2b, 0x2e, 0x65, 0x6f,
	0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49,
	0x6e, 0x74, 0x66, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66,
	0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x49, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x15, 0x62, 0x75, 0x6c, 0x6b,
	0x5f, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x73, 0x12, 0x2f, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x42,
	0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x30, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x0d, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x29, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x78, 0x0a, 0x13, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x73, 0x12, 0x2e, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x18, 0x62,
	0x75, 0x6c, 0x6b, 0x5f, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x73, 0x12, 0x32, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49,
	0x6e, 0x74, 0x66, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x65, 0x6f,
	0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68,
	0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x71, 0x0a, 0x10, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2c, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x18, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x12, 0x33, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6b, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x73, 0x65,
	0x74, 0x12, 0x2a, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45,
	0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61,
	0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x13,
	0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f,
	0x73, 0x65, 0x74, 0x12, 0x2e, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x5f, 0x64, 0x65, 0x6c, 0x12, 0x2a, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x13, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x64, 0x65, 0x6c, 0x12, 0x2e, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c,
	0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c,
	0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a,
	0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x27, 0x2e, 0x65, 0x6f,
	0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49,
	0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x74, 0x0a, 0x11, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x12, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x73, 0x12, 0x2d, 0x2e, 0x65,
	0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67,
	0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x6f,
	0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49,
	0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01,
	0x0a, 0x17, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x73, 0x12, 0x31, 0x2e, 0x65, 0x6f, 0x73, 0x2e,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61,
	0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65,
	0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74,
	0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x2b, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x69, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x73, 0x12, 0x29, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68,
	0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x6f, 0x64,
	0x65, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a,
	0x13, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x73, 0x12, 0x2d, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61,
	0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x11, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x73, 0x12, 0x2c,
	0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c,
	0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x65,
	0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67,
	0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a,
	0x16, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x73, 0x12, 0x30, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49,
	0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x6f, 0x73, 0x2e,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x74, 0x68, 0x4c, 0x61,
	0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b,
	0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x12, 0x2a, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74,
	0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x65,
	0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67,
	0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x0d, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x29, 0x2e, 0x65,
	0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67,
	0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61,
	0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x0d, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e,
	0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x12, 0x5a, 0x10, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2f, 0x45, 0x6f,
	0x73, 0x53, 0x64, 0x6b, 0x52, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eth_lag_intf_proto_rawDescOnce sync.Once
	file_eth_lag_intf_proto_rawDescData = file_eth_lag_intf_proto_rawDesc
)

func file_eth_lag_intf_proto_rawDescGZIP() []byte {
	file_eth_lag_intf_proto_rawDescOnce.Do(func() {
		file_eth_lag_intf_proto_rawDescData = protoimpl.X.CompressGZIP(file_eth_lag_intf_proto_rawDescData)
	})
	return file_eth_lag_intf_proto_rawDescData
}

var file_eth_lag_intf_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_eth_lag_intf_proto_msgTypes = make([]protoimpl.MessageInfo, 77)
var file_eth_lag_intf_proto_goTypes = []interface{}{
	(EthLagIntfUpdateField)(0),                       // 0: eos.remote.EthLagIntfUpdateField
	(EthLagIntfEvents)(0),                            // 1: eos.remote.EthLagIntfEvents
	(*EthLagIntfFieldsControl)(nil),                  // 2: eos.remote.EthLagIntfFieldsControl
	(*EthLagIntfWatchRequest)(nil),                   // 3: eos.remote.EthLagIntfWatchRequest
	(*EthLagIntfWatchResponse)(nil),                  // 4: eos.remote.EthLagIntfWatchResponse
	(*EthLagIntfsRequest)(nil),                       // 5: eos.remote.EthLagIntfsRequest
	(*EthLagIntfsResponse)(nil),                      // 6: eos.remote.EthLagIntfsResponse
	(*EthLagIntfExistsRequest)(nil),                  // 7: eos.remote.EthLagIntfExistsRequest
	(*EthLagIntfExistsResponse)(nil),                 // 8: eos.remote.EthLagIntfExistsResponse
	(*EthLagIntfMembersRequest)(nil),                 // 9: eos.remote.EthLagIntfMembersRequest
	(*EthLagIntfMembersResponse)(nil),                // 10: eos.remote.EthLagIntfMembersResponse
	(*EthLagIntfIsRequest)(nil),                      // 11: eos.remote.EthLagIntfIsRequest
	(*EthLagIntfIsResponse)(nil),                     // 12: eos.remote.EthLagIntfIsResponse
	(*BulkEthLagIntfIsRequest)(nil),                  // 13: eos.remote.BulkEthLagIntfIsRequest
	(*BulkEthLagIntfIsResponse)(nil),                 // 14: eos.remote.BulkEthLagIntfIsResponse
	(*EthLagIntfRequest)(nil),                        // 15: eos.remote.EthLagIntfRequest
	(*EthLagIntfResponse)(nil),                       // 16: eos.remote.EthLagIntfResponse
	(*EthLagIntfDelRequest)(nil),                     // 17: eos.remote.EthLagIntfDelRequest
	(*EthLagIntfDelResponse)(nil),                    // 18: eos.remote.EthLagIntfDelResponse
	(*BulkEthLagIntfDelRequest)(nil),                 // 19: eos.remote.BulkEthLagIntfDelRequest
	(*BulkEthLagIntfDelResponse)(nil),                // 20: eos.remote.BulkEthLagIntfDelResponse
	(*EthLagIntfSpeedRequest)(nil),                   // 21: eos.remote.EthLagIntfSpeedRequest
	(*EthLagIntfSpeedResponse)(nil),                  // 22: eos.remote.EthLagIntfSpeedResponse
	(*EthLagIntfMinLinksIsRequest)(nil),              // 23: eos.remote.EthLagIntfMinLinksIsRequest
	(*EthLagIntfMinLinksIsResponse)(nil),             // 24: eos.remote.EthLagIntfMinLinksIsResponse
	(*BulkEthLagIntfMinLinksIsRequest)(nil),          // 25: eos.remote.BulkEthLagIntfMinLinksIsRequest
	(*BulkEthLagIntfMinLinksIsResponse)(nil),         // 26: eos.remote.BulkEthLagIntfMinLinksIsResponse
	(*EthLagIntfMinLinksRequest)(nil),                // 27: eos.remote.EthLagIntfMinLinksRequest
	(*EthLagIntfMinLinksResponse)(nil),               // 28: eos.remote.EthLagIntfMinLinksResponse
	(*EthLagIntfFallbackTypeIsRequest)(nil),          // 29: eos.remote.EthLagIntfFallbackTypeIsRequest
	(*EthLagIntfFallbackTypeIsResponse)(nil),         // 30: eos.remote.EthLagIntfFallbackTypeIsResponse
	(*BulkEthLagIntfFallbackTypeIsRequest)(nil),      // 31: eos.remote.BulkEthLagIntfFallbackTypeIsRequest
	(*BulkEthLagIntfFallbackTypeIsResponse)(nil),     // 32: eos.remote.BulkEthLagIntfFallbackTypeIsResponse
	(*EthLagIntfFallbackTypeRequest)(nil),            // 33: eos.remote.EthLagIntfFallbackTypeRequest
	(*EthLagIntfFallbackTypeResponse)(nil),           // 34: eos.remote.EthLagIntfFallbackTypeResponse
	(*EthLagIntfFallbackTimeoutIsRequest)(nil),       // 35: eos.remote.EthLagIntfFallbackTimeoutIsRequest
	(*EthLagIntfFallbackTimeoutIsResponse)(nil),      // 36: eos.remote.EthLagIntfFallbackTimeoutIsResponse
	(*BulkEthLagIntfFallbackTimeoutIsRequest)(nil),   // 37: eos.remote.BulkEthLagIntfFallbackTimeoutIsRequest
	(*BulkEthLagIntfFallbackTimeoutIsResponse)(nil),  // 38: eos.remote.BulkEthLagIntfFallbackTimeoutIsResponse
	(*EthLagIntfFallbackTimeoutRequest)(nil),         // 39: eos.remote.EthLagIntfFallbackTimeoutRequest
	(*EthLagIntfFallbackTimeoutResponse)(nil),        // 40: eos.remote.EthLagIntfFallbackTimeoutResponse
	(*EthLagIntfFallbackTimeoutDefaultRequest)(nil),  // 41: eos.remote.EthLagIntfFallbackTimeoutDefaultRequest
	(*EthLagIntfFallbackTimeoutDefaultResponse)(nil), // 42: eos.remote.EthLagIntfFallbackTimeoutDefaultResponse
	(*EthLagIntfMembershipSetRequest)(nil),           // 43: eos.remote.EthLagIntfMembershipSetRequest
	(*EthLagIntfMembershipSetResponse)(nil),          // 44: eos.remote.EthLagIntfMembershipSetResponse
	(*BulkEthLagIntfMembershipSetRequest)(nil),       // 45: eos.remote.BulkEthLagIntfMembershipSetRequest
	(*BulkEthLagIntfMembershipSetResponse)(nil),      // 46: eos.remote.BulkEthLagIntfMembershipSetResponse
	(*EthLagIntfMembershipDelRequest)(nil),           // 47: eos.remote.EthLagIntfMembershipDelRequest
	(*EthLagIntfMembershipDelResponse)(nil),          // 48: eos.remote.EthLagIntfMembershipDelResponse
	(*BulkEthLagIntfMembershipDelRequest)(nil),       // 49: eos.remote.BulkEthLagIntfMembershipDelRequest
	(*BulkEthLagIntfMembershipDelResponse)(nil),      // 50: eos.remote.BulkEthLagIntfMembershipDelResponse
	(*EthLagIntfMembershipRequest)(nil),              // 51: eos.remote.EthLagIntfMembershipRequest
	(*EthLagIntfMembershipResponse)(nil),             // 52: eos.remote.EthLagIntfMembershipResponse
	(*EthLagIntfMembershipStatusRequest)(nil),        // 53: eos.remote.EthLagIntfMembershipStatusRequest
	(*EthLagIntfMembershipStatusResponse)(nil),       // 54: eos.remote.EthLagIntfMembershipStatusResponse
	(*EthLagIntfMemberPriorityIsRequest)(nil),        // 55: eos.remote.EthLagIntfMemberPriorityIsRequest
	(*EthLagIntfMemberPriorityIsResponse)(nil),       // 56: eos.remote.EthLagIntfMemberPriorityIsResponse
	(*BulkEthLagIntfMemberPriorityIsRequest)(nil),    // 57: eos.remote.BulkEthLagIntfMemberPriorityIsRequest
	(*BulkEthLagIntfMemberPriorityIsResponse)(nil),   // 58: eos.remote.BulkEthLagIntfMemberPriorityIsResponse
	(*EthLagIntfMemberPriorityRequest)(nil),          // 59: eos.remote.EthLagIntfMemberPriorityRequest
	(*EthLagIntfMemberPriorityResponse)(nil),         // 60: eos.remote.EthLagIntfMemberPriorityResponse
	(*EthLagIntfMemberModeIsRequest)(nil),            // 61: eos.remote.EthLagIntfMemberModeIsRequest
	(*EthLagIntfMemberModeIsResponse)(nil),           // 62: eos.remote.EthLagIntfMemberModeIsResponse
	(*BulkEthLagIntfMemberModeIsRequest)(nil),        // 63: eos.remote.BulkEthLagIntfMemberModeIsRequest
	(*BulkEthLagIntfMemberModeIsResponse)(nil),       // 64: eos.remote.BulkEthLagIntfMemberModeIsResponse
	(*EthLagIntfMemberModeRequest)(nil),              // 65: eos.remote.EthLagIntfMemberModeRequest
	(*EthLagIntfMemberModeResponse)(nil),             // 66: eos.remote.EthLagIntfMemberModeResponse
	(*EthLagIntfMemberTimeoutIsRequest)(nil),         // 67: eos.remote.EthLagIntfMemberTimeoutIsRequest
	(*EthLagIntfMemberTimeoutIsResponse)(nil),        // 68: eos.remote.EthLagIntfMemberTimeoutIsResponse
	(*BulkEthLagIntfMemberTimeoutIsRequest)(nil),     // 69: eos.remote.BulkEthLagIntfMemberTimeoutIsRequest
	(*BulkEthLagIntfMemberTimeoutIsResponse)(nil),    // 70: eos.remote.BulkEthLagIntfMemberTimeoutIsResponse
	(*EthLagIntfMemberTimeoutRequest)(nil),           // 71: eos.remote.EthLagIntfMemberTimeoutRequest
	(*EthLagIntfMemberTimeoutResponse)(nil),          // 72: eos.remote.EthLagIntfMemberTimeoutResponse
	(*EthLagIntfMemberActiveRequest)(nil),            // 73: eos.remote.EthLagIntfMemberActiveRequest
	(*EthLagIntfMemberActiveResponse)(nil),           // 74: eos.remote.EthLagIntfMemberActiveResponse
	(*EthLagIntfMemberTimeRequest)(nil),              // 75: eos.remote.EthLagIntfMemberTimeRequest
	(*EthLagIntfMemberTimeResponse)(nil),             // 76: eos.remote.EthLagIntfMemberTimeResponse
	(*EthLagIntfMemberReasonRequest)(nil),            // 77: eos.remote.EthLagIntfMemberReasonRequest
	(*EthLagIntfMemberReasonResponse)(nil),           // 78: eos.remote.EthLagIntfMemberReasonResponse
	(*IntfId)(nil),                                   // 79: eos.remote.IntfId
	(*EthLagIntf)(nil),                               // 80: eos.remote.EthLagIntf
	(*RpcResponseStatus)(nil),                        // 81: eos.remote.RpcResponseStatus
	(EthLagIntfFallbackType)(0),                      // 82: eos.remote.EthLagIntfFallbackType
	(EthLagIntfMemberLacpMode)(0),                    // 83: eos.remote.EthLagIntfMemberLacpMode
	(*EthLagIntfMembership)(nil),                     // 84: eos.remote.EthLagIntfMembership
	(EthLagIntfMemberLacpTimeout)(0),                 // 85: eos.remote.EthLagIntfMemberLacpTimeout
}
var file_eth_lag_intf_proto_depIdxs = []int32{
	0,   // 0: eos.remote.EthLagIntfFieldsControl.fields:type_name -> eos.remote.EthLagIntfUpdateField
	79,  // 1: eos.remote.EthLagIntfWatchRequest.eth_lag_intf_id:type_name -> eos.remote.IntfId
	2,   // 2: eos.remote.EthLagIntfWatchRequest.dump_fields:type_name -> eos.remote.EthLagIntfFieldsControl
	1,   // 3: eos.remote.EthLagIntfWatchResponse.event:type_name -> eos.remote.EthLagIntfEvents
	79,  // 4: eos.remote.EthLagIntfWatchResponse.eth_lag_intf_id:type_name -> eos.remote.IntfId
	79,  // 5: eos.remote.EthLagIntfWatchResponse.member_intf_id:type_name -> eos.remote.IntfId
	80,  // 6: eos.remote.EthLagIntfWatchResponse.eth_lag_intf:type_name -> eos.remote.EthLagIntf
	79,  // 7: eos.remote.EthLagIntfWatchResponse.all_member_intf_id:type_name -> eos.remote.IntfId
	79,  // 8: eos.remote.EthLagIntfsResponse.eth_lag_intf_id:type_name -> eos.remote.IntfId
	79,  // 9: eos.remote.EthLagIntfExistsRequest.eth_lag_intf_id:type_name -> eos.remote.IntfId
	79,  // 10: eos.remote.EthLagIntfMembersRequest.eth_lag_intf_id:type_name -> eos.remote.IntfId
	79,  // 11: eos.remote.EthLagIntfMembersResponse.member_intf_id:type_name -> eos.remote.IntfId
	79,  // 12: eos.remote.EthLagIntfIsRequest.eth_lag_intf_id:type_name -> eos.remote.IntfId
	11,  // 13: eos.remote.BulkEthLagIntfIsRequest.requests:type_name -> eos.remote.EthLagIntfIsRequest
	81,  // 14: eos.remote.BulkEthLagIntfIsResponse.status:type_name -> eos.remote.RpcResponseStatus
	79,  // 15: eos.remote.EthLagIntfRequest.eth_lag_intf_id:type_name -> eos.remote.IntfId
	80,  // 16: eos.remote.EthLagIntfResponse.response:type_name -> eos.remote.EthLagIntf
	79,  // 17: eos.remote.EthLagIntfDelRequest.eth_lag_intf_id:type_name -> eos.remote.IntfId
	17,  // 18: eos.remote.BulkEthLagIntfDelRequest.requests:type_name -> eos.remote.EthLagIntfDelRequest
	81,  // 19: eos.remote.BulkEthLagIntfDelResponse.status:type_name -> eos.remote.RpcResponseStatus
	79,  // 20: eos.remote.EthLagIntfSpeedRequest.eth_lag_intf_id:type_name -> eos.remote.IntfId
	79,  // 21: eos.remote.EthLagIntfMinLinksIsRequest.eth_lag_intf_id:type_name -> eos.remote.IntfId
	23,  // 22: eos.remote.BulkEthLagIntfMinLinksIsRequest.requests:type_name -> eos.remote.EthLagIntfMinLinksIsRequest
	81,  // 23: eos.remote.BulkEthLagIntfMinLinksIsResponse.status:type_name -> eos.remote.RpcResponseStatus
	79,  // 24: eos.remote.EthLagIntfMinLinksRequest.eth_lag_intf_id:type_name -> eos.remote.IntfId
	79,  // 25: eos.remote.EthLagIntfFallbackTypeIsRequest.eth_lag_intf_id:type_name -> eos.remote.IntfId
	82,  // 26: eos.remote.EthLagIntfFallbackTypeIsRequest.fallback_type:type_name -> eos.remote.EthLagIntfFallbackType
	29,  // 27: eos.remote.BulkEthLagIntfFallbackTypeIsRequest.requests:type_name -> eos.remote.EthLagIntfFallbackTypeIsRequest
	81,  // 28: eos.remote.BulkEthLagIntfFallbackTypeIsResponse.status:type_name -> eos.remote.RpcResponseStatus
	79,  // 29: eos.remote.EthLagIntfFallbackTypeRequest.eth_lag_intf_id:type_name -> eos.remote.IntfId
	82,  // 30: eos.remote.EthLagIntfFallbackTypeResponse.fallback_type:type_name -> eos.remote.EthLagIntfFallbackType
	79,  // 31: eos.remote.EthLagIntfFallbackTimeoutIsRequest.eth_lag_intf_id:type_name -> eos.remote.IntfId
	35,  // 32: eos.remote.BulkEthLagIntfFallbackTimeoutIsRequest.requests:type_name -> eos.remote.EthLagIntfFallbackTimeoutIsRequest
	81,  // 33: eos.remote.BulkEthLagIntfFallbackTimeoutIsResponse.status:type_name -> eos.remote.RpcResponseStatus
	79,  // 34: eos.remote.EthLagIntfFallbackTimeoutRequest.eth_lag_intf_id:type_name -> eos.remote.IntfId
	79,  // 35: eos.remote.EthLagIntfFallbackTimeoutDefaultRequest.eth_lag_intf_id:type_name -> eos.remote.IntfId
	79,  // 36: eos.remote.EthLagIntfMembershipSetRequest.member_intf_id:type_name -> eos.remote.IntfId
	79,  // 37: eos.remote.EthLagIntfMembershipSetRequest.eth_lag_intf_id:type_name -> eos.remote.IntfId
	83,  // 38: eos.remote.EthLagIntfMembershipSetRequest.mode:type_name -> eos.remote.EthLagIntfMemberLacpMode
	43,  // 39: eos.remote.BulkEthLagIntfMembershipSetRequest.requests:type_name -> eos.remote.EthLagIntfMembershipSetRequest
	81,  // 40: eos.remote.BulkEthLagIntfMembershipSetResponse.status:type_name -> eos.remote.RpcResponseStatus
	79,  // 41: eos.remote.EthLagIntfMembershipDelRequest.member_intf_id:type_name -> eos.remote.IntfId
	47,  // 42: eos.remote.BulkEthLagIntfMembershipDelRequest.requests:type_name -> eos.remote.EthLagIntfMembershipDelRequest
	81,  // 43: eos.remote.BulkEthLagIntfMembershipDelResponse.status:type_name -> eos.remote.RpcResponseStatus
	79,  // 44: eos.remote.EthLagIntfMembershipRequest.member_intf_id:type_name -> eos.remote.IntfId
	79,  // 45: eos.remote.EthLagIntfMembershipResponse.eth_lag_intf_id:type_name -> eos.remote.IntfId
	79,  // 46: eos.remote.EthLagIntfMembershipStatusRequest.member_intf_id:type_name -> eos.remote.IntfId
	84,  // 47: eos.remote.EthLagIntfMembershipStatusResponse.membership:type_name -> eos.remote.EthLagIntfMembership
	79,  // 48: eos.remote.EthLagIntfMemberPriorityIsRequest.member_intf_id:type_name -> eos.remote.IntfId
	55,  // 49: eos.remote.BulkEthLagIntfMemberPriorityIsRequest.requests:type_name -> eos.remote.EthLagIntfMemberPriorityIsRequest
	81,  // 50: eos.remote.BulkEthLagIntfMemberPriorityIsResponse.status:type_name -> eos.remote.RpcResponseStatus
	79,  // 51: eos.remote.EthLagIntfMemberPriorityRequest.member_intf_id:type_name -> eos.remote.IntfId
	79,  // 52: eos.remote.EthLagIntfMemberModeIsRequest.member_intf_id:type_name -> eos.remote.IntfId
	83,  // 53: eos.remote.EthLagIntfMemberModeIsRequest.mode:type_name -> eos.remote.EthLagIntfMemberLacpMode
	61,  // 54: eos.remote.BulkEthLagIntfMemberModeIsRequest.requests:type_name -> eos.remote.EthLagIntfMemberModeIsRequest
	81,  // 55: eos.remote.BulkEthLagIntfMemberModeIsResponse.status:type_name -> eos.remote.RpcResponseStatus
	79,  // 56: eos.remote.EthLagIntfMemberModeRequest.member_intf_id:type_name -> eos.remote.IntfId
	83,  // 57: eos.remote.EthLagIntfMemberModeResponse.mode:type_name -> eos.remote.EthLagIntfMemberLacpMode
	79,  // 58: eos.remote.EthLagIntfMemberTimeoutIsRequest.member_intf_id:type_name -> eos.remote.IntfId
	85,  // 59: eos.remote.EthLagIntfMemberTimeoutIsRequest.timeout:type_name -> eos.remote.EthLagIntfMemberLacpTimeout
	67,  // 60: eos.remote.BulkEthLagIntfMemberTimeoutIsRequest.requests:type_name -> eos.remote.EthLagIntfMemberTimeoutIsRequest
	81,  // 61: eos.remote.BulkEthLagIntfMemberTimeoutIsResponse.status:type_name -> eos.remote.RpcResponseStatus
	79,  // 62: eos.remote.EthLagIntfMemberTimeoutRequest.member_intf_id:type_name -> eos.remote.IntfId
	85,  // 63: eos.remote.EthLagIntfMemberTimeoutResponse.response:type_name -> eos.remote.EthLagIntfMemberLacpTimeout
	79,  // 64: eos.remote.EthLagIntfMemberActiveRequest.member_intf_id:type_name -> eos.remote.IntfId
	79,  // 65: eos.remote.EthLagIntfMemberTimeRequest.member_intf_id:type_name -> eos.remote.IntfId
	79,  // 66: eos.remote.EthLagIntfMemberReasonRequest.member_intf_id:type_name -> eos.remote.IntfId
	3,   // 67: eos.remote.EthLagIntfMgrService.watch:input_type -> eos.remote.EthLagIntfWatchRequest
	5,   // 68: eos.remote.EthLagIntfMgrService.eth_lag_intfs:input_type -> eos.remote.EthLagIntfsRequest
	7,   // 69: eos.remote.EthLagIntfMgrService.exists:input_type -> eos.remote.EthLagIntfExistsRequest
	9,   // 70: eos.remote.EthLagIntfMgrService.eth_lag_intf_members:input_type -> eos.remote.EthLagIntfMembersRequest
	11,  // 71: eos.remote.EthLagIntfMgrService.eth_lag_intf_is:input_type -> eos.remote.EthLagIntfIsRequest
	13,  // 72: eos.remote.EthLagIntfMgrService.bulk_eth_lag_intf_is:input_type -> eos.remote.BulkEthLagIntfIsRequest
	15,  // 73: eos.remote.EthLagIntfMgrService.eth_lag_intf:input_type -> eos.remote.EthLagIntfRequest
	17,  // 74: eos.remote.EthLagIntfMgrService.eth_lag_intf_del:input_type -> eos.remote.EthLagIntfDelRequest
	19,  // 75: eos.remote.EthLagIntfMgrService.bulk_eth_lag_intf_del:input_type -> eos.remote.BulkEthLagIntfDelRequest
	21,  // 76: eos.remote.EthLagIntfMgrService.speed:input_type -> eos.remote.EthLagIntfSpeedRequest
	27,  // 77: eos.remote.EthLagIntfMgrService.min_links:input_type -> eos.remote.EthLagIntfMinLinksRequest
	23,  // 78: eos.remote.EthLagIntfMgrService.min_links_is:input_type -> eos.remote.EthLagIntfMinLinksIsRequest
	25,  // 79: eos.remote.EthLagIntfMgrService.bulk_min_links_is:input_type -> eos.remote.BulkEthLagIntfMinLinksIsRequest
	29,  // 80: eos.remote.EthLagIntfMgrService.fallback_type_is:input_type -> eos.remote.EthLagIntfFallbackTypeIsRequest
	31,  // 81: eos.remote.EthLagIntfMgrService.bulk_fallback_type_is:input_type -> eos.remote.BulkEthLagIntfFallbackTypeIsRequest
	33,  // 82: eos.remote.EthLagIntfMgrService.fallback_type:input_type -> eos.remote.EthLagIntfFallbackTypeRequest
	35,  // 83: eos.remote.EthLagIntfMgrService.fallback_timeout_is:input_type -> eos.remote.EthLagIntfFallbackTimeoutIsRequest
	37,  // 84: eos.remote.EthLagIntfMgrService.bulk_fallback_timeout_is:input_type -> eos.remote.BulkEthLagIntfFallbackTimeoutIsRequest
	39,  // 85: eos.remote.EthLagIntfMgrService.fallback_timeout:input_type -> eos.remote.EthLagIntfFallbackTimeoutRequest
	41,  // 86: eos.remote.EthLagIntfMgrService.fallback_timeout_default:input_type -> eos.remote.EthLagIntfFallbackTimeoutDefaultRequest
	43,  // 87: eos.remote.EthLagIntfMgrService.membership_set:input_type -> eos.remote.EthLagIntfMembershipSetRequest
	45,  // 88: eos.remote.EthLagIntfMgrService.bulk_membership_set:input_type -> eos.remote.BulkEthLagIntfMembershipSetRequest
	47,  // 89: eos.remote.EthLagIntfMgrService.membership_del:input_type -> eos.remote.EthLagIntfMembershipDelRequest
	49,  // 90: eos.remote.EthLagIntfMgrService.bulk_membership_del:input_type -> eos.remote.BulkEthLagIntfMembershipDelRequest
	51,  // 91: eos.remote.EthLagIntfMgrService.membership:input_type -> eos.remote.EthLagIntfMembershipRequest
	53,  // 92: eos.remote.EthLagIntfMgrService.membership_status:input_type -> eos.remote.EthLagIntfMembershipStatusRequest
	55,  // 93: eos.remote.EthLagIntfMgrService.member_priority_is:input_type -> eos.remote.EthLagIntfMemberPriorityIsRequest
	57,  // 94: eos.remote.EthLagIntfMgrService.bulk_member_priority_is:input_type -> eos.remote.BulkEthLagIntfMemberPriorityIsRequest
	59,  // 95: eos.remote.EthLagIntfMgrService.member_priority:input_type -> eos.remote.EthLagIntfMemberPriorityRequest
	61,  // 96: eos.remote.EthLagIntfMgrService.member_mode_is:input_type -> eos.remote.EthLagIntfMemberModeIsRequest
	63,  // 97: eos.remote.EthLagIntfMgrService.bulk_member_mode_is:input_type -> eos.remote.BulkEthLagIntfMemberModeIsRequest
	65,  // 98: eos.remote.EthLagIntfMgrService.member_mode:input_type -> eos.remote.EthLagIntfMemberModeRequest
	67,  // 99: eos.remote.EthLagIntfMgrService.member_timeout_is:input_type -> eos.remote.EthLagIntfMemberTimeoutIsRequest
	69,  // 100: eos.remote.EthLagIntfMgrService.bulk_member_timeout_is:input_type -> eos.remote.BulkEthLagIntfMemberTimeoutIsRequest
	71,  // 101: eos.remote.EthLagIntfMgrService.member_timeout:input_type -> eos.remote.EthLagIntfMemberTimeoutRequest
	73,  // 102: eos.remote.EthLagIntfMgrService.member_active:input_type -> eos.remote.EthLagIntfMemberActiveRequest
	75,  // 103: eos.remote.EthLagIntfMgrService.member_time:input_type -> eos.remote.EthLagIntfMemberTimeRequest
	77,  // 104: eos.remote.EthLagIntfMgrService.member_reason:input_type -> eos.remote.EthLagIntfMemberReasonRequest
	4,   // 105: eos.remote.EthLagIntfMgrService.watch:output_type -> eos.remote.EthLagIntfWatchResponse
	6,   // 106: eos.remote.EthLagIntfMgrService.eth_lag_intfs:output_type -> eos.remote.EthLagIntfsResponse
	8,   // 107: eos.remote.EthLagIntfMgrService.exists:output_type -> eos.remote.EthLagIntfExistsResponse
	10,  // 108: eos.remote.EthLagIntfMgrService.eth_lag_intf_members:output_type -> eos.remote.EthLagIntfMembersResponse
	12,  // 109: eos.remote.EthLagIntfMgrService.eth_lag_intf_is:output_type -> eos.remote.EthLagIntfIsResponse
	14,  // 110: eos.remote.EthLagIntfMgrService.bulk_eth_lag_intf_is:output_type -> eos.remote.BulkEthLagIntfIsResponse
	16,  // 111: eos.remote.EthLagIntfMgrService.eth_lag_intf:output_type -> eos.remote.EthLagIntfResponse
	18,  // 112: eos.remote.EthLagIntfMgrService.eth_lag_intf_del:output_type -> eos.remote.EthLagIntfDelResponse
	20,  // 113: eos.remote.EthLagIntfMgrService.bulk_eth_lag_intf_del:output_type -> eos.remote.BulkEthLagIntfDelResponse
	22,  // 114: eos.remote.EthLagIntfMgrService.speed:output_type -> eos.remote.EthLagIntfSpeedResponse
	28,  // 115: eos.remote.EthLagIntfMgrService.min_links:output_type -> eos.remote.EthLagIntfMinLinksResponse
	24,  // 116: eos.remote.EthLagIntfMgrService.min_links_is:output_type -> eos.remote.EthLagIntfMinLinksIsResponse
	26,  // 117: eos.remote.EthLagIntfMgrService.bulk_min_links_is:output_type -> eos.remote.BulkEthLagIntfMinLinksIsResponse
	30,  // 118: eos.remote.EthLagIntfMgrService.fallback_type_is:output_type -> eos.remote.EthLagIntfFallbackTypeIsResponse
	32,  // 119: eos.remote.EthLagIntfMgrService.bulk_fallback_type_is:output_type -> eos.remote.BulkEthLagIntfFallbackTypeIsResponse
	34,  // 120: eos.remote.EthLagIntfMgrService.fallback_type:output_type -> eos.remote.EthLagIntfFallbackTypeResponse
	36,  // 121: eos.remote.EthLagIntfMgrService.fallback_timeout_is:output_type -> eos.remote.EthLagIntfFallbackTimeoutIsResponse
	38,  // 122: eos.remote.EthLagIntfMgrService.bulk_fallback_timeout_is:output_type -> eos.remote.BulkEthLagIntfFallbackTimeoutIsResponse
	40,  // 123: eos.remote.EthLagIntfMgrService.fallback_timeout:output_type -> eos.remote.EthLagIntfFallbackTimeoutResponse
	42,  // 124: eos.remote.EthLagIntfMgrService.fallback_timeout_default:output_type -> eos.remote.EthLagIntfFallbackTimeoutDefaultResponse
	44,  // 125: eos.remote.EthLagIntfMgrService.membership_set:output_type -> eos.remote.EthLagIntfMembershipSetResponse
	46,  // 126: eos.remote.EthLagIntfMgrService.bulk_membership_set:output_type -> eos.remote.BulkEthLagIntfMembershipSetResponse
	48,  // 127: eos.remote.EthLagIntfMgrService.membership_del:output_type -> eos.remote.EthLagIntfMembershipDelResponse
	50,  // 128: eos.remote.EthLagIntfMgrService.bulk_membership_del:output_type -> eos.remote.BulkEthLagIntfMembershipDelResponse
	52,  // 129: eos.remote.EthLagIntfMgrService.membership:output_type -> eos.remote.EthLagIntfMembershipResponse
	54,  // 130: eos.remote.EthLagIntfMgrService.membership_status:output_type -> eos.remote.EthLagIntfMembershipStatusResponse
	56,  // 131: eos.remote.EthLagIntfMgrService.member_priority_is:output_type -> eos.remote.EthLagIntfMemberPriorityIsResponse
	58,  // 132: eos.remote.EthLagIntfMgrService.bulk_member_priority_is:output_type -> eos.remote.BulkEthLagIntfMemberPriorityIsResponse
	60,  // 133: eos.remote.EthLagIntfMgrService.member_priority:output_type -> eos.remote.EthLagIntfMemberPriorityResponse
	62,  // 134: eos.remote.EthLagIntfMgrService.member_mode_is:output_type -> eos.remote.EthLagIntfMemberModeIsResponse
	64,  // 135: eos.remote.EthLagIntfMgrService.bulk_member_mode_is:output_type -> eos.remote.BulkEthLagIntfMemberModeIsResponse
	66,  // 136: eos.remote.EthLagIntfMgrService.member_mode:output_type -> eos.remote.EthLagIntfMemberModeResponse
	68,  // 137: eos.remote.EthLagIntfMgrService.member_timeout_is:output_type -> eos.remote.EthLagIntfMemberTimeoutIsResponse
	70,  // 138: eos.remote.EthLagIntfMgrService.bulk_member_timeout_is:output_type -> eos.remote.BulkEthLagIntfMemberTimeoutIsResponse
	72,  // 139: eos.remote.EthLagIntfMgrService.member_timeout:output_type -> eos.remote.EthLagIntfMemberTimeoutResponse
	74,  // 140: eos.remote.EthLagIntfMgrService.member_active:output_type -> eos.remote.EthLagIntfMemberActiveResponse
	76,  // 141: eos.remote.EthLagIntfMgrService.member_time:output_type -> eos.remote.EthLagIntfMemberTimeResponse
	78,  // 142: eos.remote.EthLagIntfMgrService.member_reason:output_type -> eos.remote.EthLagIntfMemberReasonResponse
	105, // [105:143] is the sub-list for method output_type
	67,  // [67:105] is the sub-list for method input_type
	67,  // [67:67] is the sub-list for extension type_name
	67,  // [67:67] is the sub-list for extension extendee
	0,   // [0:67] is the sub-list for field type_name
}

func init() { file_eth_lag_intf_proto_init() }
func file_eth_lag_intf_proto_init() {
	if File_eth_lag_intf_proto != nil {
		return
	}
	file_rpc_types_proto_init()
	file_intf_types_proto_init()
	file_eth_lag_intf_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eth_lag_intf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfFieldsControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfWatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfWatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfExistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfIsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkEthLagIntfIsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkEthLagIntfIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfDelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfDelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkEthLagIntfDelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkEthLagIntfDelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfSpeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfSpeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMinLinksIsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMinLinksIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkEthLagIntfMinLinksIsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkEthLagIntfMinLinksIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMinLinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMinLinksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfFallbackTypeIsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfFallbackTypeIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkEthLagIntfFallbackTypeIsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkEthLagIntfFallbackTypeIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfFallbackTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfFallbackTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfFallbackTimeoutIsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfFallbackTimeoutIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkEthLagIntfFallbackTimeoutIsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkEthLagIntfFallbackTimeoutIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfFallbackTimeoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfFallbackTimeoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfFallbackTimeoutDefaultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfFallbackTimeoutDefaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMembershipSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMembershipSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkEthLagIntfMembershipSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkEthLagIntfMembershipSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMembershipDelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMembershipDelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkEthLagIntfMembershipDelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkEthLagIntfMembershipDelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMembershipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMembershipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMembershipStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMembershipStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMemberPriorityIsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMemberPriorityIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkEthLagIntfMemberPriorityIsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkEthLagIntfMemberPriorityIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMemberPriorityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMemberPriorityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMemberModeIsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMemberModeIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkEthLagIntfMemberModeIsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkEthLagIntfMemberModeIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMemberModeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMemberModeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMemberTimeoutIsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMemberTimeoutIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkEthLagIntfMemberTimeoutIsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkEthLagIntfMemberTimeoutIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMemberTimeoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMemberTimeoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMemberActiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMemberActiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMemberTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMemberTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMemberReasonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMemberReasonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_eth_lag_intf_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*EthLagIntfWatchRequest_AllIntfs)(nil),
		(*EthLagIntfWatchRequest_EthLagIntfId)(nil),
	}
	file_eth_lag_intf_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*EthLagIntfWatchResponse_Speed)(nil),
		(*EthLagIntfWatchResponse_EthLagIntf)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eth_lag_intf_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   77,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eth_lag_intf_proto_goTypes,
		DependencyIndexes: file_eth_lag_intf_proto_depIdxs,
		EnumInfos:         file_eth_lag_intf_proto_enumTypes,
		MessageInfos:      file_eth_lag_intf_proto_msgTypes,
	}.Build()
	File_eth_lag_intf_proto = out.File
	file_eth_lag_intf_proto_rawDesc = nil
	file_eth_lag_intf_proto_goTypes = nil
	file_eth_lag_intf_proto_depIdxs = nil
}
