// Copyright (c) 2023 Arista Networks, Inc.  All rights reserved.
// Arista Networks, Inc. Confidential and Proprietary.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: policy_map_counters_types.proto

package EosSdkRpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PolicyMapCountersKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyKey *PolicyMapKey `protobuf:"bytes,1,opt,name=policy_key,json=policyKey,proto3" json:"policy_key,omitempty"`
	ClassName string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	AclRule   string        `protobuf:"bytes,3,opt,name=acl_rule,json=aclRule,proto3" json:"acl_rule,omitempty"`
}

func (x *PolicyMapCountersKey) Reset() {
	*x = PolicyMapCountersKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_map_counters_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyMapCountersKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyMapCountersKey) ProtoMessage() {}

func (x *PolicyMapCountersKey) ProtoReflect() protoreflect.Message {
	mi := &file_policy_map_counters_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyMapCountersKey.ProtoReflect.Descriptor instead.
func (*PolicyMapCountersKey) Descriptor() ([]byte, []int) {
	return file_policy_map_counters_types_proto_rawDescGZIP(), []int{0}
}

func (x *PolicyMapCountersKey) GetPolicyKey() *PolicyMapKey {
	if x != nil {
		return x.PolicyKey
	}
	return nil
}

func (x *PolicyMapCountersKey) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *PolicyMapCountersKey) GetAclRule() string {
	if x != nil {
		return x.AclRule
	}
	return ""
}

type PolicyMapRuleCounters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketsCount uint64 `protobuf:"varint,1,opt,name=packets_count,json=packetsCount,proto3" json:"packets_count,omitempty"`
	BytesCount   uint64 `protobuf:"varint,2,opt,name=bytes_count,json=bytesCount,proto3" json:"bytes_count,omitempty"`
	// / Last update timestamp, UTC, sub-second precision
	LastUpdateTimestamp float64 `protobuf:"fixed64,3,opt,name=last_update_timestamp,json=lastUpdateTimestamp,proto3" json:"last_update_timestamp,omitempty"`
}

func (x *PolicyMapRuleCounters) Reset() {
	*x = PolicyMapRuleCounters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_map_counters_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyMapRuleCounters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyMapRuleCounters) ProtoMessage() {}

func (x *PolicyMapRuleCounters) ProtoReflect() protoreflect.Message {
	mi := &file_policy_map_counters_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyMapRuleCounters.ProtoReflect.Descriptor instead.
func (*PolicyMapRuleCounters) Descriptor() ([]byte, []int) {
	return file_policy_map_counters_types_proto_rawDescGZIP(), []int{1}
}

func (x *PolicyMapRuleCounters) GetPacketsCount() uint64 {
	if x != nil {
		return x.PacketsCount
	}
	return 0
}

func (x *PolicyMapRuleCounters) GetBytesCount() uint64 {
	if x != nil {
		return x.BytesCount
	}
	return 0
}

func (x *PolicyMapRuleCounters) GetLastUpdateTimestamp() float64 {
	if x != nil {
		return x.LastUpdateTimestamp
	}
	return 0
}

type PolicyMapCountersOutAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Nexthop:
	//
	//	*PolicyMapCountersOutAction_Nexthops
	//	*PolicyMapCountersOutAction_NexthopGroup
	Nexthop isPolicyMapCountersOutAction_Nexthop `protobuf_oneof:"nexthop"`
	Ttl     uint32                               `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *PolicyMapCountersOutAction) Reset() {
	*x = PolicyMapCountersOutAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_map_counters_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyMapCountersOutAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyMapCountersOutAction) ProtoMessage() {}

func (x *PolicyMapCountersOutAction) ProtoReflect() protoreflect.Message {
	mi := &file_policy_map_counters_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyMapCountersOutAction.ProtoReflect.Descriptor instead.
func (*PolicyMapCountersOutAction) Descriptor() ([]byte, []int) {
	return file_policy_map_counters_types_proto_rawDescGZIP(), []int{2}
}

func (m *PolicyMapCountersOutAction) GetNexthop() isPolicyMapCountersOutAction_Nexthop {
	if m != nil {
		return m.Nexthop
	}
	return nil
}

func (x *PolicyMapCountersOutAction) GetNexthops() *PolicyMapCountersOutAction_NexthopAction {
	if x, ok := x.GetNexthop().(*PolicyMapCountersOutAction_Nexthops); ok {
		return x.Nexthops
	}
	return nil
}

func (x *PolicyMapCountersOutAction) GetNexthopGroup() string {
	if x, ok := x.GetNexthop().(*PolicyMapCountersOutAction_NexthopGroup); ok {
		return x.NexthopGroup
	}
	return ""
}

func (x *PolicyMapCountersOutAction) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type isPolicyMapCountersOutAction_Nexthop interface {
	isPolicyMapCountersOutAction_Nexthop()
}

type PolicyMapCountersOutAction_Nexthops struct {
	Nexthops *PolicyMapCountersOutAction_NexthopAction `protobuf:"bytes,1,opt,name=nexthops,proto3,oneof"`
}

type PolicyMapCountersOutAction_NexthopGroup struct {
	NexthopGroup string `protobuf:"bytes,2,opt,name=nexthop_group,json=nexthopGroup,proto3,oneof"`
}

func (*PolicyMapCountersOutAction_Nexthops) isPolicyMapCountersOutAction_Nexthop() {}

func (*PolicyMapCountersOutAction_NexthopGroup) isPolicyMapCountersOutAction_Nexthop() {}

type PolicyMapCountersAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//
	//	*PolicyMapCountersAction_Deny
	//	*PolicyMapCountersAction_OutAction
	Action isPolicyMapCountersAction_Action `protobuf_oneof:"action"`
}

func (x *PolicyMapCountersAction) Reset() {
	*x = PolicyMapCountersAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_map_counters_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyMapCountersAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyMapCountersAction) ProtoMessage() {}

func (x *PolicyMapCountersAction) ProtoReflect() protoreflect.Message {
	mi := &file_policy_map_counters_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyMapCountersAction.ProtoReflect.Descriptor instead.
func (*PolicyMapCountersAction) Descriptor() ([]byte, []int) {
	return file_policy_map_counters_types_proto_rawDescGZIP(), []int{3}
}

func (m *PolicyMapCountersAction) GetAction() isPolicyMapCountersAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *PolicyMapCountersAction) GetDeny() bool {
	if x, ok := x.GetAction().(*PolicyMapCountersAction_Deny); ok {
		return x.Deny
	}
	return false
}

func (x *PolicyMapCountersAction) GetOutAction() *PolicyMapCountersOutAction {
	if x, ok := x.GetAction().(*PolicyMapCountersAction_OutAction); ok {
		return x.OutAction
	}
	return nil
}

type isPolicyMapCountersAction_Action interface {
	isPolicyMapCountersAction_Action()
}

type PolicyMapCountersAction_Deny struct {
	Deny bool `protobuf:"varint,1,opt,name=deny,proto3,oneof"`
}

type PolicyMapCountersAction_OutAction struct {
	OutAction *PolicyMapCountersOutAction `protobuf:"bytes,2,opt,name=out_action,json=outAction,proto3,oneof"`
}

func (*PolicyMapCountersAction_Deny) isPolicyMapCountersAction_Action() {}

func (*PolicyMapCountersAction_OutAction) isPolicyMapCountersAction_Action() {}

type PolicyMapCountersOutAction_NexthopAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recursive    bool     `protobuf:"varint,1,opt,name=recursive,proto3" json:"recursive,omitempty"`
	NexthopAddrs [][]byte `protobuf:"bytes,2,rep,name=nexthop_addrs,json=nexthopAddrs,proto3" json:"nexthop_addrs,omitempty"`
	Vrf          string   `protobuf:"bytes,3,opt,name=vrf,proto3" json:"vrf,omitempty"`
}

func (x *PolicyMapCountersOutAction_NexthopAction) Reset() {
	*x = PolicyMapCountersOutAction_NexthopAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_map_counters_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyMapCountersOutAction_NexthopAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyMapCountersOutAction_NexthopAction) ProtoMessage() {}

func (x *PolicyMapCountersOutAction_NexthopAction) ProtoReflect() protoreflect.Message {
	mi := &file_policy_map_counters_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyMapCountersOutAction_NexthopAction.ProtoReflect.Descriptor instead.
func (*PolicyMapCountersOutAction_NexthopAction) Descriptor() ([]byte, []int) {
	return file_policy_map_counters_types_proto_rawDescGZIP(), []int{2, 0}
}

func (x *PolicyMapCountersOutAction_NexthopAction) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

func (x *PolicyMapCountersOutAction_NexthopAction) GetNexthopAddrs() [][]byte {
	if x != nil {
		return x.NexthopAddrs
	}
	return nil
}

func (x *PolicyMapCountersOutAction_NexthopAction) GetVrf() string {
	if x != nil {
		return x.Vrf
	}
	return ""
}

var File_policy_map_counters_types_proto protoreflect.FileDescriptor

var file_policy_map_counters_types_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x1a, 0x16, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x89, 0x01, 0x0a, 0x14, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x4d, 0x61, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x37,
	0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x6c, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x6c, 0x52, 0x75, 0x6c,
	0x65, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x70, 0x52,
	0x75, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x32, 0x0a, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x9a, 0x02, 0x0a, 0x1a, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x4d, 0x61, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x4f, 0x75, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x4f, 0x75, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e,
	0x65, 0x78, 0x74, 0x68, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08,
	0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70, 0x73, 0x12, 0x25, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x68, 0x6f, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x74,
	0x6c, 0x1a, 0x64, 0x0a, 0x0d, 0x4e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x72, 0x66, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x76, 0x72, 0x66, 0x42, 0x09, 0x0a, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x68,
	0x6f, 0x70, 0x22, 0x82, 0x01, 0x0a, 0x17, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x70,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x04, 0x64, 0x65, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04,
	0x64, 0x65, 0x6e, 0x79, 0x12, 0x47, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x61, 0x70, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x4f, 0x75, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x12, 0x5a, 0x10, 0x61, 0x72, 0x69, 0x73, 0x74,
	0x61, 0x2f, 0x45, 0x6f, 0x73, 0x53, 0x64, 0x6b, 0x52, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_policy_map_counters_types_proto_rawDescOnce sync.Once
	file_policy_map_counters_types_proto_rawDescData = file_policy_map_counters_types_proto_rawDesc
)

func file_policy_map_counters_types_proto_rawDescGZIP() []byte {
	file_policy_map_counters_types_proto_rawDescOnce.Do(func() {
		file_policy_map_counters_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_policy_map_counters_types_proto_rawDescData)
	})
	return file_policy_map_counters_types_proto_rawDescData
}

var file_policy_map_counters_types_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_policy_map_counters_types_proto_goTypes = []interface{}{
	(*PolicyMapCountersKey)(nil),                     // 0: eos.remote.PolicyMapCountersKey
	(*PolicyMapRuleCounters)(nil),                    // 1: eos.remote.PolicyMapRuleCounters
	(*PolicyMapCountersOutAction)(nil),               // 2: eos.remote.PolicyMapCountersOutAction
	(*PolicyMapCountersAction)(nil),                  // 3: eos.remote.PolicyMapCountersAction
	(*PolicyMapCountersOutAction_NexthopAction)(nil), // 4: eos.remote.PolicyMapCountersOutAction.NexthopAction
	(*PolicyMapKey)(nil),                             // 5: eos.remote.PolicyMapKey
}
var file_policy_map_counters_types_proto_depIdxs = []int32{
	5, // 0: eos.remote.PolicyMapCountersKey.policy_key:type_name -> eos.remote.PolicyMapKey
	4, // 1: eos.remote.PolicyMapCountersOutAction.nexthops:type_name -> eos.remote.PolicyMapCountersOutAction.NexthopAction
	2, // 2: eos.remote.PolicyMapCountersAction.out_action:type_name -> eos.remote.PolicyMapCountersOutAction
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_policy_map_counters_types_proto_init() }
func file_policy_map_counters_types_proto_init() {
	if File_policy_map_counters_types_proto != nil {
		return
	}
	file_policy_map_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_policy_map_counters_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyMapCountersKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_map_counters_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyMapRuleCounters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_map_counters_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyMapCountersOutAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_map_counters_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyMapCountersAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_map_counters_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyMapCountersOutAction_NexthopAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_policy_map_counters_types_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*PolicyMapCountersOutAction_Nexthops)(nil),
		(*PolicyMapCountersOutAction_NexthopGroup)(nil),
	}
	file_policy_map_counters_types_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*PolicyMapCountersAction_Deny)(nil),
		(*PolicyMapCountersAction_OutAction)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_policy_map_counters_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_policy_map_counters_types_proto_goTypes,
		DependencyIndexes: file_policy_map_counters_types_proto_depIdxs,
		MessageInfos:      file_policy_map_counters_types_proto_msgTypes,
	}.Build()
	File_policy_map_counters_types_proto = out.File
	file_policy_map_counters_types_proto_rawDesc = nil
	file_policy_map_counters_types_proto_goTypes = nil
	file_policy_map_counters_types_proto_depIdxs = nil
}
