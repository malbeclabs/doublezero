// Copyright (c) 2021 Arista Networks, Inc.  All rights reserved.
// Arista Networks, Inc. Confidential and Proprietary.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: intf.proto

package EosSdkRpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IntfWatchedField int32

const (
	IntfWatchedField_INTF_ALL_FIELDS    IntfWatchedField = 0
	IntfWatchedField_INTF_OPER_STATUS   IntfWatchedField = 1
	IntfWatchedField_INTF_ADMIN_ENABLED IntfWatchedField = 2
	IntfWatchedField_INTF_DESCRIPTION   IntfWatchedField = 3
)

// Enum value maps for IntfWatchedField.
var (
	IntfWatchedField_name = map[int32]string{
		0: "INTF_ALL_FIELDS",
		1: "INTF_OPER_STATUS",
		2: "INTF_ADMIN_ENABLED",
		3: "INTF_DESCRIPTION",
	}
	IntfWatchedField_value = map[string]int32{
		"INTF_ALL_FIELDS":    0,
		"INTF_OPER_STATUS":   1,
		"INTF_ADMIN_ENABLED": 2,
		"INTF_DESCRIPTION":   3,
	}
)

func (x IntfWatchedField) Enum() *IntfWatchedField {
	p := new(IntfWatchedField)
	*p = x
	return p
}

func (x IntfWatchedField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IntfWatchedField) Descriptor() protoreflect.EnumDescriptor {
	return file_intf_proto_enumTypes[0].Descriptor()
}

func (IntfWatchedField) Type() protoreflect.EnumType {
	return &file_intf_proto_enumTypes[0]
}

func (x IntfWatchedField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IntfWatchedField.Descriptor instead.
func (IntfWatchedField) EnumDescriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{0}
}

type IntfEvents int32

const (
	IntfEvents_EVENT_INTF_NO_CHANGES IntfEvents = 0
	IntfEvents_EVENT_INTF_CREATED    IntfEvents = 1
	IntfEvents_EVENT_INTF_DELETED    IntfEvents = 2
)

// Enum value maps for IntfEvents.
var (
	IntfEvents_name = map[int32]string{
		0: "EVENT_INTF_NO_CHANGES",
		1: "EVENT_INTF_CREATED",
		2: "EVENT_INTF_DELETED",
	}
	IntfEvents_value = map[string]int32{
		"EVENT_INTF_NO_CHANGES": 0,
		"EVENT_INTF_CREATED":    1,
		"EVENT_INTF_DELETED":    2,
	}
)

func (x IntfEvents) Enum() *IntfEvents {
	p := new(IntfEvents)
	*p = x
	return p
}

func (x IntfEvents) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IntfEvents) Descriptor() protoreflect.EnumDescriptor {
	return file_intf_proto_enumTypes[1].Descriptor()
}

func (IntfEvents) Type() protoreflect.EnumType {
	return &file_intf_proto_enumTypes[1]
}

func (x IntfEvents) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IntfEvents.Descriptor instead.
func (IntfEvents) EnumDescriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{1}
}

type IntfFieldsControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []IntfWatchedField `protobuf:"varint,1,rep,packed,name=fields,proto3,enum=eos.remote.IntfWatchedField" json:"fields,omitempty"`
}

func (x *IntfFieldsControl) Reset() {
	*x = IntfFieldsControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntfFieldsControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntfFieldsControl) ProtoMessage() {}

func (x *IntfFieldsControl) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntfFieldsControl.ProtoReflect.Descriptor instead.
func (*IntfFieldsControl) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{0}
}

func (x *IntfFieldsControl) GetFields() []IntfWatchedField {
	if x != nil {
		return x.Fields
	}
	return nil
}

type WatchIntfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Overloads:
	//
	//	*WatchIntfRequest_AllIntfs
	//	*WatchIntfRequest_IntfId
	Overloads isWatchIntfRequest_Overloads `protobuf_oneof:"overloads"`
	// Set to true when an ackowledgment is desired.
	Ack bool `protobuf:"varint,3,opt,name=ack,proto3" json:"ack,omitempty"`
	// Controls whether a dump of the existing state is performed and what data
	// it contains. This dump takes place when the watcher starts up.
	// At least one IntfWatchedField must be specified in order to perform a dump.
	DumpFields *IntfFieldsControl `protobuf:"bytes,4,opt,name=dump_fields,json=dumpFields,proto3" json:"dump_fields,omitempty"`
}

func (x *WatchIntfRequest) Reset() {
	*x = WatchIntfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchIntfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchIntfRequest) ProtoMessage() {}

func (x *WatchIntfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchIntfRequest.ProtoReflect.Descriptor instead.
func (*WatchIntfRequest) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{1}
}

func (m *WatchIntfRequest) GetOverloads() isWatchIntfRequest_Overloads {
	if m != nil {
		return m.Overloads
	}
	return nil
}

func (x *WatchIntfRequest) GetAllIntfs() bool {
	if x, ok := x.GetOverloads().(*WatchIntfRequest_AllIntfs); ok {
		return x.AllIntfs
	}
	return false
}

func (x *WatchIntfRequest) GetIntfId() *IntfId {
	if x, ok := x.GetOverloads().(*WatchIntfRequest_IntfId); ok {
		return x.IntfId
	}
	return nil
}

func (x *WatchIntfRequest) GetAck() bool {
	if x != nil {
		return x.Ack
	}
	return false
}

func (x *WatchIntfRequest) GetDumpFields() *IntfFieldsControl {
	if x != nil {
		return x.DumpFields
	}
	return nil
}

type isWatchIntfRequest_Overloads interface {
	isWatchIntfRequest_Overloads()
}

type WatchIntfRequest_AllIntfs struct {
	AllIntfs bool `protobuf:"varint,1,opt,name=all_intfs,json=allIntfs,proto3,oneof"`
}

type WatchIntfRequest_IntfId struct {
	// Name of a particular interface to watch.
	IntfId *IntfId `protobuf:"bytes,2,opt,name=intf_id,json=intfId,proto3,oneof"`
}

func (*WatchIntfRequest_AllIntfs) isWatchIntfRequest_Overloads() {}

func (*WatchIntfRequest_IntfId) isWatchIntfRequest_Overloads() {}

// *
// Events are streamed as changes happen.
type WatchIntfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface whose status changed.
	IntfId *IntfId `protobuf:"bytes,1,opt,name=intf_id,json=intfId,proto3" json:"intf_id,omitempty"`
	// Types that are assignable to EventPresent:
	//
	//	*WatchIntfResponse_Event
	EventPresent isWatchIntfResponse_EventPresent `protobuf_oneof:"event_present"`
	// Types that are assignable to OperStatusPresent:
	//
	//	*WatchIntfResponse_Status
	OperStatusPresent isWatchIntfResponse_OperStatusPresent `protobuf_oneof:"oper_status_present"`
	// Types that are assignable to AdminEnabledPresent:
	//
	//	*WatchIntfResponse_AdminEnabled
	AdminEnabledPresent isWatchIntfResponse_AdminEnabledPresent `protobuf_oneof:"admin_enabled_present"`
	// Types that are assignable to DescriptionPresent:
	//
	//	*WatchIntfResponse_Description
	DescriptionPresent isWatchIntfResponse_DescriptionPresent `protobuf_oneof:"description_present"`
	// If true, this is not an event and the fields below are invalid. It
	// will be sent immediately if a dump is not being performed and an
	// acknowledgement was requested. If a dump is taking place it will
	// instead be sent at the end of the dump regardless of whether an
	// acknowledgement was requested or not.
	Ack bool `protobuf:"varint,6,opt,name=ack,proto3" json:"ack,omitempty"`
}

func (x *WatchIntfResponse) Reset() {
	*x = WatchIntfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchIntfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchIntfResponse) ProtoMessage() {}

func (x *WatchIntfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchIntfResponse.ProtoReflect.Descriptor instead.
func (*WatchIntfResponse) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{2}
}

func (x *WatchIntfResponse) GetIntfId() *IntfId {
	if x != nil {
		return x.IntfId
	}
	return nil
}

func (m *WatchIntfResponse) GetEventPresent() isWatchIntfResponse_EventPresent {
	if m != nil {
		return m.EventPresent
	}
	return nil
}

func (x *WatchIntfResponse) GetEvent() IntfEvents {
	if x, ok := x.GetEventPresent().(*WatchIntfResponse_Event); ok {
		return x.Event
	}
	return IntfEvents_EVENT_INTF_NO_CHANGES
}

func (m *WatchIntfResponse) GetOperStatusPresent() isWatchIntfResponse_OperStatusPresent {
	if m != nil {
		return m.OperStatusPresent
	}
	return nil
}

func (x *WatchIntfResponse) GetStatus() OperStatuses {
	if x, ok := x.GetOperStatusPresent().(*WatchIntfResponse_Status); ok {
		return x.Status
	}
	return OperStatuses_INTF_OPER_STATUS_NULL
}

func (m *WatchIntfResponse) GetAdminEnabledPresent() isWatchIntfResponse_AdminEnabledPresent {
	if m != nil {
		return m.AdminEnabledPresent
	}
	return nil
}

func (x *WatchIntfResponse) GetAdminEnabled() bool {
	if x, ok := x.GetAdminEnabledPresent().(*WatchIntfResponse_AdminEnabled); ok {
		return x.AdminEnabled
	}
	return false
}

func (m *WatchIntfResponse) GetDescriptionPresent() isWatchIntfResponse_DescriptionPresent {
	if m != nil {
		return m.DescriptionPresent
	}
	return nil
}

func (x *WatchIntfResponse) GetDescription() string {
	if x, ok := x.GetDescriptionPresent().(*WatchIntfResponse_Description); ok {
		return x.Description
	}
	return ""
}

func (x *WatchIntfResponse) GetAck() bool {
	if x != nil {
		return x.Ack
	}
	return false
}

type isWatchIntfResponse_EventPresent interface {
	isWatchIntfResponse_EventPresent()
}

type WatchIntfResponse_Event struct {
	// Interface has been added or removed.
	Event IntfEvents `protobuf:"varint,2,opt,name=event,proto3,enum=eos.remote.IntfEvents,oneof"`
}

func (*WatchIntfResponse_Event) isWatchIntfResponse_EventPresent() {}

type isWatchIntfResponse_OperStatusPresent interface {
	isWatchIntfResponse_OperStatusPresent()
}

type WatchIntfResponse_Status struct {
	Status OperStatuses `protobuf:"varint,3,opt,name=status,proto3,enum=eos.remote.OperStatuses,oneof"`
}

func (*WatchIntfResponse_Status) isWatchIntfResponse_OperStatusPresent() {}

type isWatchIntfResponse_AdminEnabledPresent interface {
	isWatchIntfResponse_AdminEnabledPresent()
}

type WatchIntfResponse_AdminEnabled struct {
	// Enabled status has been changed.
	AdminEnabled bool `protobuf:"varint,4,opt,name=admin_enabled,json=adminEnabled,proto3,oneof"`
}

func (*WatchIntfResponse_AdminEnabled) isWatchIntfResponse_AdminEnabledPresent() {}

type isWatchIntfResponse_DescriptionPresent interface {
	isWatchIntfResponse_DescriptionPresent()
}

type WatchIntfResponse_Description struct {
	// Interface's description has changed.
	Description string `protobuf:"bytes,5,opt,name=description,proto3,oneof"`
}

func (*WatchIntfResponse_Description) isWatchIntfResponse_DescriptionPresent() {}

type IntfsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IntfsRequest) Reset() {
	*x = IntfsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntfsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntfsRequest) ProtoMessage() {}

func (x *IntfsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntfsRequest.ProtoReflect.Descriptor instead.
func (*IntfsRequest) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{3}
}

type IntfsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the interface.
	IntfId *IntfId `protobuf:"bytes,1,opt,name=intf_id,json=intfId,proto3" json:"intf_id,omitempty"`
}

func (x *IntfsResponse) Reset() {
	*x = IntfsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntfsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntfsResponse) ProtoMessage() {}

func (x *IntfsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntfsResponse.ProtoReflect.Descriptor instead.
func (*IntfsResponse) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{4}
}

func (x *IntfsResponse) GetIntfId() *IntfId {
	if x != nil {
		return x.IntfId
	}
	return nil
}

type IntfExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the interface.
	IntfId *IntfId `protobuf:"bytes,1,opt,name=intf_id,json=intfId,proto3" json:"intf_id,omitempty"`
}

func (x *IntfExistsRequest) Reset() {
	*x = IntfExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntfExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntfExistsRequest) ProtoMessage() {}

func (x *IntfExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntfExistsRequest.ProtoReflect.Descriptor instead.
func (*IntfExistsRequest) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{5}
}

func (x *IntfExistsRequest) GetIntfId() *IntfId {
	if x != nil {
		return x.IntfId
	}
	return nil
}

type IntfExistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// True if the interface is present, false otherwise.
	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *IntfExistsResponse) Reset() {
	*x = IntfExistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntfExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntfExistsResponse) ProtoMessage() {}

func (x *IntfExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntfExistsResponse.ProtoReflect.Descriptor instead.
func (*IntfExistsResponse) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{6}
}

func (x *IntfExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type KernelIntfNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the interface.
	IntfId *IntfId `protobuf:"bytes,1,opt,name=intf_id,json=intfId,proto3" json:"intf_id,omitempty"`
}

func (x *KernelIntfNameRequest) Reset() {
	*x = KernelIntfNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KernelIntfNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelIntfNameRequest) ProtoMessage() {}

func (x *KernelIntfNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KernelIntfNameRequest.ProtoReflect.Descriptor instead.
func (*KernelIntfNameRequest) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{7}
}

func (x *KernelIntfNameRequest) GetIntfId() *IntfId {
	if x != nil {
		return x.IntfId
	}
	return nil
}

type KernelIntfNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Linux kernel device name for the interface.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *KernelIntfNameResponse) Reset() {
	*x = KernelIntfNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KernelIntfNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelIntfNameResponse) ProtoMessage() {}

func (x *KernelIntfNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KernelIntfNameResponse.ProtoReflect.Descriptor instead.
func (*KernelIntfNameResponse) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{8}
}

func (x *KernelIntfNameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type EosIntfNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Linux kernel device name for the interface.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *EosIntfNameRequest) Reset() {
	*x = EosIntfNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosIntfNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosIntfNameRequest) ProtoMessage() {}

func (x *EosIntfNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosIntfNameRequest.ProtoReflect.Descriptor instead.
func (*EosIntfNameRequest) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{9}
}

func (x *EosIntfNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type EosIntfNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the interface.
	IntfId *IntfId `protobuf:"bytes,1,opt,name=intf_id,json=intfId,proto3" json:"intf_id,omitempty"`
}

func (x *EosIntfNameResponse) Reset() {
	*x = EosIntfNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosIntfNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosIntfNameResponse) ProtoMessage() {}

func (x *EosIntfNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosIntfNameResponse.ProtoReflect.Descriptor instead.
func (*EosIntfNameResponse) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{10}
}

func (x *EosIntfNameResponse) GetIntfId() *IntfId {
	if x != nil {
		return x.IntfId
	}
	return nil
}

type AdminEnabledRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Linux kernel device name for the interface.
	IntfId *IntfId `protobuf:"bytes,1,opt,name=intf_id,json=intfId,proto3" json:"intf_id,omitempty"`
}

func (x *AdminEnabledRequest) Reset() {
	*x = AdminEnabledRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminEnabledRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminEnabledRequest) ProtoMessage() {}

func (x *AdminEnabledRequest) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminEnabledRequest.ProtoReflect.Descriptor instead.
func (*AdminEnabledRequest) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{11}
}

func (x *AdminEnabledRequest) GetIntfId() *IntfId {
	if x != nil {
		return x.IntfId
	}
	return nil
}

type AdminEnabledResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// True if interface is enabled, false otherwise.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *AdminEnabledResponse) Reset() {
	*x = AdminEnabledResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminEnabledResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminEnabledResponse) ProtoMessage() {}

func (x *AdminEnabledResponse) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminEnabledResponse.ProtoReflect.Descriptor instead.
func (*AdminEnabledResponse) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{12}
}

func (x *AdminEnabledResponse) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type AdminEnabledIsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the interface.
	IntfId *IntfId `protobuf:"bytes,1,opt,name=intf_id,json=intfId,proto3" json:"intf_id,omitempty"`
	// New enabled status for the interface.
	Enabled bool `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *AdminEnabledIsRequest) Reset() {
	*x = AdminEnabledIsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminEnabledIsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminEnabledIsRequest) ProtoMessage() {}

func (x *AdminEnabledIsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminEnabledIsRequest.ProtoReflect.Descriptor instead.
func (*AdminEnabledIsRequest) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{13}
}

func (x *AdminEnabledIsRequest) GetIntfId() *IntfId {
	if x != nil {
		return x.IntfId
	}
	return nil
}

func (x *AdminEnabledIsRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type AdminEnabledIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AdminEnabledIsResponse) Reset() {
	*x = AdminEnabledIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminEnabledIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminEnabledIsResponse) ProtoMessage() {}

func (x *AdminEnabledIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminEnabledIsResponse.ProtoReflect.Descriptor instead.
func (*AdminEnabledIsResponse) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{14}
}

type BulkAdminEnabledIsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Array of AdminEnabledIsRequest.
	Requests []*AdminEnabledIsRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BulkAdminEnabledIsRequest) Reset() {
	*x = BulkAdminEnabledIsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkAdminEnabledIsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkAdminEnabledIsRequest) ProtoMessage() {}

func (x *BulkAdminEnabledIsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkAdminEnabledIsRequest.ProtoReflect.Descriptor instead.
func (*BulkAdminEnabledIsRequest) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{15}
}

func (x *BulkAdminEnabledIsRequest) GetRequests() []*AdminEnabledIsRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BulkAdminEnabledIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of successful requests.
	Processed uint64 `protobuf:"varint,1,opt,name=processed,proto3" json:"processed,omitempty"`
	// Error details in case of failure.
	Status *RpcResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BulkAdminEnabledIsResponse) Reset() {
	*x = BulkAdminEnabledIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkAdminEnabledIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkAdminEnabledIsResponse) ProtoMessage() {}

func (x *BulkAdminEnabledIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkAdminEnabledIsResponse.ProtoReflect.Descriptor instead.
func (*BulkAdminEnabledIsResponse) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{16}
}

func (x *BulkAdminEnabledIsResponse) GetProcessed() uint64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *BulkAdminEnabledIsResponse) GetStatus() *RpcResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type DescriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the interface.
	IntfId *IntfId `protobuf:"bytes,1,opt,name=intf_id,json=intfId,proto3" json:"intf_id,omitempty"`
}

func (x *DescriptionRequest) Reset() {
	*x = DescriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescriptionRequest) ProtoMessage() {}

func (x *DescriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescriptionRequest.ProtoReflect.Descriptor instead.
func (*DescriptionRequest) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{17}
}

func (x *DescriptionRequest) GetIntfId() *IntfId {
	if x != nil {
		return x.IntfId
	}
	return nil
}

type DescriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Description currently set for the interface.
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *DescriptionResponse) Reset() {
	*x = DescriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescriptionResponse) ProtoMessage() {}

func (x *DescriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescriptionResponse.ProtoReflect.Descriptor instead.
func (*DescriptionResponse) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{18}
}

func (x *DescriptionResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DescriptionIsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the interface.
	IntfId *IntfId `protobuf:"bytes,1,opt,name=intf_id,json=intfId,proto3" json:"intf_id,omitempty"`
	// New description for the interface.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *DescriptionIsRequest) Reset() {
	*x = DescriptionIsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescriptionIsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescriptionIsRequest) ProtoMessage() {}

func (x *DescriptionIsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescriptionIsRequest.ProtoReflect.Descriptor instead.
func (*DescriptionIsRequest) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{19}
}

func (x *DescriptionIsRequest) GetIntfId() *IntfId {
	if x != nil {
		return x.IntfId
	}
	return nil
}

func (x *DescriptionIsRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DescriptionIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DescriptionIsResponse) Reset() {
	*x = DescriptionIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescriptionIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescriptionIsResponse) ProtoMessage() {}

func (x *DescriptionIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescriptionIsResponse.ProtoReflect.Descriptor instead.
func (*DescriptionIsResponse) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{20}
}

type BulkDescriptionIsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Array of DescriptionIsRequest.
	Requests []*DescriptionIsRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BulkDescriptionIsRequest) Reset() {
	*x = BulkDescriptionIsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkDescriptionIsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkDescriptionIsRequest) ProtoMessage() {}

func (x *BulkDescriptionIsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkDescriptionIsRequest.ProtoReflect.Descriptor instead.
func (*BulkDescriptionIsRequest) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{21}
}

func (x *BulkDescriptionIsRequest) GetRequests() []*DescriptionIsRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BulkDescriptionIsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of successful requests.
	Processed uint64 `protobuf:"varint,1,opt,name=processed,proto3" json:"processed,omitempty"`
	// Error details in case of failure.
	Status *RpcResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BulkDescriptionIsResponse) Reset() {
	*x = BulkDescriptionIsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkDescriptionIsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkDescriptionIsResponse) ProtoMessage() {}

func (x *BulkDescriptionIsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkDescriptionIsResponse.ProtoReflect.Descriptor instead.
func (*BulkDescriptionIsResponse) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{22}
}

func (x *BulkDescriptionIsResponse) GetProcessed() uint64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *BulkDescriptionIsResponse) GetStatus() *RpcResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type OperStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the interface.
	IntfId *IntfId `protobuf:"bytes,1,opt,name=intf_id,json=intfId,proto3" json:"intf_id,omitempty"`
}

func (x *OperStatusRequest) Reset() {
	*x = OperStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperStatusRequest) ProtoMessage() {}

func (x *OperStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperStatusRequest.ProtoReflect.Descriptor instead.
func (*OperStatusRequest) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{23}
}

func (x *OperStatusRequest) GetIntfId() *IntfId {
	if x != nil {
		return x.IntfId
	}
	return nil
}

type OperStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operational status of the interface.
	Status OperStatuses `protobuf:"varint,1,opt,name=status,proto3,enum=eos.remote.OperStatuses" json:"status,omitempty"`
}

func (x *OperStatusResponse) Reset() {
	*x = OperStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperStatusResponse) ProtoMessage() {}

func (x *OperStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperStatusResponse.ProtoReflect.Descriptor instead.
func (*OperStatusResponse) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{24}
}

func (x *OperStatusResponse) GetStatus() OperStatuses {
	if x != nil {
		return x.Status
	}
	return OperStatuses_INTF_OPER_STATUS_NULL
}

type IntfCountersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the interface.
	IntfId *IntfId `protobuf:"bytes,1,opt,name=intf_id,json=intfId,proto3" json:"intf_id,omitempty"`
}

func (x *IntfCountersRequest) Reset() {
	*x = IntfCountersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntfCountersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntfCountersRequest) ProtoMessage() {}

func (x *IntfCountersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntfCountersRequest.ProtoReflect.Descriptor instead.
func (*IntfCountersRequest) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{25}
}

func (x *IntfCountersRequest) GetIntfId() *IntfId {
	if x != nil {
		return x.IntfId
	}
	return nil
}

type IntfCountersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The counters associated with the interface.
	Counters *IntfCounters `protobuf:"bytes,1,opt,name=counters,proto3" json:"counters,omitempty"`
}

func (x *IntfCountersResponse) Reset() {
	*x = IntfCountersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntfCountersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntfCountersResponse) ProtoMessage() {}

func (x *IntfCountersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntfCountersResponse.ProtoReflect.Descriptor instead.
func (*IntfCountersResponse) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{26}
}

func (x *IntfCountersResponse) GetCounters() *IntfCounters {
	if x != nil {
		return x.Counters
	}
	return nil
}

type IntfTrafficRatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the interface.
	IntfId *IntfId `protobuf:"bytes,1,opt,name=intf_id,json=intfId,proto3" json:"intf_id,omitempty"`
}

func (x *IntfTrafficRatesRequest) Reset() {
	*x = IntfTrafficRatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntfTrafficRatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntfTrafficRatesRequest) ProtoMessage() {}

func (x *IntfTrafficRatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntfTrafficRatesRequest.ProtoReflect.Descriptor instead.
func (*IntfTrafficRatesRequest) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{27}
}

func (x *IntfTrafficRatesRequest) GetIntfId() *IntfId {
	if x != nil {
		return x.IntfId
	}
	return nil
}

type IntfTrafficRatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The traffic rates associated with the interface.
	Rates *IntfTrafficRates `protobuf:"bytes,1,opt,name=rates,proto3" json:"rates,omitempty"`
}

func (x *IntfTrafficRatesResponse) Reset() {
	*x = IntfTrafficRatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntfTrafficRatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntfTrafficRatesResponse) ProtoMessage() {}

func (x *IntfTrafficRatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntfTrafficRatesResponse.ProtoReflect.Descriptor instead.
func (*IntfTrafficRatesResponse) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{28}
}

func (x *IntfTrafficRatesResponse) GetRates() *IntfTrafficRates {
	if x != nil {
		return x.Rates
	}
	return nil
}

type IntfTrafficRatesStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Set to true when an ackowledgment is desired.
	Ack bool `protobuf:"varint,1,opt,name=ack,proto3" json:"ack,omitempty"`
	// Regular expression to report only interfaces with matching names.
	// When empty, all interfaces are sent.
	IntfNameRegex string `protobuf:"bytes,2,opt,name=intf_name_regex,json=intfNameRegex,proto3" json:"intf_name_regex,omitempty"`
}

func (x *IntfTrafficRatesStreamRequest) Reset() {
	*x = IntfTrafficRatesStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntfTrafficRatesStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntfTrafficRatesStreamRequest) ProtoMessage() {}

func (x *IntfTrafficRatesStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntfTrafficRatesStreamRequest.ProtoReflect.Descriptor instead.
func (*IntfTrafficRatesStreamRequest) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{29}
}

func (x *IntfTrafficRatesStreamRequest) GetAck() bool {
	if x != nil {
		return x.Ack
	}
	return false
}

func (x *IntfTrafficRatesStreamRequest) GetIntfNameRegex() string {
	if x != nil {
		return x.IntfNameRegex
	}
	return ""
}

type IntfTrafficRatesStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If true the agent is now actively watching for events.
	Ack bool `protobuf:"varint,1,opt,name=ack,proto3" json:"ack,omitempty"`
	// Traffic rates data
	Data []*IntfTrafficRatesStreamResponse_DataEntry `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *IntfTrafficRatesStreamResponse) Reset() {
	*x = IntfTrafficRatesStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntfTrafficRatesStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntfTrafficRatesStreamResponse) ProtoMessage() {}

func (x *IntfTrafficRatesStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntfTrafficRatesStreamResponse.ProtoReflect.Descriptor instead.
func (*IntfTrafficRatesStreamResponse) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{30}
}

func (x *IntfTrafficRatesStreamResponse) GetAck() bool {
	if x != nil {
		return x.Ack
	}
	return false
}

func (x *IntfTrafficRatesStreamResponse) GetData() []*IntfTrafficRatesStreamResponse_DataEntry {
	if x != nil {
		return x.Data
	}
	return nil
}

type IntfTrafficRatesStreamResponse_DataEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface name
	IntfId *IntfId `protobuf:"bytes,1,opt,name=intf_id,json=intfId,proto3" json:"intf_id,omitempty"`
	// The traffic rates associated with the interface.
	Rates *IntfTrafficRates `protobuf:"bytes,2,opt,name=rates,proto3" json:"rates,omitempty"`
}

func (x *IntfTrafficRatesStreamResponse_DataEntry) Reset() {
	*x = IntfTrafficRatesStreamResponse_DataEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intf_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntfTrafficRatesStreamResponse_DataEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntfTrafficRatesStreamResponse_DataEntry) ProtoMessage() {}

func (x *IntfTrafficRatesStreamResponse_DataEntry) ProtoReflect() protoreflect.Message {
	mi := &file_intf_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntfTrafficRatesStreamResponse_DataEntry.ProtoReflect.Descriptor instead.
func (*IntfTrafficRatesStreamResponse_DataEntry) Descriptor() ([]byte, []int) {
	return file_intf_proto_rawDescGZIP(), []int{30, 0}
}

func (x *IntfTrafficRatesStreamResponse_DataEntry) GetIntfId() *IntfId {
	if x != nil {
		return x.IntfId
	}
	return nil
}

func (x *IntfTrafficRatesStreamResponse_DataEntry) GetRates() *IntfTrafficRates {
	if x != nil {
		return x.Rates
	}
	return nil
}

var File_intf_proto protoreflect.FileDescriptor

var file_intf_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x65, 0x6f,
	0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x1a, 0x0f, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x69, 0x6e, 0x74, 0x66, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x49, 0x0a, 0x11, 0x49,
	0x6e, 0x74, 0x66, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x12, 0x34, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e,
	0x74, 0x66, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xbf, 0x01, 0x0a, 0x10, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x6e, 0x74, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x61,
	0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x08, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x66, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x69, 0x6e,
	0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f,
	0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x48,
	0x00, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x12, 0x3e, 0x0a, 0x0b, 0x64,
	0x75, 0x6d, 0x70, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e,
	0x74, 0x66, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52,
	0x0a, 0x64, 0x75, 0x6d, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x6f,
	0x76, 0x65, 0x72, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22, 0xd9, 0x02, 0x0a, 0x11, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x6e, 0x74, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b,
	0x0a, 0x07, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74,
	0x66, 0x49, 0x64, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x48, 0x00, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x65, 0x6f,
	0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x48, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x25, 0x0a, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63,
	0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x42, 0x0f, 0x0a, 0x0d,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x42, 0x15, 0x0a,
	0x13, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x42, 0x17, 0x0a, 0x15, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x42, 0x15, 0x0a,
	0x13, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x66, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x3c, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x66, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x66,
	0x49, 0x64, 0x22, 0x40, 0x0a, 0x11, 0x49, 0x6e, 0x74, 0x66, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x66, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x06, 0x69, 0x6e,
	0x74, 0x66, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x12, 0x49, 0x6e, 0x74, 0x66, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x22, 0x44, 0x0a, 0x15, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x74, 0x66,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x69,
	0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65,
	0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64,
	0x52, 0x06, 0x69, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x16, 0x4b, 0x65, 0x72, 0x6e,
	0x65, 0x6c, 0x49, 0x6e, 0x74, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x28, 0x0a, 0x12, 0x45, 0x6f, 0x73, 0x49, 0x6e, 0x74,
	0x66, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x42, 0x0a, 0x13, 0x45, 0x6f, 0x73, 0x49, 0x6e, 0x74, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x66, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x06, 0x69, 0x6e,
	0x74, 0x66, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x13, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x69,
	0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65,
	0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64,
	0x52, 0x06, 0x69, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x5e, 0x0a, 0x15, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x66, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5a, 0x0a, 0x19, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x49, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x22, 0x71, 0x0a, 0x1a, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65,
	0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x41, 0x0a, 0x12, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x69, 0x6e, 0x74,
	0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x06,
	0x69, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x65, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x66, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x06, 0x69, 0x6e,
	0x74, 0x66, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x58, 0x0a, 0x18, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x70, 0x0a, 0x19, 0x42, 0x75, 0x6c,
	0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x40, 0x0a, 0x11, 0x4f,
	0x70, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2b, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49,
	0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22, 0x46, 0x0a,
	0x12, 0x4f, 0x70, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x42, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x66, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07,
	0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49,
	0x64, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x14, 0x49, 0x6e, 0x74,
	0x66, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x34, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x2e, 0x49, 0x6e, 0x74, 0x66, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x08, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x22, 0x46, 0x0a, 0x17, 0x49, 0x6e, 0x74, 0x66, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22,
	0x4e, 0x0a, 0x18, 0x49, 0x6e, 0x74, 0x66, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x72,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x52, 0x61, 0x74, 0x65, 0x73, 0x52, 0x05, 0x72, 0x61, 0x74, 0x65, 0x73, 0x22,
	0x59, 0x0a, 0x1d, 0x49, 0x6e, 0x74, 0x66, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x61,
	0x74, 0x65, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61,
	0x63, 0x6b, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x72, 0x65, 0x67, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74,
	0x66, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x67, 0x65, 0x78, 0x22, 0xea, 0x01, 0x0a, 0x1e, 0x49,
	0x6e, 0x74, 0x66, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x61, 0x74, 0x65, 0x73, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x12,
	0x48, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x61, 0x74, 0x65, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x6c, 0x0a, 0x09, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2b, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x06, 0x69, 0x6e, 0x74,
	0x66, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x49, 0x6e, 0x74, 0x66, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x05, 0x72, 0x61, 0x74, 0x65, 0x73, 0x2a, 0x6b, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x66, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x13, 0x0a, 0x0f, 0x49,
	0x4e, 0x54, 0x46, 0x5f, 0x41, 0x4c, 0x4c, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x53, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x41,
	0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x14,
	0x0a, 0x10, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x03, 0x2a, 0x57, 0x0a, 0x0a, 0x49, 0x6e, 0x74, 0x66, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x46,
	0x5f, 0x4e, 0x4f, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x53, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x49,
	0x4e, 0x54, 0x46, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x32, 0x96, 0x08,
	0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x67, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x48, 0x0a, 0x05, 0x77, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1c, 0x2e, 0x65, 0x6f, 0x73, 0x2e,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x74, 0x66,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x74, 0x66, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x40, 0x0a, 0x05, 0x69, 0x6e,
	0x74, 0x66, 0x73, 0x12, 0x18, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x2e, 0x49, 0x6e, 0x74, 0x66, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x49, 0x0a, 0x06,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x6b, 0x65, 0x72, 0x6e, 0x65,
	0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x2e, 0x65, 0x6f,
	0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x49,
	0x6e, 0x74, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x4b, 0x65, 0x72, 0x6e,
	0x65, 0x6c, 0x49, 0x6e, 0x74, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x65, 0x6f, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x66,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x2e, 0x45, 0x6f, 0x73, 0x49, 0x6e, 0x74, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x2e, 0x45, 0x6f, 0x73, 0x49, 0x6e, 0x74, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0d, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1f, 0x2e, 0x65, 0x6f, 0x73, 0x2e,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b,
	0x0a, 0x10, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f,
	0x69, 0x73, 0x12, 0x21, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x49, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x49,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x15, 0x62,
	0x75, 0x6c, 0x6b, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x5f, 0x69, 0x73, 0x12, 0x25, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6f,
	0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x73, 0x12, 0x20, 0x2e, 0x65, 0x6f, 0x73, 0x2e,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x6f,
	0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x64, 0x0a, 0x13, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x73, 0x12, 0x24, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xc8, 0x02, 0x0a, 0x15, 0x49, 0x6e, 0x74, 0x66, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x4d, 0x67, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x54, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x1f, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49,
	0x6e, 0x74, 0x66, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x49, 0x6e, 0x74, 0x66, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x12, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x74,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x65,
	0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49,
	0x6e, 0x74, 0x66, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x19, 0x69, 0x6e, 0x74,
	0x66, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x73, 0x5f,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x29, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52,
	0x61, 0x74, 0x65, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x49,
	0x6e, 0x74, 0x66, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x61, 0x74, 0x65, 0x73, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30,
	0x01, 0x42, 0x12, 0x5a, 0x10, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2f, 0x45, 0x6f, 0x73, 0x53,
	0x64, 0x6b, 0x52, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_intf_proto_rawDescOnce sync.Once
	file_intf_proto_rawDescData = file_intf_proto_rawDesc
)

func file_intf_proto_rawDescGZIP() []byte {
	file_intf_proto_rawDescOnce.Do(func() {
		file_intf_proto_rawDescData = protoimpl.X.CompressGZIP(file_intf_proto_rawDescData)
	})
	return file_intf_proto_rawDescData
}

var file_intf_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_intf_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_intf_proto_goTypes = []interface{}{
	(IntfWatchedField)(0),                            // 0: eos.remote.IntfWatchedField
	(IntfEvents)(0),                                  // 1: eos.remote.IntfEvents
	(*IntfFieldsControl)(nil),                        // 2: eos.remote.IntfFieldsControl
	(*WatchIntfRequest)(nil),                         // 3: eos.remote.WatchIntfRequest
	(*WatchIntfResponse)(nil),                        // 4: eos.remote.WatchIntfResponse
	(*IntfsRequest)(nil),                             // 5: eos.remote.IntfsRequest
	(*IntfsResponse)(nil),                            // 6: eos.remote.IntfsResponse
	(*IntfExistsRequest)(nil),                        // 7: eos.remote.IntfExistsRequest
	(*IntfExistsResponse)(nil),                       // 8: eos.remote.IntfExistsResponse
	(*KernelIntfNameRequest)(nil),                    // 9: eos.remote.KernelIntfNameRequest
	(*KernelIntfNameResponse)(nil),                   // 10: eos.remote.KernelIntfNameResponse
	(*EosIntfNameRequest)(nil),                       // 11: eos.remote.EosIntfNameRequest
	(*EosIntfNameResponse)(nil),                      // 12: eos.remote.EosIntfNameResponse
	(*AdminEnabledRequest)(nil),                      // 13: eos.remote.AdminEnabledRequest
	(*AdminEnabledResponse)(nil),                     // 14: eos.remote.AdminEnabledResponse
	(*AdminEnabledIsRequest)(nil),                    // 15: eos.remote.AdminEnabledIsRequest
	(*AdminEnabledIsResponse)(nil),                   // 16: eos.remote.AdminEnabledIsResponse
	(*BulkAdminEnabledIsRequest)(nil),                // 17: eos.remote.BulkAdminEnabledIsRequest
	(*BulkAdminEnabledIsResponse)(nil),               // 18: eos.remote.BulkAdminEnabledIsResponse
	(*DescriptionRequest)(nil),                       // 19: eos.remote.DescriptionRequest
	(*DescriptionResponse)(nil),                      // 20: eos.remote.DescriptionResponse
	(*DescriptionIsRequest)(nil),                     // 21: eos.remote.DescriptionIsRequest
	(*DescriptionIsResponse)(nil),                    // 22: eos.remote.DescriptionIsResponse
	(*BulkDescriptionIsRequest)(nil),                 // 23: eos.remote.BulkDescriptionIsRequest
	(*BulkDescriptionIsResponse)(nil),                // 24: eos.remote.BulkDescriptionIsResponse
	(*OperStatusRequest)(nil),                        // 25: eos.remote.OperStatusRequest
	(*OperStatusResponse)(nil),                       // 26: eos.remote.OperStatusResponse
	(*IntfCountersRequest)(nil),                      // 27: eos.remote.IntfCountersRequest
	(*IntfCountersResponse)(nil),                     // 28: eos.remote.IntfCountersResponse
	(*IntfTrafficRatesRequest)(nil),                  // 29: eos.remote.IntfTrafficRatesRequest
	(*IntfTrafficRatesResponse)(nil),                 // 30: eos.remote.IntfTrafficRatesResponse
	(*IntfTrafficRatesStreamRequest)(nil),            // 31: eos.remote.IntfTrafficRatesStreamRequest
	(*IntfTrafficRatesStreamResponse)(nil),           // 32: eos.remote.IntfTrafficRatesStreamResponse
	(*IntfTrafficRatesStreamResponse_DataEntry)(nil), // 33: eos.remote.IntfTrafficRatesStreamResponse.DataEntry
	(*IntfId)(nil),                                   // 34: eos.remote.IntfId
	(OperStatuses)(0),                                // 35: eos.remote.OperStatuses
	(*RpcResponseStatus)(nil),                        // 36: eos.remote.RpcResponseStatus
	(*IntfCounters)(nil),                             // 37: eos.remote.IntfCounters
	(*IntfTrafficRates)(nil),                         // 38: eos.remote.IntfTrafficRates
}
var file_intf_proto_depIdxs = []int32{
	0,  // 0: eos.remote.IntfFieldsControl.fields:type_name -> eos.remote.IntfWatchedField
	34, // 1: eos.remote.WatchIntfRequest.intf_id:type_name -> eos.remote.IntfId
	2,  // 2: eos.remote.WatchIntfRequest.dump_fields:type_name -> eos.remote.IntfFieldsControl
	34, // 3: eos.remote.WatchIntfResponse.intf_id:type_name -> eos.remote.IntfId
	1,  // 4: eos.remote.WatchIntfResponse.event:type_name -> eos.remote.IntfEvents
	35, // 5: eos.remote.WatchIntfResponse.status:type_name -> eos.remote.OperStatuses
	34, // 6: eos.remote.IntfsResponse.intf_id:type_name -> eos.remote.IntfId
	34, // 7: eos.remote.IntfExistsRequest.intf_id:type_name -> eos.remote.IntfId
	34, // 8: eos.remote.KernelIntfNameRequest.intf_id:type_name -> eos.remote.IntfId
	34, // 9: eos.remote.EosIntfNameResponse.intf_id:type_name -> eos.remote.IntfId
	34, // 10: eos.remote.AdminEnabledRequest.intf_id:type_name -> eos.remote.IntfId
	34, // 11: eos.remote.AdminEnabledIsRequest.intf_id:type_name -> eos.remote.IntfId
	15, // 12: eos.remote.BulkAdminEnabledIsRequest.requests:type_name -> eos.remote.AdminEnabledIsRequest
	36, // 13: eos.remote.BulkAdminEnabledIsResponse.status:type_name -> eos.remote.RpcResponseStatus
	34, // 14: eos.remote.DescriptionRequest.intf_id:type_name -> eos.remote.IntfId
	34, // 15: eos.remote.DescriptionIsRequest.intf_id:type_name -> eos.remote.IntfId
	21, // 16: eos.remote.BulkDescriptionIsRequest.requests:type_name -> eos.remote.DescriptionIsRequest
	36, // 17: eos.remote.BulkDescriptionIsResponse.status:type_name -> eos.remote.RpcResponseStatus
	34, // 18: eos.remote.OperStatusRequest.intf_id:type_name -> eos.remote.IntfId
	35, // 19: eos.remote.OperStatusResponse.status:type_name -> eos.remote.OperStatuses
	34, // 20: eos.remote.IntfCountersRequest.intf_id:type_name -> eos.remote.IntfId
	37, // 21: eos.remote.IntfCountersResponse.counters:type_name -> eos.remote.IntfCounters
	34, // 22: eos.remote.IntfTrafficRatesRequest.intf_id:type_name -> eos.remote.IntfId
	38, // 23: eos.remote.IntfTrafficRatesResponse.rates:type_name -> eos.remote.IntfTrafficRates
	33, // 24: eos.remote.IntfTrafficRatesStreamResponse.data:type_name -> eos.remote.IntfTrafficRatesStreamResponse.DataEntry
	34, // 25: eos.remote.IntfTrafficRatesStreamResponse.DataEntry.intf_id:type_name -> eos.remote.IntfId
	38, // 26: eos.remote.IntfTrafficRatesStreamResponse.DataEntry.rates:type_name -> eos.remote.IntfTrafficRates
	3,  // 27: eos.remote.IntfMgrService.watch:input_type -> eos.remote.WatchIntfRequest
	5,  // 28: eos.remote.IntfMgrService.intfs:input_type -> eos.remote.IntfsRequest
	7,  // 29: eos.remote.IntfMgrService.exists:input_type -> eos.remote.IntfExistsRequest
	9,  // 30: eos.remote.IntfMgrService.kernel_intf_name:input_type -> eos.remote.KernelIntfNameRequest
	11, // 31: eos.remote.IntfMgrService.eos_intf_name:input_type -> eos.remote.EosIntfNameRequest
	13, // 32: eos.remote.IntfMgrService.admin_enabled:input_type -> eos.remote.AdminEnabledRequest
	15, // 33: eos.remote.IntfMgrService.admin_enabled_is:input_type -> eos.remote.AdminEnabledIsRequest
	17, // 34: eos.remote.IntfMgrService.bulk_admin_enabled_is:input_type -> eos.remote.BulkAdminEnabledIsRequest
	19, // 35: eos.remote.IntfMgrService.description:input_type -> eos.remote.DescriptionRequest
	21, // 36: eos.remote.IntfMgrService.description_is:input_type -> eos.remote.DescriptionIsRequest
	23, // 37: eos.remote.IntfMgrService.bulk_description_is:input_type -> eos.remote.BulkDescriptionIsRequest
	25, // 38: eos.remote.IntfMgrService.oper_status:input_type -> eos.remote.OperStatusRequest
	27, // 39: eos.remote.IntfCounterMgrService.intf_counters:input_type -> eos.remote.IntfCountersRequest
	29, // 40: eos.remote.IntfCounterMgrService.intf_traffic_rates:input_type -> eos.remote.IntfTrafficRatesRequest
	31, // 41: eos.remote.IntfCounterMgrService.intf_traffic_rates_stream:input_type -> eos.remote.IntfTrafficRatesStreamRequest
	4,  // 42: eos.remote.IntfMgrService.watch:output_type -> eos.remote.WatchIntfResponse
	6,  // 43: eos.remote.IntfMgrService.intfs:output_type -> eos.remote.IntfsResponse
	8,  // 44: eos.remote.IntfMgrService.exists:output_type -> eos.remote.IntfExistsResponse
	10, // 45: eos.remote.IntfMgrService.kernel_intf_name:output_type -> eos.remote.KernelIntfNameResponse
	12, // 46: eos.remote.IntfMgrService.eos_intf_name:output_type -> eos.remote.EosIntfNameResponse
	14, // 47: eos.remote.IntfMgrService.admin_enabled:output_type -> eos.remote.AdminEnabledResponse
	16, // 48: eos.remote.IntfMgrService.admin_enabled_is:output_type -> eos.remote.AdminEnabledIsResponse
	18, // 49: eos.remote.IntfMgrService.bulk_admin_enabled_is:output_type -> eos.remote.BulkAdminEnabledIsResponse
	20, // 50: eos.remote.IntfMgrService.description:output_type -> eos.remote.DescriptionResponse
	22, // 51: eos.remote.IntfMgrService.description_is:output_type -> eos.remote.DescriptionIsResponse
	24, // 52: eos.remote.IntfMgrService.bulk_description_is:output_type -> eos.remote.BulkDescriptionIsResponse
	26, // 53: eos.remote.IntfMgrService.oper_status:output_type -> eos.remote.OperStatusResponse
	28, // 54: eos.remote.IntfCounterMgrService.intf_counters:output_type -> eos.remote.IntfCountersResponse
	30, // 55: eos.remote.IntfCounterMgrService.intf_traffic_rates:output_type -> eos.remote.IntfTrafficRatesResponse
	32, // 56: eos.remote.IntfCounterMgrService.intf_traffic_rates_stream:output_type -> eos.remote.IntfTrafficRatesStreamResponse
	42, // [42:57] is the sub-list for method output_type
	27, // [27:42] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_intf_proto_init() }
func file_intf_proto_init() {
	if File_intf_proto != nil {
		return
	}
	file_rpc_types_proto_init()
	file_intf_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_intf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntfFieldsControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchIntfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchIntfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntfsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntfsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntfExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntfExistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KernelIntfNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KernelIntfNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosIntfNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosIntfNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminEnabledRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminEnabledResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminEnabledIsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminEnabledIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkAdminEnabledIsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkAdminEnabledIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescriptionIsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescriptionIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkDescriptionIsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkDescriptionIsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntfCountersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntfCountersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntfTrafficRatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntfTrafficRatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntfTrafficRatesStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntfTrafficRatesStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intf_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntfTrafficRatesStreamResponse_DataEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_intf_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*WatchIntfRequest_AllIntfs)(nil),
		(*WatchIntfRequest_IntfId)(nil),
	}
	file_intf_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*WatchIntfResponse_Event)(nil),
		(*WatchIntfResponse_Status)(nil),
		(*WatchIntfResponse_AdminEnabled)(nil),
		(*WatchIntfResponse_Description)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_intf_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_intf_proto_goTypes,
		DependencyIndexes: file_intf_proto_depIdxs,
		EnumInfos:         file_intf_proto_enumTypes,
		MessageInfos:      file_intf_proto_msgTypes,
	}.Build()
	File_intf_proto = out.File
	file_intf_proto_rawDesc = nil
	file_intf_proto_goTypes = nil
	file_intf_proto_depIdxs = nil
}
