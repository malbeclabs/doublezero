// Copyright (c) 2023 Arista Networks, Inc.  All rights reserved.
// Arista Networks, Inc. Confidential and Proprietary.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: mpls_vrf_label.proto

package EosSdkRpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MplsVrfLabelResyncInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MplsVrfLabelResyncInitRequest) Reset() {
	*x = MplsVrfLabelResyncInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpls_vrf_label_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MplsVrfLabelResyncInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MplsVrfLabelResyncInitRequest) ProtoMessage() {}

func (x *MplsVrfLabelResyncInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpls_vrf_label_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MplsVrfLabelResyncInitRequest.ProtoReflect.Descriptor instead.
func (*MplsVrfLabelResyncInitRequest) Descriptor() ([]byte, []int) {
	return file_mpls_vrf_label_proto_rawDescGZIP(), []int{0}
}

type MplsVrfLabelResyncInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MplsVrfLabelResyncInitResponse) Reset() {
	*x = MplsVrfLabelResyncInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpls_vrf_label_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MplsVrfLabelResyncInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MplsVrfLabelResyncInitResponse) ProtoMessage() {}

func (x *MplsVrfLabelResyncInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpls_vrf_label_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MplsVrfLabelResyncInitResponse.ProtoReflect.Descriptor instead.
func (*MplsVrfLabelResyncInitResponse) Descriptor() ([]byte, []int) {
	return file_mpls_vrf_label_proto_rawDescGZIP(), []int{1}
}

type MplsVrfLabelResyncCompleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MplsVrfLabelResyncCompleteRequest) Reset() {
	*x = MplsVrfLabelResyncCompleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpls_vrf_label_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MplsVrfLabelResyncCompleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MplsVrfLabelResyncCompleteRequest) ProtoMessage() {}

func (x *MplsVrfLabelResyncCompleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpls_vrf_label_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MplsVrfLabelResyncCompleteRequest.ProtoReflect.Descriptor instead.
func (*MplsVrfLabelResyncCompleteRequest) Descriptor() ([]byte, []int) {
	return file_mpls_vrf_label_proto_rawDescGZIP(), []int{2}
}

type MplsVrfLabelResyncCompleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MplsVrfLabelResyncCompleteResponse) Reset() {
	*x = MplsVrfLabelResyncCompleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpls_vrf_label_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MplsVrfLabelResyncCompleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MplsVrfLabelResyncCompleteResponse) ProtoMessage() {}

func (x *MplsVrfLabelResyncCompleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpls_vrf_label_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MplsVrfLabelResyncCompleteResponse.ProtoReflect.Descriptor instead.
func (*MplsVrfLabelResyncCompleteResponse) Descriptor() ([]byte, []int) {
	return file_mpls_vrf_label_proto_rawDescGZIP(), []int{3}
}

type MplsVrfLabelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MplsVrfLabelsRequest) Reset() {
	*x = MplsVrfLabelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpls_vrf_label_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MplsVrfLabelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MplsVrfLabelsRequest) ProtoMessage() {}

func (x *MplsVrfLabelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpls_vrf_label_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MplsVrfLabelsRequest.ProtoReflect.Descriptor instead.
func (*MplsVrfLabelsRequest) Descriptor() ([]byte, []int) {
	return file_mpls_vrf_label_proto_rawDescGZIP(), []int{4}
}

type MplsVrfLabelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The configured MPLS VRF labels.
	VrfLabel *MplsVrfLabel `protobuf:"bytes,1,opt,name=vrf_label,json=vrfLabel,proto3" json:"vrf_label,omitempty"`
}

func (x *MplsVrfLabelsResponse) Reset() {
	*x = MplsVrfLabelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpls_vrf_label_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MplsVrfLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MplsVrfLabelsResponse) ProtoMessage() {}

func (x *MplsVrfLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpls_vrf_label_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MplsVrfLabelsResponse.ProtoReflect.Descriptor instead.
func (*MplsVrfLabelsResponse) Descriptor() ([]byte, []int) {
	return file_mpls_vrf_label_proto_rawDescGZIP(), []int{5}
}

func (x *MplsVrfLabelsResponse) GetVrfLabel() *MplsVrfLabel {
	if x != nil {
		return x.VrfLabel
	}
	return nil
}

type MplsVrfLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The MPLS label of the MPLS VRF label to search.
	Label *MplsLabel `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *MplsVrfLabelRequest) Reset() {
	*x = MplsVrfLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpls_vrf_label_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MplsVrfLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MplsVrfLabelRequest) ProtoMessage() {}

func (x *MplsVrfLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpls_vrf_label_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MplsVrfLabelRequest.ProtoReflect.Descriptor instead.
func (*MplsVrfLabelRequest) Descriptor() ([]byte, []int) {
	return file_mpls_vrf_label_proto_rawDescGZIP(), []int{6}
}

func (x *MplsVrfLabelRequest) GetLabel() *MplsLabel {
	if x != nil {
		return x.Label
	}
	return nil
}

type MplsVrfLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Current configuration of the MPLS VRF label.
	VrfLabel *MplsVrfLabel `protobuf:"bytes,1,opt,name=vrf_label,json=vrfLabel,proto3" json:"vrf_label,omitempty"`
}

func (x *MplsVrfLabelResponse) Reset() {
	*x = MplsVrfLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpls_vrf_label_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MplsVrfLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MplsVrfLabelResponse) ProtoMessage() {}

func (x *MplsVrfLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpls_vrf_label_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MplsVrfLabelResponse.ProtoReflect.Descriptor instead.
func (*MplsVrfLabelResponse) Descriptor() ([]byte, []int) {
	return file_mpls_vrf_label_proto_rawDescGZIP(), []int{7}
}

func (x *MplsVrfLabelResponse) GetVrfLabel() *MplsVrfLabel {
	if x != nil {
		return x.VrfLabel
	}
	return nil
}

type MplsVrfLabelSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The MPLS VRF label to insert or update.
	VrfLabel *MplsVrfLabel `protobuf:"bytes,1,opt,name=vrf_label,json=vrfLabel,proto3" json:"vrf_label,omitempty"`
}

func (x *MplsVrfLabelSetRequest) Reset() {
	*x = MplsVrfLabelSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpls_vrf_label_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MplsVrfLabelSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MplsVrfLabelSetRequest) ProtoMessage() {}

func (x *MplsVrfLabelSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpls_vrf_label_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MplsVrfLabelSetRequest.ProtoReflect.Descriptor instead.
func (*MplsVrfLabelSetRequest) Descriptor() ([]byte, []int) {
	return file_mpls_vrf_label_proto_rawDescGZIP(), []int{8}
}

func (x *MplsVrfLabelSetRequest) GetVrfLabel() *MplsVrfLabel {
	if x != nil {
		return x.VrfLabel
	}
	return nil
}

type MplsVrfLabelSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MplsVrfLabelSetResponse) Reset() {
	*x = MplsVrfLabelSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpls_vrf_label_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MplsVrfLabelSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MplsVrfLabelSetResponse) ProtoMessage() {}

func (x *MplsVrfLabelSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpls_vrf_label_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MplsVrfLabelSetResponse.ProtoReflect.Descriptor instead.
func (*MplsVrfLabelSetResponse) Descriptor() ([]byte, []int) {
	return file_mpls_vrf_label_proto_rawDescGZIP(), []int{9}
}

type BulkMplsVrfLabelSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of MplsVrfLabelSetRequests.
	Requests []*MplsVrfLabelSetRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BulkMplsVrfLabelSetRequest) Reset() {
	*x = BulkMplsVrfLabelSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpls_vrf_label_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkMplsVrfLabelSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkMplsVrfLabelSetRequest) ProtoMessage() {}

func (x *BulkMplsVrfLabelSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpls_vrf_label_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkMplsVrfLabelSetRequest.ProtoReflect.Descriptor instead.
func (*BulkMplsVrfLabelSetRequest) Descriptor() ([]byte, []int) {
	return file_mpls_vrf_label_proto_rawDescGZIP(), []int{10}
}

func (x *BulkMplsVrfLabelSetRequest) GetRequests() []*MplsVrfLabelSetRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BulkMplsVrfLabelSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of consecutive successful requests.
	Processed uint64 `protobuf:"varint,1,opt,name=processed,proto3" json:"processed,omitempty"`
	// Success or error details in the event of failure.
	Status *RpcResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BulkMplsVrfLabelSetResponse) Reset() {
	*x = BulkMplsVrfLabelSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpls_vrf_label_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkMplsVrfLabelSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkMplsVrfLabelSetResponse) ProtoMessage() {}

func (x *BulkMplsVrfLabelSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpls_vrf_label_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkMplsVrfLabelSetResponse.ProtoReflect.Descriptor instead.
func (*BulkMplsVrfLabelSetResponse) Descriptor() ([]byte, []int) {
	return file_mpls_vrf_label_proto_rawDescGZIP(), []int{11}
}

func (x *BulkMplsVrfLabelSetResponse) GetProcessed() uint64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *BulkMplsVrfLabelSetResponse) GetStatus() *RpcResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type MplsVrfLabelDelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The MPLS label of the MPLS VRF label to remove.
	Label *MplsLabel `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *MplsVrfLabelDelRequest) Reset() {
	*x = MplsVrfLabelDelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpls_vrf_label_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MplsVrfLabelDelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MplsVrfLabelDelRequest) ProtoMessage() {}

func (x *MplsVrfLabelDelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpls_vrf_label_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MplsVrfLabelDelRequest.ProtoReflect.Descriptor instead.
func (*MplsVrfLabelDelRequest) Descriptor() ([]byte, []int) {
	return file_mpls_vrf_label_proto_rawDescGZIP(), []int{12}
}

func (x *MplsVrfLabelDelRequest) GetLabel() *MplsLabel {
	if x != nil {
		return x.Label
	}
	return nil
}

type MplsVrfLabelDelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MplsVrfLabelDelResponse) Reset() {
	*x = MplsVrfLabelDelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpls_vrf_label_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MplsVrfLabelDelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MplsVrfLabelDelResponse) ProtoMessage() {}

func (x *MplsVrfLabelDelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpls_vrf_label_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MplsVrfLabelDelResponse.ProtoReflect.Descriptor instead.
func (*MplsVrfLabelDelResponse) Descriptor() ([]byte, []int) {
	return file_mpls_vrf_label_proto_rawDescGZIP(), []int{13}
}

type BulkMplsVrfLabelDelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of MplsVrfLabelDelRequests.
	Requests []*MplsVrfLabelDelRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BulkMplsVrfLabelDelRequest) Reset() {
	*x = BulkMplsVrfLabelDelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpls_vrf_label_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkMplsVrfLabelDelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkMplsVrfLabelDelRequest) ProtoMessage() {}

func (x *BulkMplsVrfLabelDelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mpls_vrf_label_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkMplsVrfLabelDelRequest.ProtoReflect.Descriptor instead.
func (*BulkMplsVrfLabelDelRequest) Descriptor() ([]byte, []int) {
	return file_mpls_vrf_label_proto_rawDescGZIP(), []int{14}
}

func (x *BulkMplsVrfLabelDelRequest) GetRequests() []*MplsVrfLabelDelRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BulkMplsVrfLabelDelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of consecutive successful requests.
	Processed uint64 `protobuf:"varint,1,opt,name=processed,proto3" json:"processed,omitempty"`
	// Success or error details in the event of failure.
	Status *RpcResponseStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BulkMplsVrfLabelDelResponse) Reset() {
	*x = BulkMplsVrfLabelDelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mpls_vrf_label_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkMplsVrfLabelDelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkMplsVrfLabelDelResponse) ProtoMessage() {}

func (x *BulkMplsVrfLabelDelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mpls_vrf_label_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkMplsVrfLabelDelResponse.ProtoReflect.Descriptor instead.
func (*BulkMplsVrfLabelDelResponse) Descriptor() ([]byte, []int) {
	return file_mpls_vrf_label_proto_rawDescGZIP(), []int{15}
}

func (x *BulkMplsVrfLabelDelResponse) GetProcessed() uint64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *BulkMplsVrfLabelDelResponse) GetStatus() *RpcResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_mpls_vrf_label_proto protoreflect.FileDescriptor

var file_mpls_vrf_label_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6d, 0x70, 0x6c, 0x73, 0x5f, 0x76, 0x72, 0x66, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x1a, 0x10, 0x6d, 0x70, 0x6c, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x6d, 0x70, 0x6c, 0x73, 0x5f, 0x76, 0x72, 0x66, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0f, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x1f, 0x0a, 0x1d, 0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x20, 0x0a, 0x1e, 0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x24, 0x0a, 0x22, 0x4d, 0x70, 0x6c,
	0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x16, 0x0a, 0x14, 0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x15, 0x4d, 0x70, 0x6c, 0x73, 0x56,
	0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x09, 0x76, 0x72, 0x66, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x2e, 0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x08, 0x76,
	0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x42, 0x0a, 0x13, 0x4d, 0x70, 0x6c, 0x73, 0x56,
	0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x4d, 0x70, 0x6c, 0x73, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x4d, 0x0a, 0x14, 0x4d,
	0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x76, 0x72, 0x66, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x2e, 0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x52, 0x08, 0x76, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x4f, 0x0a, 0x16, 0x4d, 0x70,
	0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x76, 0x72, 0x66, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x08, 0x76, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x19, 0x0a, 0x17, 0x4d,
	0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5c, 0x0a, 0x1a, 0x42, 0x75, 0x6c, 0x6b, 0x4d, 0x70,
	0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x2e, 0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x22, 0x72, 0x0a, 0x1b, 0x42, 0x75, 0x6c, 0x6b, 0x4d, 0x70, 0x6c, 0x73,
	0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x45, 0x0a, 0x16, 0x4d, 0x70, 0x6c, 0x73,
	0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x4d,
	0x70, 0x6c, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22,
	0x19, 0x0a, 0x17, 0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5c, 0x0a, 0x1a, 0x42, 0x75,
	0x6c, 0x6b, 0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x72, 0x0a, 0x1b, 0x42, 0x75, 0x6c, 0x6b,
	0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xc5, 0x06, 0x0a,
	0x16, 0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4d, 0x67, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x12, 0x29, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x2e, 0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x4d,
	0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x79, 0x6e,
	0x63, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x72, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x2d, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x79,
	0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x4d,
	0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x79, 0x6e,
	0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0f, 0x6d, 0x70, 0x6c, 0x73, 0x5f, 0x76, 0x72, 0x66, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x20, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x2e, 0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x55, 0x0a, 0x0e, 0x6d, 0x70, 0x6c, 0x73, 0x5f, 0x76, 0x72, 0x66, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x1f, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x4d,
	0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x12, 0x6d, 0x70, 0x6c, 0x73, 0x5f, 0x76,
	0x72, 0x66, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x65,
	0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72,
	0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x4d, 0x70,
	0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x17, 0x62, 0x75, 0x6c, 0x6b, 0x5f,
	0x6d, 0x70, 0x6c, 0x73, 0x5f, 0x76, 0x72, 0x66, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73,
	0x65, 0x74, 0x12, 0x26, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x42, 0x75, 0x6c, 0x6b, 0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x4d, 0x70, 0x6c, 0x73,
	0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x12, 0x6d, 0x70, 0x6c, 0x73, 0x5f, 0x76, 0x72,
	0x66, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x12, 0x22, 0x2e, 0x65, 0x6f,
	0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x4d, 0x70, 0x6c,
	0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x17, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x6d,
	0x70, 0x6c, 0x73, 0x5f, 0x76, 0x72, 0x66, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x65,
	0x6c, 0x12, 0x26, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x42,
	0x75, 0x6c, 0x6b, 0x4d, 0x70, 0x6c, 0x73, 0x56, 0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x65, 0x6f, 0x73, 0x2e,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x4d, 0x70, 0x6c, 0x73, 0x56,
	0x72, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x12, 0x5a, 0x10, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2f, 0x45,
	0x6f, 0x73, 0x53, 0x64, 0x6b, 0x52, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mpls_vrf_label_proto_rawDescOnce sync.Once
	file_mpls_vrf_label_proto_rawDescData = file_mpls_vrf_label_proto_rawDesc
)

func file_mpls_vrf_label_proto_rawDescGZIP() []byte {
	file_mpls_vrf_label_proto_rawDescOnce.Do(func() {
		file_mpls_vrf_label_proto_rawDescData = protoimpl.X.CompressGZIP(file_mpls_vrf_label_proto_rawDescData)
	})
	return file_mpls_vrf_label_proto_rawDescData
}

var file_mpls_vrf_label_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_mpls_vrf_label_proto_goTypes = []interface{}{
	(*MplsVrfLabelResyncInitRequest)(nil),      // 0: eos.remote.MplsVrfLabelResyncInitRequest
	(*MplsVrfLabelResyncInitResponse)(nil),     // 1: eos.remote.MplsVrfLabelResyncInitResponse
	(*MplsVrfLabelResyncCompleteRequest)(nil),  // 2: eos.remote.MplsVrfLabelResyncCompleteRequest
	(*MplsVrfLabelResyncCompleteResponse)(nil), // 3: eos.remote.MplsVrfLabelResyncCompleteResponse
	(*MplsVrfLabelsRequest)(nil),               // 4: eos.remote.MplsVrfLabelsRequest
	(*MplsVrfLabelsResponse)(nil),              // 5: eos.remote.MplsVrfLabelsResponse
	(*MplsVrfLabelRequest)(nil),                // 6: eos.remote.MplsVrfLabelRequest
	(*MplsVrfLabelResponse)(nil),               // 7: eos.remote.MplsVrfLabelResponse
	(*MplsVrfLabelSetRequest)(nil),             // 8: eos.remote.MplsVrfLabelSetRequest
	(*MplsVrfLabelSetResponse)(nil),            // 9: eos.remote.MplsVrfLabelSetResponse
	(*BulkMplsVrfLabelSetRequest)(nil),         // 10: eos.remote.BulkMplsVrfLabelSetRequest
	(*BulkMplsVrfLabelSetResponse)(nil),        // 11: eos.remote.BulkMplsVrfLabelSetResponse
	(*MplsVrfLabelDelRequest)(nil),             // 12: eos.remote.MplsVrfLabelDelRequest
	(*MplsVrfLabelDelResponse)(nil),            // 13: eos.remote.MplsVrfLabelDelResponse
	(*BulkMplsVrfLabelDelRequest)(nil),         // 14: eos.remote.BulkMplsVrfLabelDelRequest
	(*BulkMplsVrfLabelDelResponse)(nil),        // 15: eos.remote.BulkMplsVrfLabelDelResponse
	(*MplsVrfLabel)(nil),                       // 16: eos.remote.MplsVrfLabel
	(*MplsLabel)(nil),                          // 17: eos.remote.MplsLabel
	(*RpcResponseStatus)(nil),                  // 18: eos.remote.RpcResponseStatus
}
var file_mpls_vrf_label_proto_depIdxs = []int32{
	16, // 0: eos.remote.MplsVrfLabelsResponse.vrf_label:type_name -> eos.remote.MplsVrfLabel
	17, // 1: eos.remote.MplsVrfLabelRequest.label:type_name -> eos.remote.MplsLabel
	16, // 2: eos.remote.MplsVrfLabelResponse.vrf_label:type_name -> eos.remote.MplsVrfLabel
	16, // 3: eos.remote.MplsVrfLabelSetRequest.vrf_label:type_name -> eos.remote.MplsVrfLabel
	8,  // 4: eos.remote.BulkMplsVrfLabelSetRequest.requests:type_name -> eos.remote.MplsVrfLabelSetRequest
	18, // 5: eos.remote.BulkMplsVrfLabelSetResponse.status:type_name -> eos.remote.RpcResponseStatus
	17, // 6: eos.remote.MplsVrfLabelDelRequest.label:type_name -> eos.remote.MplsLabel
	12, // 7: eos.remote.BulkMplsVrfLabelDelRequest.requests:type_name -> eos.remote.MplsVrfLabelDelRequest
	18, // 8: eos.remote.BulkMplsVrfLabelDelResponse.status:type_name -> eos.remote.RpcResponseStatus
	0,  // 9: eos.remote.MplsVrfLabelMgrService.resync_init:input_type -> eos.remote.MplsVrfLabelResyncInitRequest
	2,  // 10: eos.remote.MplsVrfLabelMgrService.resync_complete:input_type -> eos.remote.MplsVrfLabelResyncCompleteRequest
	4,  // 11: eos.remote.MplsVrfLabelMgrService.mpls_vrf_labels:input_type -> eos.remote.MplsVrfLabelsRequest
	6,  // 12: eos.remote.MplsVrfLabelMgrService.mpls_vrf_label:input_type -> eos.remote.MplsVrfLabelRequest
	8,  // 13: eos.remote.MplsVrfLabelMgrService.mpls_vrf_label_set:input_type -> eos.remote.MplsVrfLabelSetRequest
	10, // 14: eos.remote.MplsVrfLabelMgrService.bulk_mpls_vrf_label_set:input_type -> eos.remote.BulkMplsVrfLabelSetRequest
	12, // 15: eos.remote.MplsVrfLabelMgrService.mpls_vrf_label_del:input_type -> eos.remote.MplsVrfLabelDelRequest
	14, // 16: eos.remote.MplsVrfLabelMgrService.bulk_mpls_vrf_label_del:input_type -> eos.remote.BulkMplsVrfLabelDelRequest
	1,  // 17: eos.remote.MplsVrfLabelMgrService.resync_init:output_type -> eos.remote.MplsVrfLabelResyncInitResponse
	3,  // 18: eos.remote.MplsVrfLabelMgrService.resync_complete:output_type -> eos.remote.MplsVrfLabelResyncCompleteResponse
	5,  // 19: eos.remote.MplsVrfLabelMgrService.mpls_vrf_labels:output_type -> eos.remote.MplsVrfLabelsResponse
	7,  // 20: eos.remote.MplsVrfLabelMgrService.mpls_vrf_label:output_type -> eos.remote.MplsVrfLabelResponse
	9,  // 21: eos.remote.MplsVrfLabelMgrService.mpls_vrf_label_set:output_type -> eos.remote.MplsVrfLabelSetResponse
	11, // 22: eos.remote.MplsVrfLabelMgrService.bulk_mpls_vrf_label_set:output_type -> eos.remote.BulkMplsVrfLabelSetResponse
	13, // 23: eos.remote.MplsVrfLabelMgrService.mpls_vrf_label_del:output_type -> eos.remote.MplsVrfLabelDelResponse
	15, // 24: eos.remote.MplsVrfLabelMgrService.bulk_mpls_vrf_label_del:output_type -> eos.remote.BulkMplsVrfLabelDelResponse
	17, // [17:25] is the sub-list for method output_type
	9,  // [9:17] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_mpls_vrf_label_proto_init() }
func file_mpls_vrf_label_proto_init() {
	if File_mpls_vrf_label_proto != nil {
		return
	}
	file_mpls_types_proto_init()
	file_mpls_vrf_label_types_proto_init()
	file_rpc_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mpls_vrf_label_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MplsVrfLabelResyncInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpls_vrf_label_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MplsVrfLabelResyncInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpls_vrf_label_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MplsVrfLabelResyncCompleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpls_vrf_label_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MplsVrfLabelResyncCompleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpls_vrf_label_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MplsVrfLabelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpls_vrf_label_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MplsVrfLabelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpls_vrf_label_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MplsVrfLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpls_vrf_label_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MplsVrfLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpls_vrf_label_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MplsVrfLabelSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpls_vrf_label_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MplsVrfLabelSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpls_vrf_label_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkMplsVrfLabelSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpls_vrf_label_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkMplsVrfLabelSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpls_vrf_label_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MplsVrfLabelDelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpls_vrf_label_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MplsVrfLabelDelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpls_vrf_label_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkMplsVrfLabelDelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mpls_vrf_label_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkMplsVrfLabelDelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mpls_vrf_label_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mpls_vrf_label_proto_goTypes,
		DependencyIndexes: file_mpls_vrf_label_proto_depIdxs,
		MessageInfos:      file_mpls_vrf_label_proto_msgTypes,
	}.Build()
	File_mpls_vrf_label_proto = out.File
	file_mpls_vrf_label_proto_rawDesc = nil
	file_mpls_vrf_label_proto_goTypes = nil
	file_mpls_vrf_label_proto_depIdxs = nil
}
