// Copyright (c) 2022 Arista Networks, Inc.  All rights reserved.
// Arista Networks, Inc. Confidential and Proprietary.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: eth_lag_intf_types.proto

package EosSdkRpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EthLagIntfFallbackType int32

const (
	// Not a valid fallback type.
	EthLagIntfFallbackType_ETH_LAG_INTF_FALLBACK_NULL EthLagIntfFallbackType = 0
	// No fallback if no LACPDUs seen.
	EthLagIntfFallbackType_ETH_LAG_INTF_FALLBACK_NONE EthLagIntfFallbackType = 1
	// Fallback to static mode.
	EthLagIntfFallbackType_ETH_LAG_INTF_FALLBACK_STATIC EthLagIntfFallbackType = 2
	// Fallback to individual mode.
	EthLagIntfFallbackType_ETH_LAG_INTF_FALLBACK_INDIVIDUAL EthLagIntfFallbackType = 3
)

// Enum value maps for EthLagIntfFallbackType.
var (
	EthLagIntfFallbackType_name = map[int32]string{
		0: "ETH_LAG_INTF_FALLBACK_NULL",
		1: "ETH_LAG_INTF_FALLBACK_NONE",
		2: "ETH_LAG_INTF_FALLBACK_STATIC",
		3: "ETH_LAG_INTF_FALLBACK_INDIVIDUAL",
	}
	EthLagIntfFallbackType_value = map[string]int32{
		"ETH_LAG_INTF_FALLBACK_NULL":       0,
		"ETH_LAG_INTF_FALLBACK_NONE":       1,
		"ETH_LAG_INTF_FALLBACK_STATIC":     2,
		"ETH_LAG_INTF_FALLBACK_INDIVIDUAL": 3,
	}
)

func (x EthLagIntfFallbackType) Enum() *EthLagIntfFallbackType {
	p := new(EthLagIntfFallbackType)
	*p = x
	return p
}

func (x EthLagIntfFallbackType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EthLagIntfFallbackType) Descriptor() protoreflect.EnumDescriptor {
	return file_eth_lag_intf_types_proto_enumTypes[0].Descriptor()
}

func (EthLagIntfFallbackType) Type() protoreflect.EnumType {
	return &file_eth_lag_intf_types_proto_enumTypes[0]
}

func (x EthLagIntfFallbackType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EthLagIntfFallbackType.Descriptor instead.
func (EthLagIntfFallbackType) EnumDescriptor() ([]byte, []int) {
	return file_eth_lag_intf_types_proto_rawDescGZIP(), []int{0}
}

type EthLagIntfMemberLacpMode int32

const (
	EthLagIntfMemberLacpMode_ETH_LAG_INTF_MEMBER_LACP_MODE_NULL    EthLagIntfMemberLacpMode = 0
	EthLagIntfMemberLacpMode_ETH_LAG_INTF_MEMBER_LACP_MODE_OFF     EthLagIntfMemberLacpMode = 1
	EthLagIntfMemberLacpMode_ETH_LAG_INTF_MEMBER_LACP_MODE_PASSIVE EthLagIntfMemberLacpMode = 2
	EthLagIntfMemberLacpMode_ETH_LAG_INTF_MEMBER_LACP_MODE_ACTIVE  EthLagIntfMemberLacpMode = 3
)

// Enum value maps for EthLagIntfMemberLacpMode.
var (
	EthLagIntfMemberLacpMode_name = map[int32]string{
		0: "ETH_LAG_INTF_MEMBER_LACP_MODE_NULL",
		1: "ETH_LAG_INTF_MEMBER_LACP_MODE_OFF",
		2: "ETH_LAG_INTF_MEMBER_LACP_MODE_PASSIVE",
		3: "ETH_LAG_INTF_MEMBER_LACP_MODE_ACTIVE",
	}
	EthLagIntfMemberLacpMode_value = map[string]int32{
		"ETH_LAG_INTF_MEMBER_LACP_MODE_NULL":    0,
		"ETH_LAG_INTF_MEMBER_LACP_MODE_OFF":     1,
		"ETH_LAG_INTF_MEMBER_LACP_MODE_PASSIVE": 2,
		"ETH_LAG_INTF_MEMBER_LACP_MODE_ACTIVE":  3,
	}
)

func (x EthLagIntfMemberLacpMode) Enum() *EthLagIntfMemberLacpMode {
	p := new(EthLagIntfMemberLacpMode)
	*p = x
	return p
}

func (x EthLagIntfMemberLacpMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EthLagIntfMemberLacpMode) Descriptor() protoreflect.EnumDescriptor {
	return file_eth_lag_intf_types_proto_enumTypes[1].Descriptor()
}

func (EthLagIntfMemberLacpMode) Type() protoreflect.EnumType {
	return &file_eth_lag_intf_types_proto_enumTypes[1]
}

func (x EthLagIntfMemberLacpMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EthLagIntfMemberLacpMode.Descriptor instead.
func (EthLagIntfMemberLacpMode) EnumDescriptor() ([]byte, []int) {
	return file_eth_lag_intf_types_proto_rawDescGZIP(), []int{1}
}

type EthLagIntfMemberLacpTimeout int32

const (
	EthLagIntfMemberLacpTimeout_ETH_LAG_INTF_MEMBER_LACP_TIMEOUT_NULL  EthLagIntfMemberLacpTimeout = 0
	EthLagIntfMemberLacpTimeout_ETH_LAG_INTF_MEMBER_LACP_TIMEOUT_SHORT EthLagIntfMemberLacpTimeout = 1
	EthLagIntfMemberLacpTimeout_ETH_LAG_INTF_MEMBER_LACP_TIMEOUT_LONG  EthLagIntfMemberLacpTimeout = 2
)

// Enum value maps for EthLagIntfMemberLacpTimeout.
var (
	EthLagIntfMemberLacpTimeout_name = map[int32]string{
		0: "ETH_LAG_INTF_MEMBER_LACP_TIMEOUT_NULL",
		1: "ETH_LAG_INTF_MEMBER_LACP_TIMEOUT_SHORT",
		2: "ETH_LAG_INTF_MEMBER_LACP_TIMEOUT_LONG",
	}
	EthLagIntfMemberLacpTimeout_value = map[string]int32{
		"ETH_LAG_INTF_MEMBER_LACP_TIMEOUT_NULL":  0,
		"ETH_LAG_INTF_MEMBER_LACP_TIMEOUT_SHORT": 1,
		"ETH_LAG_INTF_MEMBER_LACP_TIMEOUT_LONG":  2,
	}
)

func (x EthLagIntfMemberLacpTimeout) Enum() *EthLagIntfMemberLacpTimeout {
	p := new(EthLagIntfMemberLacpTimeout)
	*p = x
	return p
}

func (x EthLagIntfMemberLacpTimeout) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EthLagIntfMemberLacpTimeout) Descriptor() protoreflect.EnumDescriptor {
	return file_eth_lag_intf_types_proto_enumTypes[2].Descriptor()
}

func (EthLagIntfMemberLacpTimeout) Type() protoreflect.EnumType {
	return &file_eth_lag_intf_types_proto_enumTypes[2]
}

func (x EthLagIntfMemberLacpTimeout) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EthLagIntfMemberLacpTimeout.Descriptor instead.
func (EthLagIntfMemberLacpTimeout) EnumDescriptor() ([]byte, []int) {
	return file_eth_lag_intf_types_proto_rawDescGZIP(), []int{2}
}

type EthLagIntf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of this lag interface.
	Intf *IntfId `protobuf:"bytes,1,opt,name=intf,proto3" json:"intf,omitempty"`
	// The aggregated capacity of this LAG interface, in Mbits/s.
	Speed uint64 `protobuf:"varint,2,opt,name=speed,proto3" json:"speed,omitempty"`
	// Number of required links to bring up this LAG interface.
	MinLinks uint32 `protobuf:"varint,3,opt,name=min_links,json=minLinks,proto3" json:"min_links,omitempty"`
	// Fallback type for this LAG interface.
	FallbackType EthLagIntfFallbackType `protobuf:"varint,4,opt,name=fallback_type,json=fallbackType,proto3,enum=eos.remote.EthLagIntfFallbackType" json:"fallback_type,omitempty"`
	// The LACP active mode timeout value, in seconds.
	FallbackTimeout uint32 `protobuf:"varint,5,opt,name=fallback_timeout,json=fallbackTimeout,proto3" json:"fallback_timeout,omitempty"`
	// Default value for the timeout above, in seconds.
	DefaultFallbackTimeout uint32 `protobuf:"varint,6,opt,name=default_fallback_timeout,json=defaultFallbackTimeout,proto3" json:"default_fallback_timeout,omitempty"`
}

func (x *EthLagIntf) Reset() {
	*x = EthLagIntf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntf) ProtoMessage() {}

func (x *EthLagIntf) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntf.ProtoReflect.Descriptor instead.
func (*EthLagIntf) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_types_proto_rawDescGZIP(), []int{0}
}

func (x *EthLagIntf) GetIntf() *IntfId {
	if x != nil {
		return x.Intf
	}
	return nil
}

func (x *EthLagIntf) GetSpeed() uint64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *EthLagIntf) GetMinLinks() uint32 {
	if x != nil {
		return x.MinLinks
	}
	return 0
}

func (x *EthLagIntf) GetFallbackType() EthLagIntfFallbackType {
	if x != nil {
		return x.FallbackType
	}
	return EthLagIntfFallbackType_ETH_LAG_INTF_FALLBACK_NULL
}

func (x *EthLagIntf) GetFallbackTimeout() uint32 {
	if x != nil {
		return x.FallbackTimeout
	}
	return 0
}

func (x *EthLagIntf) GetDefaultFallbackTimeout() uint32 {
	if x != nil {
		return x.DefaultFallbackTimeout
	}
	return 0
}

type EthLagIntfMembership struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface ID for the LAG interface.
	EthLagIntfId *IntfId `protobuf:"bytes,1,opt,name=eth_lag_intf_id,json=ethLagIntfId,proto3" json:"eth_lag_intf_id,omitempty"`
	// Indicates whether the interface is active in the LAG.
	Active bool `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
	// If this interface is not in the LAG, the reason is stated here.
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	// Time this interface got added to or removed from a LAG.
	MemberTime float64 `protobuf:"fixed64,4,opt,name=member_time,json=memberTime,proto3" json:"member_time,omitempty"`
	// The LACP mode this interface is configured in the LAG.
	Mode EthLagIntfMemberLacpMode `protobuf:"varint,5,opt,name=mode,proto3,enum=eos.remote.EthLagIntfMemberLacpMode" json:"mode,omitempty"`
}

func (x *EthLagIntfMembership) Reset() {
	*x = EthLagIntfMembership{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_lag_intf_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLagIntfMembership) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLagIntfMembership) ProtoMessage() {}

func (x *EthLagIntfMembership) ProtoReflect() protoreflect.Message {
	mi := &file_eth_lag_intf_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLagIntfMembership.ProtoReflect.Descriptor instead.
func (*EthLagIntfMembership) Descriptor() ([]byte, []int) {
	return file_eth_lag_intf_types_proto_rawDescGZIP(), []int{1}
}

func (x *EthLagIntfMembership) GetEthLagIntfId() *IntfId {
	if x != nil {
		return x.EthLagIntfId
	}
	return nil
}

func (x *EthLagIntfMembership) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *EthLagIntfMembership) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *EthLagIntfMembership) GetMemberTime() float64 {
	if x != nil {
		return x.MemberTime
	}
	return 0
}

func (x *EthLagIntfMembership) GetMode() EthLagIntfMemberLacpMode {
	if x != nil {
		return x.Mode
	}
	return EthLagIntfMemberLacpMode_ETH_LAG_INTF_MEMBER_LACP_MODE_NULL
}

var File_eth_lag_intf_types_proto protoreflect.FileDescriptor

var file_eth_lag_intf_types_proto_rawDesc = []byte{
	0x0a, 0x18, 0x65, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x65, 0x6f, 0x73, 0x2e,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x1a, 0x10, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x95, 0x02, 0x0a, 0x0a, 0x45, 0x74, 0x68,
	0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x6e, 0x74, 0x66, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x04, 0x69, 0x6e, 0x74, 0x66, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x6e,
	0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x12, 0x47, 0x0a, 0x0d, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x65, 0x6f, 0x73, 0x2e,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74,
	0x66, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x66,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x66,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x22, 0xdc, 0x01, 0x0a, 0x14, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x39, 0x0a, 0x0f, 0x65, 0x74, 0x68,
	0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x52, 0x0c, 0x65, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e,
	0x74, 0x66, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x2e, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x61, 0x63, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x2a,
	0xa0, 0x01, 0x0a, 0x16, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74, 0x66, 0x46, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x54,
	0x48, 0x5f, 0x4c, 0x41, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x46, 0x41, 0x4c, 0x4c, 0x42,
	0x41, 0x43, 0x4b, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x54,
	0x48, 0x5f, 0x4c, 0x41, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x46, 0x41, 0x4c, 0x4c, 0x42,
	0x41, 0x43, 0x4b, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x45, 0x54,
	0x48, 0x5f, 0x4c, 0x41, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x46, 0x41, 0x4c, 0x4c, 0x42,
	0x41, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x10, 0x02, 0x12, 0x24, 0x0a, 0x20,
	0x45, 0x54, 0x48, 0x5f, 0x4c, 0x41, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x46, 0x41, 0x4c,
	0x4c, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x49, 0x4e, 0x44, 0x49, 0x56, 0x49, 0x44, 0x55, 0x41, 0x4c,
	0x10, 0x03, 0x2a, 0xbe, 0x01, 0x0a, 0x18, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e, 0x74,
	0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x61, 0x63, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x26, 0x0a, 0x22, 0x45, 0x54, 0x48, 0x5f, 0x4c, 0x41, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f,
	0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4c, 0x41, 0x43, 0x50, 0x5f, 0x4d, 0x4f, 0x44, 0x45,
	0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x45, 0x54, 0x48, 0x5f, 0x4c,
	0x41, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4c,
	0x41, 0x43, 0x50, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x01, 0x12, 0x29,
	0x0a, 0x25, 0x45, 0x54, 0x48, 0x5f, 0x4c, 0x41, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x4d,
	0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4c, 0x41, 0x43, 0x50, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f,
	0x50, 0x41, 0x53, 0x53, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x28, 0x0a, 0x24, 0x45, 0x54, 0x48,
	0x5f, 0x4c, 0x41, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52,
	0x5f, 0x4c, 0x41, 0x43, 0x50, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x45, 0x10, 0x03, 0x2a, 0x9f, 0x01, 0x0a, 0x1b, 0x45, 0x74, 0x68, 0x4c, 0x61, 0x67, 0x49, 0x6e,
	0x74, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x61, 0x63, 0x70, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x12, 0x29, 0x0a, 0x25, 0x45, 0x54, 0x48, 0x5f, 0x4c, 0x41, 0x47, 0x5f, 0x49,
	0x4e, 0x54, 0x46, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4c, 0x41, 0x43, 0x50, 0x5f,
	0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x2a,
	0x0a, 0x26, 0x45, 0x54, 0x48, 0x5f, 0x4c, 0x41, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x4d,
	0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x4c, 0x41, 0x43, 0x50, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f,
	0x55, 0x54, 0x5f, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x10, 0x01, 0x12, 0x29, 0x0a, 0x25, 0x45, 0x54,
	0x48, 0x5f, 0x4c, 0x41, 0x47, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45,
	0x52, 0x5f, 0x4c, 0x41, 0x43, 0x50, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x5f, 0x4c,
	0x4f, 0x4e, 0x47, 0x10, 0x02, 0x42, 0x12, 0x5a, 0x10, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2f,
	0x45, 0x6f, 0x73, 0x53, 0x64, 0x6b, 0x52, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_eth_lag_intf_types_proto_rawDescOnce sync.Once
	file_eth_lag_intf_types_proto_rawDescData = file_eth_lag_intf_types_proto_rawDesc
)

func file_eth_lag_intf_types_proto_rawDescGZIP() []byte {
	file_eth_lag_intf_types_proto_rawDescOnce.Do(func() {
		file_eth_lag_intf_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_eth_lag_intf_types_proto_rawDescData)
	})
	return file_eth_lag_intf_types_proto_rawDescData
}

var file_eth_lag_intf_types_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_eth_lag_intf_types_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_eth_lag_intf_types_proto_goTypes = []interface{}{
	(EthLagIntfFallbackType)(0),      // 0: eos.remote.EthLagIntfFallbackType
	(EthLagIntfMemberLacpMode)(0),    // 1: eos.remote.EthLagIntfMemberLacpMode
	(EthLagIntfMemberLacpTimeout)(0), // 2: eos.remote.EthLagIntfMemberLacpTimeout
	(*EthLagIntf)(nil),               // 3: eos.remote.EthLagIntf
	(*EthLagIntfMembership)(nil),     // 4: eos.remote.EthLagIntfMembership
	(*IntfId)(nil),                   // 5: eos.remote.IntfId
}
var file_eth_lag_intf_types_proto_depIdxs = []int32{
	5, // 0: eos.remote.EthLagIntf.intf:type_name -> eos.remote.IntfId
	0, // 1: eos.remote.EthLagIntf.fallback_type:type_name -> eos.remote.EthLagIntfFallbackType
	5, // 2: eos.remote.EthLagIntfMembership.eth_lag_intf_id:type_name -> eos.remote.IntfId
	1, // 3: eos.remote.EthLagIntfMembership.mode:type_name -> eos.remote.EthLagIntfMemberLacpMode
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_eth_lag_intf_types_proto_init() }
func file_eth_lag_intf_types_proto_init() {
	if File_eth_lag_intf_types_proto != nil {
		return
	}
	file_intf_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_eth_lag_intf_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_lag_intf_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLagIntfMembership); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eth_lag_intf_types_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eth_lag_intf_types_proto_goTypes,
		DependencyIndexes: file_eth_lag_intf_types_proto_depIdxs,
		EnumInfos:         file_eth_lag_intf_types_proto_enumTypes,
		MessageInfos:      file_eth_lag_intf_types_proto_msgTypes,
	}.Build()
	File_eth_lag_intf_types_proto = out.File
	file_eth_lag_intf_types_proto_rawDesc = nil
	file_eth_lag_intf_types_proto_goTypes = nil
	file_eth_lag_intf_types_proto_depIdxs = nil
}
